
uniform/core.h,519
void getCoef(real_t *C, const real_t *dX, real_t &invR2, const real_t &invR) {getCoef1,0
void M2LSum(real_t *L, const real_t *C, const real_t*M) {M2LSum120,5706
void powerM(real_t *C, const real_t *dX) {powerM259,16250
void powerL(real_t *C, const real_t *dX) {powerL327,17871
void M2MSum(real_t *MI, const real_t *C, const real_t *MJ) {M2MSum423,20274
void L2LSum(real_t *LI, const real_t *C, const real_t *LJ) {L2LSum487,25224
void L2PSum(real_t *TRG, const real_t *C, const real_t *L) {L2PSum620,36362

uniform/evaluator.h,262
class Evaluator : public Kernel {Evaluator4,42
  bool printNow;printNow6,84
  Evaluator() : printNow(true) {}Evaluator9,110
  double getTime() const {getTime11,145
  void upwardPass() const {upwardPass17,275
  void downwardPass() {downwardPass27,483

uniform/parallelfmm.h,858
class ParallelFMM : public SerialFMM {ParallelFMM3,24
  int EXTERNAL;EXTERNAL5,72
  std::ofstream fid;fid6,88
  MPI_Request *requests;requests7,109
  void gatherMultipoles() {gatherMultipoles9,135
  ParallelFMM() {ParallelFMM27,917
  ~ParallelFMM() {~ParallelFMM42,1308
  void partitionComm() {partitionComm50,1427
  void P2PSend() {P2PSend82,2698
  void P2PRecv() {P2PRecv148,5695
  void M2LSend(int lev) {M2LSend185,7142
  void M2LRecv(int lev) {M2LRecv238,9233
  void rootGather() {rootGather268,10304
  void globM2MSend(int level) {globM2MSend279,10551
  void globM2MRecv(int level) {globM2MRecv317,12075
  void globM2M() {globM2M342,12975
  void globM2LSend(int level) {globM2LSend417,15906
  void globM2LRecv(int level) {globM2LRecv465,18024
  void globM2L() {globM2L497,19176
  void globL2L() {globL2L560,21505

uniform/main.cxx,47
int main(int argc, char ** argv) {main17,295

uniform/Makefile,0

uniform/kernels.h,2493
#define PP PP8,111
const int DP2P = 1; // Use 1 for parallelDP2P9,124
const int DM2L = 1; // Use 1 for parallelDM2L10,166
const int MTERM = PP*(PP+1)*(PP+2)/6;MTERM11,208
const int LTERM = (PP+1)*(PP+2)*(PP+3)/6;LTERM12,246
#define for_3d for_3d16,308
#define for_4d for_4d17,348
#define for_m for_m18,388
#define for_l for_l19,431
#define FMMMAX(FMMMAX20,474
#define FMMMIN(FMMMIN21,520
class Kernel {Kernel23,567
  int maxLevel;maxLevel25,590
  int maxGlobLevel;maxGlobLevel26,606
  int numBodies;numBodies27,626
  int numImages;numImages28,643
  int numCells;numCells29,660
  int numLeafs;numLeafs30,676
  int numGlobCells;numGlobCells31,692
  int numPartition[10][3];numPartition32,712
  int globLevelOffset[10];globLevelOffset33,739
  int numSendBodies;numSendBodies34,766
  int numSendCells;numSendCells35,787
  int numSendLeafs;numSendLeafs36,807
  int MPISIZE;MPISIZE37,827
  int MPIRANK;MPIRANK38,842
  real_t X0[3];X040,858
  real_t R0;R041,874
  real_t RGlob[3];RGlob42,887
  int *Index;Index43,906
  int *Index2;Index244,920
  int *Rank;Rank45,935
  real_t (*Ibodies)[4];Ibodies46,948
  real_t (*Jbodies)[4];Jbodies47,972
  real_t (*Multipole)[MTERM];Multipole48,996
  real_t (*Local)[LTERM];Local49,1026
  real_t (*globMultipole)[MTERM];globMultipole50,1052
  real_t (*globLocal)[LTERM];globLocal51,1086
  int (*Leafs)[2];Leafs52,1116
  float (*sendJbodies)[4];sendJbodies53,1135
  float (*recvJbodies)[4];recvJbodies54,1162
  float (*sendMultipole)[MTERM];sendMultipole55,1189
  float (*recvMultipole)[MTERM];recvMultipole56,1222
  int (*sendLeafs)[2];sendLeafs57,1255
  int (*recvLeafs)[2];recvLeafs58,1278
  inline void getIndex(int *ix, int index) const {getIndex61,1311
  void getCenter(real_t *dX, int index, int level) const {getCenter72,1558
  inline int getGlobKey(int *ix, int level) const {getGlobKey80,1772
  void P2P(int ibegin, int iend, int jbegin, int jend, real_t *periodic) const {P2P84,1915
  void P2P() const {P2P170,4937
  void P2M() const {P2M216,6539
  void M2M() const {M2M234,7082
  void M2L() const {M2L261,7938
  void L2L() const {L2L324,10252
  void L2P() const {L2P349,11035
  Kernel() : MPISIZE(1), MPIRANK(0) {}Kernel372,11711
  ~Kernel() {}~Kernel373,11750
  inline int getKey(int *ix, int level, bool levelOffset=true) const {getKey375,11766
  inline void getGlobIndex(int *ix, int index, int level) const {getGlobIndex385,12048

uniform/serialfmm.h,1315
class SerialFMM : public Evaluator {SerialFMM4,41
  int bodiesDispl[26];bodiesDispl6,89
  int bodiesCount[26];bodiesCount7,112
  int sendBodiesDispl[1024];sendBodiesDispl8,135
  int sendBodiesCount[1024];sendBodiesCount9,164
  int recvBodiesDispl[1024];recvBodiesDispl10,193
  int recvBodiesCount[1024];recvBodiesCount11,222
  int multipoleDispl[10][26];multipoleDispl12,251
  int multipoleCount[10][26];multipoleCount13,281
  int leafsDispl[26];leafsDispl14,311
  int leafsCount[26];leafsCount15,333
  int IX[10][3];IX16,355
  int gatherLevel;gatherLevel17,372
  MPI_Comm MPI_COMM_LOCAL, MPI_COMM_GLOBAL;MPI_COMM_LOCAL18,391
  MPI_Comm MPI_COMM_LOCAL, MPI_COMM_GLOBAL;MPI_COMM_GLOBAL18,391
  void checkPartition(int *maxPartition) {checkPartition21,445
  void setSendCounts() {setSendCounts51,1409
  inline void getIndex(int i, int *ix, real_t diameter) const {getIndex104,3252
  void sort(real_t (*bodies)[4], float (*buffer)[4], int *Index, int *Index2, int *key) const {sort111,3425
  void allocate(int N, int L, int I) {allocate133,4156
  void deallocate() {deallocate175,6053
  void partitioner(int level) {partitioner194,6456
  void sortBodies() const {sortBodies233,7920
  void buildTree() const {buildTree249,8363
  void periodicM2L() {periodicM2L273,9097

wrappers/test_charmm.f90,4592
module charmm_iocharmm_io1,0
  subroutine charmm_cor_write(charmm_cor_write4,27
  subroutine charmm_cor_read(charmm_cor_read66,2405
99  continue99174,6224
  subroutine bcast1(bcast1178,6282
  subroutine bcast3(bcast3193,6731
  subroutine bonded_terms(bonded_terms208,7202
  subroutine verify(verify309,10448
  subroutine energy(energy363,12611
  subroutine force_testing(force_testing417,14710
  subroutine print_energy(print_energy469,17014
  subroutine run_dynamics(run_dynamics506,18731
  subroutine pdb_frame(pdb_frame601,22287
  subroutine image_center(image_center629,23344
subroutine split_range(split_range711,25377
program mainmain724,25761
  logical test_forcetest_force728,25825
  character(len=128) filename,filename729,25846
  character(len=128) filename,nstpnstp729,25846
  integer dynstepsdynsteps730,25881
  ini731,25900
  integer i,ierr,ierr731,25900
  integer i,ierr,images,images731,25900
  integer i,ierr,images,ista,ista731,25900
  integer i,ierr,images,ista,iend,iend731,25900
  integer i,ierr,images,ista,iend,istat,istat731,25900
  integer i,ierr,images,ista,iend,istat,ksize,ksize731,25900
  integer i,ierr,images,ista,iend,istat,ksize,lnam,lnam731,25900
  integer i,ierr,images,ista,iend,istat,ksize,lnam,mpirank,mpirank731,25900
  integer i,ierr,images,ista,iend,istat,ksize,lnam,mpirank,mpisizempisize731,25900
  integer nat,nat732,25967
  integer nat,nglobal,nglobal732,25967
  integer nat,nglobal,verbose,verbose732,25967
  integer nat,nglobal,verbose,nbonds,nbonds732,25967
  integer nat,nglobal,verbose,nbonds,ntheta,ntheta732,25967
  integer nat,nglobal,verbose,nbonds,ntheta,imcentfrq,imcentfrq732,25967
  integer nat,nglobal,verbose,nbonds,ntheta,imcentfrq,printfrq,printfrq732,25967
  integer nat,nglobal,verbose,nbonds,ntheta,imcentfrq,printfrq,nresnres732,25967
  real(8) alpha,alpha733,26035
  real(8) alpha,sigma,sigma733,26035
  real(8) alpha,sigma,cuton,cuton733,26035
  real(8) alpha,sigma,cuton,cutoff,cutoff733,26035
  real(8) alpha,sigma,cuton,cutoff,average,average733,26035
  real(8) alpha,sigma,cuton,cutoff,average,pcycle,pcycle733,26035
  real(8) alpha,sigma,cuton,cutoff,average,pcycle,theta,theta733,26035
  real(8) alpha,sigma,cuton,cutoff,average,pcycle,theta,timetime733,26035
  real(8) pl2err,pl2err734,26096
  real(8) pl2err,fl2err,fl2err734,26096
  real(8) pl2err,fl2err,enerf,enerf734,26096
  real(8) pl2err,fl2err,enerf,enere,enere734,26096
  real(8) pl2err,fl2err,enerf,enere,grmsf,grmsf734,26096
  real(8) pl2err,fl2err,enerf,enere,grmsf,grmsegrmse734,26096
  integer,dimension (128) :: iseediseed735,26144
  integer,allocatable,dimension(:) :: icpumap,icpumap736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,numex736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,natex736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,atype736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,ib736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,jb,jb736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,jb,it,it736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,jb,it,jt,jt736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,jb,it,jt,kt,kt736,26179
  integer,allocatable,dimension(:) :: icpumap,numex,natex,atype,ib,jb,it,jt,kt,iresires736,26179
  real(8),parameter :: pi=pi737,26263
  real(8),allocatable,dimension(:) :: x,x738,26311
  real(8),allocatable,dimension(:) :: x,q,q738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,p2738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,f,f738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,f,f2,f2738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,f,f2,xc,xc738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,f,f2,xc,v,v738,26311
  real(8),allocatable,dimension(:) :: x,q,p,p2,f,f2,xc,v,massmass738,26311
  real(8),allocatable,dimension(:) :: rscale,rscale739,26373
  real(8),allocatable,dimension(:) :: rscale,gscale,gscale739,26373
  real(8),allocatable,dimension(:) :: rscale,gscale,fgscalefgscale739,26373
  real(8),allocatable,dimension(:,:) :: rbond,rbond740,26433
  real(8),allocatable,dimension(:,:) :: rbond,cbondcbond740,26433
  real(8),allocatable,dimension(:,:,:) :: aangle,aangle741,26485
  real(8),allocatable,dimension(:,:,:) :: aangle,canglecangle741,26485

wrappers/charmm3.cxx,1472
#define DIM DIM7,90
#define NN NN8,104
#define FN FN9,118
#define CN CN10,132
int common_stencil[DIM*CN] = {0};common_stencil11,147
int far_stencil[8*DIM*FN] = {0};far_stencil12,181
int near_stencil[8*DIM*NN] = {0};near_stencil13,214
static const double Celec = 332.0716;Celec17,343
int numImages;numImages18,381
Fmm * FMM;FMM19,396
int wrap(real_t bodies[4], real_t cycle) {wrap21,408
void unwrap(real_t bodies[4], real_t cycle, int iwrap) {unwrap36,694
extern "C" void fmm_init_(int & images, double &, int & verbose) {fmm_init_42,858
extern "C" void fmm_finalize_() {fmm_finalize_51,1086
extern "C" void fmm_partition_(int &, int *, double *, double *, double *, double &) {}fmm_partition_55,1137
extern "C" void fmm_coulomb_(int & numBodies, int *,fmm_coulomb_57,1226
extern "C" void ewald_coulomb_(int & numBodies, int *, double * x, double * q, double * p, double * f,ewald_coulomb_112,2813
extern "C" void direct_coulomb_(int & numBodies, int *, double * x, double * q, double * p, double * f, double & cycle) {direct_coulomb_154,4404
extern "C" void coulomb_exclusion_(int & numBodies, int *,coulomb_exclusion_205,6021
extern "C" void fmm_vanderwaals_(int & numBodies, int *, int * atype,fmm_vanderwaals_233,6968
extern "C" void direct_vanderwaals_(int & numBodies, int *, int * atype,direct_vanderwaals_276,8522
extern "C" void vanderwaals_exclusion_(int & numBodies, int *, int * atype,vanderwaals_exclusion_327,10196

wrappers/gromacs.cxx,1118
Args * args;args15,275
BaseMPI * baseMPI;baseMPI16,288
BoundBox * boundBox;boundBox17,307
BuildTree * localTree, * globalTree;localTree18,328
BuildTree * localTree, * globalTree;globalTree18,328
Partition * partition;partition19,365
Traversal * traversal;traversal20,388
TreeMPI * treeMPI;treeMPI21,411
UpDownPass * upDownPass;upDownPass22,430
Bodies buffer;buffer24,456
Bounds localBounds;localBounds25,471
Bounds globalBounds;globalBounds26,491
extern "C" void FMM_Init(int images) {FMM_Init28,513
extern "C" void FMM_Finalize() {FMM_Finalize60,1514
extern "C" void FMM_Partition(int & n, int * index, float * x, float * q, float cycle) {FMM_Partition72,1722
extern "C" void FMM_Coulomb(int n, float * x, float * q, float * p, float * f, float cycle) {FMM_Coulomb106,2817
extern "C" void Ewald_Coulomb(int n, float * x, float * q, float * p, float * f,Ewald_Coulomb167,4888
void MPI_Shift(float * var, int &nold, int mpisize, int mpirank) {MPI_Shift216,6539
extern "C" void Direct_Coulomb(int Ni, float * x, float * q, float * p, float * f, float cycle) {Direct_Coulomb237,7300

wrappers/petiga.cxx,1400
real_t cycle;cycle11,202
Bodies buffer;buffer12,216
Bounds globalBounds;globalBounds13,231
Bodies bbodies;bbodies14,252
Bodies vbodies;vbodies15,268
Cells bcells;bcells16,284
Cells vcells;vcells17,298
Args * args;args19,313
BaseMPI * baseMPI;baseMPI20,326
BoundBox * boundBox;boundBox21,345
BuildTree * localTree, * globalTree;localTree22,366
BuildTree * localTree, * globalTree;globalTree22,366
Partition * partition;partition23,403
Traversal * traversal;traversal24,426
TreeMPI * treeMPI;treeMPI25,449
UpDownPass * upDownPass;upDownPass26,468
void log_initialize() {log_initialize28,494
void log_finalize() {log_finalize38,775
extern "C" void FMM_Init(double eps2, int ncrit, int threads,FMM_Init45,929
extern "C" void FMM_Finalize() {FMM_Finalize94,2403
extern "C" void FMM_Partition(int & nb, double * xb, double * yb, double * zb, double * vb,FMM_Partition106,2611
extern "C" void FMM_BuildTree() {FMM_BuildTree139,3700
extern "C" void FMM_B2B(double * vi, double * vb, bool verbose) {FMM_B2B146,3973
extern "C" void FMM_V2B(double * vb, double * vv, bool verbose) {FMM_V2B180,5097
extern "C" void FMM_B2V(double * vv, double * vb, bool verbose) {FMM_B2V219,6356
extern "C" void FMM_V2V(double * vi, double * vv, bool verbose) {FMM_V2V258,7615
extern "C" void Direct(int ni, double * xi, double * yi, double * zi, double * vi,Direct292,8739

wrappers/test_petiga.cxx,127
void Validate(int n, double * vb, double * vd, int verbose) {Validate23,1007
int main(int argc, char ** argv) {main38,1613

wrappers/test_gromacs.cxx,47
int main(int argc, char ** argv) {main17,634

wrappers/charmm2.cxx,1623
static const double Celec = 332.0716;Celec23,376
Args * args;args25,415
BaseMPI * baseMPI;baseMPI26,428
BoundBox * boundBox;boundBox27,447
BuildTree * localTree, * globalTree;localTree28,468
BuildTree * localTree, * globalTree;globalTree28,468
Partition * partition;partition29,505
Traversal * traversal;traversal30,528
TreeMPI * treeMPI;treeMPI31,551
UpDownPass * upDownPass;upDownPass32,570
SerialFMM * FMM;FMM35,607
ParallelFMM * FMM;FMM37,630
Bodies buffer;buffer40,657
Bounds localBounds;localBounds41,672
Bounds globalBounds;globalBounds42,692
extern "C" void fmm_init_(int & images, double & theta, int & verbose) {fmm_init_44,714
extern "C" void fmm_finalize_() {fmm_finalize_80,1795
extern "C" void fmm_partition_(int & nglobal, int * icpumap, double * x, double * q,fmm_partition_93,2018
extern "C" void fmm_coulomb_(int & nglobal, int * icpumap,fmm_coulomb_141,3403
extern "C" void ewald_coulomb_(int & nglobal, int * icpumap, double * x, double * q, double * p, double * f,ewald_coulomb_299,8064
extern "C" void direct_coulomb_(int & nglobal, int * icpumap, double * x, double * q, double * p, double * f, double & cycle) {direct_coulomb_375,10504
extern "C" void coulomb_exclusion_(int & nglobal, int * icpumap,coulomb_exclusion_434,12299
extern "C" void fmm_vanderwaals_(int & nglobal, int * icpumap, int * atype,fmm_vanderwaals_467,13267
extern "C" void direct_vanderwaals_(int & nglobal, int * icpumap, int * atype,direct_vanderwaals_526,15112
extern "C" void vanderwaals_exclusion_(int & nglobal, int * icpumap, int * atype,vanderwaals_exclusion_580,16976

wrappers/charmm.cxx,1564
static const double Celec = 332.0716;Celec16,302
Args * args;args18,341
BaseMPI * baseMPI;baseMPI19,354
BoundBox * boundBox;boundBox20,373
BuildTree * localTree, * globalTree;localTree21,394
BuildTree * localTree, * globalTree;globalTree21,394
Partition * partition;partition22,431
Traversal * traversal;traversal23,454
TreeMPI * treeMPI;treeMPI24,477
UpDownPass * upDownPass;upDownPass25,496
Bodies buffer;buffer27,522
Bounds localBounds;localBounds28,537
Bounds globalBounds;globalBounds29,557
extern "C" void fmm_init_(int & images, double & theta, int & verbose) {fmm_init_31,579
extern "C" void fmm_finalize_() {fmm_finalize_60,1536
extern "C" void fmm_partition_(int & nglobal, int * icpumap, double * x, double * q,fmm_partition_72,1745
extern "C" void fmm_coulomb_(int & nglobal, int * icpumap,fmm_coulomb_119,3100
extern "C" void ewald_coulomb_(int & nglobal, int * icpumap, double * x, double * q, double * p, double * f,ewald_coulomb_205,5834
extern "C" void direct_coulomb_(int & nglobal, int * icpumap, double * x, double * q, double * p, double * f, double & cycle) {direct_coulomb_280,8244
extern "C" void coulomb_exclusion_(int & nglobal, int * icpumap,coulomb_exclusion_338,10009
extern "C" void fmm_vanderwaals_(int & nglobal, int * icpumap, int * atype,fmm_vanderwaals_370,10947
extern "C" void direct_vanderwaals_(int & nglobal, int * icpumap, int * atype,direct_vanderwaals_428,12762
extern "C" void vanderwaals_exclusion_(int & nglobal, int * icpumap, int * atype,vanderwaals_exclusion_481,14596

wrappers/Makefile,0

build-aux/install-sh,0

build-aux/compile,163
func_file_conv ()func_file_conv45,1654
func_cl_dashL ()func_cl_dashL83,2332
func_cl_dashl ()func_cl_dashl96,2578
func_cl_wrapper ()func_cl_wrapper130,3148

build-aux/missing,80
program_details ()program_details108,3168
give_advice ()give_advice129,3811

build-aux/depcomp,186
set_dir_from ()set_dir_from62,2114
set_base_from ()set_base_from72,2319
make_dummy_depfile ()make_dummy_depfile80,2581
aix_post_process_depfile ()aix_post_process_depfile87,2770

helmholtz/fmm.h,225
void evaluate(complex_t wavek, int numBodies, vec3 * Xj, complex_t * qj, complex_t * pi, cvec3 * Fi,evaluate1,0
void fmm(complex_t wavek, int numBodies, vec3 * Xj, complex_t * qj, complex_t * pi, cvec3 * Fi) {fmm129,4257

helmholtz/constants.h,110
const int maxLevel = 30;maxLevel1,0
const real_t eps = 1.0e-15;eps2,25
static int numele = 0;numele3,53

helmholtz/kernel.h,594
void P2P(int * icell, complex_t * pi, cvec3 * Fi, int * jcell, vec3 * Xj, complex_t * qj, complex_t wavek) {P2P1,0
void P2M(complex_t wavek, real_t scale, vec3 * Xj, complex_t * qj, int nj, vec3 Xi, complex_t Mi[P+1][2*P+1],P2M20,576
void M2M(complex_t wavek, real_t scalej, vec3 Xj, complex_t Mj[P+1][2*P+1],M2M62,1733
void M2L(complex_t wavek, real_t scalej, vec3 Xj, complex_t Mj[P+1][2*P+1],M2L145,4007
void L2L(complex_t wavek, real_t scalej, vec3 Xj, complex_t Lj[P+1][2*P+1],L2L260,7688
void L2P(complex_t wavek, real_t scalej, vec3 Xj, complex_t Lj[P+1][2*P+1],L2P380,11323

helmholtz/translate.h,936
void getAnm(real_t Anm1[P+1][P+1], real_t Anm2[P+1][P+1]) {getAnm1,0
void cart2sph(vec3 dX, real_t & r, real_t & theta, real_t & phi) {cart2sph16,461
void rotate(real_t theta, int nterms, complex_t Mnm[P+1][2*P+1],rotate22,622
void get_Ynm(int nterms, real_t x, real_t Ynm[P+1][P+1], real_t Anm1[P+1][P+1], real_t Anm2[P+1][P+1]) {get_Ynm109,3206
void get_Ynmd(int nterms, real_t x, real_t Ynm[P+1][P+1], real_t Ynmd[P+1][P+1],get_Ynmd126,3763
void get_hn(int nterms, complex_t z, real_t scale, complex_t * hn) {get_hn157,5021
void get_hnd(int nterms, complex_t z, real_t scale, complex_t * hn, complex_t * hnd) {get_hnd175,5473
void get_jn(int nterms, complex_t z, real_t scale, complex_t * jn, int ifder, complex_t * jnd) {get_jn196,6068
void polynomial(real_t x, int n, real_t & pol, real_t & der, real_t & sum) {polynomial260,7524
void legendre(int nquad, real_t xquad[2*P], real_t wquad[2*P]) {legendre282,8005

helmholtz/tree.h,539
void getBounds(vec3 * Xj, int numBodies, vec3 & X0, real_t & R0) {getBounds1,0
void reorder(vec3 X0, real_t R0, int level, int * iX, vec3 * Xj,reorder17,406
void growTree(vec3 * Xj, int numBodies, int (* cells)[10], int & numCells,growTree47,1266
void getList(int itype, int icell, int * list, int & nlist) {getList104,2894
void setList(int itype, int icell, int list) {setList116,3157
void setLists(int numCells) {setLists123,3330
void buildTree(vec3 * Xj, int numBodies, int & numCells, int * permutation,buildTree172,4665

helmholtz/main.cxx,47
int main(int argc, char ** argv) {main13,204

helmholtz/arrays.h,192
int (* listOffset)[3];listOffset1,0
int (* lists)[2];lists2,23
int (* cells)[10];cells3,41
int * levelOffset;levelOffset4,60
int (* nodes)[10];nodes5,79
vec3 * centers;centers6,98

helmholtz/Makefile,0

laplace/fmm.h,176
void evaluate(int numBodies, vec3 * Xj, real_t * qj, real_t * pi, vec3 * Fi,evaluate1,0
void fmm(int numBodies, vec3 * Xj, real_t * qj, real_t * pi, vec3 * Fi) {fmm97,2932

laplace/constants.h,110
const int maxLevel = 30;maxLevel1,0
const real_t eps = 1.0e-15;eps2,25
static int numele = 0;numele3,53

laplace/kernel.h,523
void P2P(int * icell, real_t * pi, vec3 * Fi, int * jcell, vec3 * Xj, real_t * qj) {P2P1,0
void P2M(vec3 * Xj, real_t * qj, int nj, vec3 Xi, complex_t Mi[NTERM]) {P2M18,519
void M2M(vec3 Xj, complex_t Mj[NTERM], vec3 Xi, complex_t Mi[NTERM]) {M2M41,1094
void M2L(vec3 Xj, complex_t Mj[NTERM], vec3 Xi, complex_t Li[NTERM]) {M2L68,1924
void L2L(vec3 Xj, complex_t Lj[NTERM], vec3 Xi, complex_t Li[NTERM]) {L2L97,2717
void L2P(vec3 Xj, complex_t Lj[NTERM], vec3 * Xi, int ni, real_t * pi, vec3 * Fi) {L2P126,3541

laplace/translate.h,446
#define ODDEVEN(ODDEVEN1,0
#define IPOW2N(IPOW2N2,47
void cart2sph(real_t & r, real_t & theta, real_t & phi, vec3 dX) {cart2sph5,122
void sph2cart(real_t r, real_t theta, real_t phi, T spherical, T & cartesian) {sph2cart12,304
void evalMultipole(real_t rho, real_t alpha, real_t beta, complex_t * Ynm, complex_t * YnmTheta) {evalMultipole23,765
void evalLocal(real_t rho, real_t alpha, real_t beta, complex_t * Ynm) {evalLocal61,1846

laplace/tree.h,539
void getBounds(vec3 * Xj, int numBodies, vec3 & X0, real_t & R0) {getBounds1,0
void reorder(vec3 X0, real_t R0, int level, int * iX, vec3 * Xj,reorder17,406
void growTree(vec3 * Xj, int numBodies, int (* cells)[10], int & numCells,growTree47,1266
void getList(int itype, int icell, int * list, int & nlist) {getList104,2894
void setList(int itype, int icell, int list) {setList116,3157
void setLists(int numCells) {setLists123,3330
void buildTree(vec3 * Xj, int numBodies, int & numCells, int * permutation,buildTree172,4665

laplace/main.cxx,47
int main(int argc, char ** argv) {main13,204

laplace/arrays.h,192
int (* listOffset)[3];listOffset1,0
int (* lists)[2];lists2,23
int (* cells)[10];cells3,41
int * levelOffset;levelOffset4,60
int (* nodes)[10];nodes5,79
vec3 * centers;centers6,98

laplace/Makefile,0

gpu/grouptargets.h,508
#define NBITS NBITS3,14
  __device__ unsigned int numTargetGlob= 0;numTargetGlob9,171
  void swap(int & a, int & b) {swap12,229
  uint64_t getHilbert(int3 iX) {getHilbert17,304
  void getKeys(const int numBodies,getKeys50,1180
  void permuteBodies(const int numBodies,permuteBodies66,1722
  void maskKeys(const int numBodies,maskKeys76,2015
  void getTargetRange(const int numBodies,getTargetRange101,2843
class Group {Group120,3587
  int targets(cudaVec<fvec4> & bodyPos,targets122,3609

gpu/traversal.h,842
#define MEM_PER_WARP MEM_PER_WARP6,77
#define IF(IF7,117
  int ringAddr(const int i) {ringAddr11,185
  bool applyMAC(const fvec3 sourceCenter,applyMAC16,284
  void approxAcc(fvec4 acc_i[2],approxAcc29,630
  void approxAcc(fvec4 acc_i[2],approxAcc58,1488
  uint2 traverseWarp(fvec4 * acc_i,traverseWarp88,2402
  __device__ uint64_t     sumP2PGlob = 0;sumP2PGlob254,15225
  __device__ unsigned int maxP2PGlob = 0;maxP2PGlob255,15267
  __device__ uint64_t     sumM2PGlob = 0;sumM2PGlob256,15309
  __device__ unsigned int maxM2PGlob = 0;maxM2PGlob257,15351
    void traverse(const int numTargets,traverse260,15437
  void directKernel(const int numSource,directKernel358,18841
class Traversal {Traversal404,20433
  fvec4 approx(const int numTargets,approx406,20459
  void direct(const int numTarget,direct458,22577

gpu/upwardpass.h,460
  fvec4 setCenter(const int begin, const int end) {setCenter6,75
  fvec4 setCenter(const int begin, const int end, fvec4 * posGlob) {setCenter28,607
    void upwardPass(const int level,upwardPass50,1156
    void setMAC(const int numCells, const float invTheta, fvec4 * sourceCenter,setMAC92,2572
    void normalize(const int numCells, fvec4 * Multipole) {normalize110,3288
class Pass {Pass123,3718
  void upward(const int numLeafs,upward125,3739

gpu/buildtree.h,1599
  __constant__ int maxNodesGlob;maxNodesGlob7,107
  __device__ Box boxGlob;boxGlob8,140
  __device__ unsigned int counterGlob = 0;counterGlob9,166
  __device__ unsigned int numNodesGlob = 0;numNodesGlob10,209
  __device__ unsigned int numLeafsGlob = 0;numLeafsGlob11,253
  __device__ unsigned int numLevelsGlob = 0;numLevelsGlob12,297
  __device__ unsigned int numCellsGlob = 0;numCellsGlob13,342
  __device__ int * octantSizePool;octantSizePool14,386
  __device__ int * octantSizeScanPool;octantSizeScanPool15,421
  __device__ int * subOctantSizeScanPool;subOctantSizeScanPool16,460
  __device__ int * blockCounterPool;blockCounterPool17,502
  __device__ int2 * bodyRangePool;bodyRangePool18,539
  __device__ CellData * sourceCells;sourceCells19,574
  int getOctant(const Box &box, const fvec4 &body) {getOctant22,641
  Box getChild(const Box &box, const int octant) {getChild27,831
  fvec3 minBlock(fvec3 Xmin) {minBlock37,1141
  fvec3 maxBlock(fvec3 Xmax) {maxBlock67,2154
  void getBounds(const int numBodies,getBounds97,3167
    void buildOctant(float4 box4,buildOctant142,4456
  __global__ void getRootOctantSize(const int numBodies,getRootOctantSize368,13917
  void buildOctree(const int numBodies,buildOctree398,14972
  void getKeys(const int numCells,getKeys446,16617
  void getLevelRange(const int numCells,getLevelRange460,17030
  void getPermutation(const int numCells,getPermutation475,17577
  void permuteCells(const int numCells,permuteCells485,17847
class Build {Build503,18397
  int3 tree(cudaVec<fvec4> & bodyPos,tree506,18441

gpu/kernel.h,6115
  struct Index {Index5,61
    static const int      I = Index<nx,ny+1,nz-1>::I + 1;I6,78
    static const uint64_t F = Index<nx,ny,nz-1>::F * nz;F7,136
    float power(const fvec3 &dX) {power9,240
  struct Index<nx,ny,0> {Index15,365
    static const int      I = Index<nx+1,0,ny-1>::I + 1;I16,391
    static const uint64_t F = Index<nx,ny-1,0>::F * ny;F17,448
    float power(const fvec3 &dX) {power19,551
  struct Index<nx,0,0> {Index25,667
    static const int      I = Index<0,0,nx-1>::I + 1;I26,692
    static const uint64_t F = Index<nx-1,0,0>::F * nx;F27,746
    float power(const fvec3 &dX) {power29,848
  struct Index<0,0,0> {Index35,957
    static const int      I = 0;I36,981
    static const uint64_t F = 1;F37,1014
    float power(const fvec3&) { return 1.0f; }power39,1094
  struct DerivativeTerm {DerivativeTerm44,1166
    static const int c = 1 - 2 * n;c45,1192
    void invR(float *invRN, const float &invR2) {invR47,1275
  struct DerivativeTerm<0> {DerivativeTerm54,1437
    void invR(float*, const float&) {}invR56,1513
  struct DerivativeSum {DerivativeSum61,1615
    static const int cx = nx * (nx - 1) / 2;cx62,1640
    static const int cy = ny * (ny - 1) / 2;cy63,1685
    static const int cz = nz * (nz - 1) / 2;cz64,1730
    static const int n = nx + ny + nz;n65,1775
    static const int d = depth > 0 ? depth : 1;d66,1814
    float loop(float *invRN, const fvec3 &dX) {loop68,1909
  struct DerivativeSum<depth,nx,ny,nz,6> {DerivativeSum77,2278
    static const int cx = nx * (nx - 1) / 2;cx78,2321
    static const int cy = ny * (ny - 1) / 2;cy79,2366
    static const int n = nx + ny + nz;n80,2411
    static const int d = depth > 0 ? depth : 1;d81,2450
    float loop(float *invRN, const fvec3 &dX) {loop83,2545
  struct DerivativeSum<depth,nx,ny,nz,5> {DerivativeSum91,2847
    static const int cx = nx * (nx - 1) / 2;cx92,2890
    static const int cz = nz * (nz - 1) / 2;cz93,2935
    static const int n = nx + ny + nz;n94,2980
    static const int d = depth > 0 ? depth : 1;d95,3019
    float loop(float *invRN, const fvec3 &dX) {loop97,3114
  struct DerivativeSum<depth,nx,ny,nz,4> {DerivativeSum105,3416
    static const int cx = nx * (nx - 1) / 2;cx106,3459
    static const int n = nx + ny + nz;n107,3504
    static const int d = depth > 0 ? depth : 1;d108,3543
    float loop(float *invRN, const fvec3 &dX) {loop110,3638
  struct DerivativeSum<depth,nx,ny,nz,3> {DerivativeSum117,3871
    static const int cy = ny * (ny - 1) / 2;cy118,3914
    static const int cz = nz * (nz - 1) / 2;cz119,3959
    static const int n = nx + ny + nz;n120,4004
    static const int d = depth > 0 ? depth : 1;d121,4043
    float loop(float *invRN, const fvec3 &dX) {loop123,4138
  struct DerivativeSum<depth,nx,ny,nz,2> {DerivativeSum131,4440
    static const int cy = ny * (ny - 1) / 2;cy132,4483
    static const int n = nx + ny + nz;n133,4528
    static const int d = depth > 0 ? depth : 1;d134,4567
    float loop(float *invRN, const fvec3 &dX) {loop136,4662
  struct DerivativeSum<depth,nx,ny,nz,1> {DerivativeSum143,4895
    static const int cz = nz * (nz - 1) / 2;cz144,4938
    static const int n = nx + ny + nz;n145,4983
    static const int d = depth > 0 ? depth : 1;d146,5022
    float loop(float *invRN, const fvec3 &dX) {loop148,5117
  struct DerivativeSum<depth,nx,ny,nz,0> {DerivativeSum155,5348
    static const int n = nx + ny + nz;n156,5391
    static const int d = depth > 0 ? depth : 1;d157,5430
    float loop(float *invRN, const fvec3 &dX) {loop159,5525
  struct MultipoleSum {MultipoleSum166,5716
    float kernel(const fvec3 &dX, const fvecP &M) {kernel168,5787
  struct MultipoleSum<nx,ny,nz,kx,ky,0> {MultipoleSum177,6059
    float kernel(const fvec3 &dX, const fvecP &M) {kernel179,6148
  struct MultipoleSum<nx,ny,nz,kx,0,0> {MultipoleSum188,6405
    float kernel(const fvec3 &dX, const fvecP &M) {kernel190,6493
  struct MultipoleSum<nx,ny,nz,0,0,0> {MultipoleSum199,6735
    float kernel(const fvec3 &dX, const fvecP &M) {kernel201,6822
  struct Kernels {Kernels210,7007
    static const int n = nx + ny + nz;n211,7026
    static const int x = nx > 0;x212,7065
    static const int y = ny > 0;y213,7098
    static const int z = nz > 0;z214,7131
    static const int flag = (nx>1)*4+(ny>1)*2+(nz>1);flag215,7164
    void P2M(fvecP &M, const fvec3 &dX) {P2M217,7265
    void M2M(fvecP &MI, const fvec3 &dX, const fvecP &MJ) {M2M222,7486
    void M2P(fvec4 &TRG, float *invRN, const fvec3 &dX, const fvecP &M) {M2P227,7714
  struct Kernels<nx,ny,0> {Kernels238,8149
    static const int n = nx + ny;n239,8177
    static const int x = nx > 0;x240,8211
    static const int y = ny > 0;y241,8244
    static const int flag = (nx>1)*4+(ny>1)*2;flag242,8277
    void P2M(fvecP &M, const fvec3 &dX) {P2M244,8371
    void M2M(fvecP &MI, const fvec3 &dX, const fvecP &MJ) {M2M249,8588
    void M2P(fvec4 &TRG, float *invRN, const fvec3 &dX, const fvecP &M) {M2P254,8813
  struct Kernels<nx,0,0> {Kernels264,9182
    static const int n = nx;n265,9209
    static const int flag = (nx>1)*4;flag266,9238
    void P2M(fvecP &M, const fvec3 &dX) {P2M268,9323
    void M2M(fvecP &MI, const fvec3 &dX, const fvecP &MJ) {M2M273,9534
    void M2P(fvec4 &TRG, float *invRN, const fvec3 &dX, const fvecP &M) {M2P278,9754
  struct Kernels<0,0,2> {Kernels288,10060
    void P2M(fvecP &M, const fvec3 &dX) {P2M290,10133
    void M2M(fvecP &MI, const fvec3 &dX, const fvecP &MJ) {M2M295,10338
    void M2P(fvec4 &TRG, float *invRN, const fvec3 &dX, const fvecP &M) {M2P300,10553
  struct Kernels<0,0,0> {Kernels312,10979
    void P2M(fvecP &M, const fvec3 &dX) {}P2M314,11052
    void M2M(fvecP &MI, const fvec3 &dX, const fvecP &MJ) {M2M316,11142
    void M2P(fvec4 &TRG, float *invRN, const fvec3&, const fvecP&) {M2P320,11320
  void P2M(const int begin,P2M327,11457
  void M2M(const int begin,M2M342,11795
  fvec4 P2P(fvec4 acc,P2P357,12163
  fvec4 M2P(fvec4 acc,M2P376,12616

gpu/cudavec.h,957
class cudaVec {cudaVec4,35
  bool PIN;PIN6,60
  int SIZE;SIZE7,72
  T * HOST;HOST8,84
  T * DEVC;DEVC9,96
  void dealloc() {dealloc11,109
  cudaVec() : PIN(false), SIZE(0), HOST(NULL), DEVC(NULL) {}cudaVec20,274
  cudaVec(int size, bool pin=false) : PIN(pin), SIZE(size) {cudaVec21,335
  ~cudaVec() {~cudaVec25,574
  void alloc(int size, bool pin=false) {alloc29,609
  void resize(int size) {resize37,876
  void zeros() {zeros41,924
  void ones() {ones45,1003
  void d2h() {d2h49,1081
  void d2h(int size) {d2h54,1202
  void h2d() {h2d59,1331
  void h2d(int size) {h2d64,1452
  void bind(texture<S,1,cudaReadModeElementType> &tex) {bind70,1604
  void unbind(texture<S,1,cudaReadModeElementType> &tex) {unbind79,1930
  T& operator[] (int i) const { return HOST[i]; }operator []83,2038
  T* h() const { return HOST; }h84,2088
  T* d() const { return DEVC; }d85,2120
  int size() const { return SIZE; }size86,2152

gpu/unroll.h,2167
#define unroll_hunroll_h2,17
namespace Ops {Ops4,35
  template<typename T> struct Assign {Assign5,51
    const T operator() (T & lhs, const T & rhs) const {operator ()7,130
  template<typename T> struct Add {Add11,221
    const T operator() (T & lhs, const T & rhs) const {operator ()13,297
  template<typename T> struct Sub {Sub17,389
    const T operator() (T & lhs, const T & rhs) const {operator ()19,465
  template<typename T> struct Mul {Mul23,557
    const T operator() (T & lhs, const T & rhs) const {operator ()25,633
  template<typename T> struct Div {Div29,725
    const T operator() (T & lhs, const T & rhs) const {operator ()31,801
  template<typename T> struct Gt {Gt35,893
    bool operator() (T & lhs, const T & rhs) const {operator ()37,968
  template<typename T> struct Lt {Lt41,1057
    bool operator() (T & lhs, const T & rhs) const {operator ()43,1132
  template<typename T> struct And {And47,1221
    int operator() (int & lhs, const int & rhs) const {operator ()49,1297
  template<typename T> struct Or {Or53,1389
    int operator() (int & lhs, const int & rhs) const {operator ()55,1464
  template<typename T> struct Negate {Negate59,1556
    T operator() (T & lhs, const T & rhs) const {operator ()61,1635
  template<typename T> struct Min {Min65,1721
    T operator() (T & lhs, const T & rhs) const {operator ()67,1797
  template<typename T> struct Max {Max71,1894
    T operator() (T & lhs, const T & rhs) const {operator ()73,1970
  template<typename T> struct Abs {Abs77,2067
    T operator() (T & lhs, const T & rhs) const {operator ()79,2143
  template<typename T> struct Rsqrt {Rsqrt83,2235
    T operator() (T & lhs, const T & rhs) const {operator ()85,2313
struct Unroll {Unroll92,2450
  static void loop(T * lhs, const T * rhs) {loop94,2504
  static void loop(T * lhs, const T rhs) {loop100,2682
  static const T reduce(const T * val) {reduce106,2853
struct Unroll<Op,T,1> {Unroll113,3033
  static void loop(T * lhs, const T * rhs) {loop115,3095
  static void loop(T * lhs, const T rhs) {loop120,3231
  static const T reduce(const T * val) {reduce125,3362

gpu/types.h,2574
#define WARP_SIZE2 WARP_SIZE23,14
#define WARP_SIZE WARP_SIZE4,35
#define NTHREAD2 NTHREAD25,56
#define NTHREAD NTHREAD6,75
#define CUDA_SAFE_CALL(CUDA_SAFE_CALL7,95
const int P = 4;P18,308
const int P = 4;P20,331
#define WARP_PER_CELL WARP_PER_CELL22,355
const int NTERM = P*(P+1)*(P+2)/6;NTERM23,379
const int NVEC4 = (NTERM-1)/4+1;NVEC424,414
typedef vec<3,float> fvec3;fvec325,447
typedef vec<4,float> fvec4;fvec426,475
typedef vec<NTERM,float> fvecP;fvecP27,503
typedef vec<4,kahan<float> > kvec4;kvec428,535
texture<uint4,  1, cudaReadModeElementType> texCell;texCell30,572
texture<float4, 1, cudaReadModeElementType> texCellCenter;texCellCenter31,625
texture<float4, 1, cudaReadModeElementType> texMultipole;texMultipole32,684
texture<float4, 1, cudaReadModeElementType> texBody;texBody33,742
struct Box {Box36,834
  fvec3 X;                                                      //!< Box centerX37,847
  float R;                                                      //!< Box radiusR38,927
struct Bounds {Bounds42,1048
  fvec3 Xmin;                                                   //!< Minimum value of coordinatesXmin43,1064
  fvec3 Xmax;                                                   //!< Maximum value of coordinatesXmax44,1162
class CellData {CellData47,1264
  static const int CHILD_SHIFT = 29;CHILD_SHIFT49,1290
  static const int CHILD_MASK  = ~(0x7U << CHILD_SHIFT);CHILD_MASK50,1327
  static const int LEVEL_SHIFT = 27;LEVEL_SHIFT51,1384
  static const int LEVEL_MASK  = ~(0x1FU << LEVEL_SHIFT);LEVEL_MASK52,1421
  uint4 data;data53,1479
  CellData(const unsigned int level,CellData56,1523
  CellData(const uint4 data) : data(data) {}CellData67,1947
  int level() const { return data.x >> LEVEL_SHIFT; }level69,2014
  int parent() const { return data.x & LEVEL_MASK; }parent71,2090
  int child() const { return data.y & CHILD_MASK; }child73,2165
  int nchild() const { return (data.y >> CHILD_SHIFT)+1; }nchild75,2239
  int body() const { return data.z; }body77,2320
  int nbody() const { return data.w; }nbody79,2380
  bool isLeaf() const { return data.y == 0; }isLeaf81,2441
  bool isNode() const { return !isLeaf(); }isNode83,2509
  void setParent(const unsigned int parent) {setParent85,2575
  void setChild(const unsigned int child) {setChild89,2695
fvec3 make_fvec3(fvec4 v) {make_fvec395,2817
void kernelSuccess(const char kernel[] = "kernel") {kernelSuccess104,2940
void cudaSafeCall(cudaError err, const char *file, const int line) {cudaSafeCall114,3229

gpu/dataset.h,298
class Dataset {Dataset7,87
  unsigned long n;n9,112
  void printDots(int i) {printDots11,132
  bool read(const char * filename) {read19,269
  void write(const char * filename) {write34,600
  std::vector<kvec4> pos;pos42,806
  Dataset(unsigned long _n) : n(_n), pos(_n) {Dataset43,832

gpu/logger.h,48
static inline double get_time() {get_time4,36

gpu/kahan.h,2349
#define kahan_hkahan_h2,16
#define __host____host__5,71
#define __device____device__6,88
#define __forceinline____forceinline__7,107
struct kahan {kahan11,204
  T s;s12,219
  T c;c13,226
  kahan(){}                                                     // Default constructorkahan15,271
  kahan(const T &v) {                                           // Copy constructor (scalar)kahan17,396
  kahan(const kahan &v) {                                       // Copy constructor (structure)kahan22,553
  ~kahan(){}                                                    // Destructor~kahan27,717
  const kahan &operator=(const T v) {                           // Scalar assignmentoperator =29,833
  const kahan &operator+=(const T v) {                          // Scalar compound assignment (add)operator +=35,1000
  const kahan &operator-=(const T v) {                          // Scalar compound assignment (subtract)operator -=43,1226
  const kahan &operator*=(const T v) {                          // Scalar compound assignment (multiply)operator *=51,1460
  const kahan &operator/=(const T v) {                          // Scalar compound assignment (divide)operator /=57,1650
  const kahan &operator=(const kahan &v) {                      // Vector assignmentoperator =63,1838
  const kahan &operator+=(const kahan &v) {                     // Vector compound assignment (add)operator +=69,2009
  const kahan &operator-=(const kahan &v) {                     // Vector compound assignment (subtract)operator -=81,2301
  const kahan &operator*=(const kahan &v) {                     // Vector compound assignment (multiply)operator *=93,2602
  const kahan &operator/=(const kahan &v) {                     // Vector compound assignment (divide)operator /=99,2812
  kahan operator-() const {                                     // Vector arithmetic (negation)operator -105,3020
  operator       T ()       {return s+c;}                       // Type-casting (lvalue)operator T112,3225
  operator const T () const {return s+c;}                       // Type-casting (rvalue) operator const T114,3352
  friend std::ostream &operator<<(std::ostream &s, const kahan &v) {// Output streamoperator <<115,3442
  friend std::istream &operator>>(std::istream &s, kahan &v) {  // Input streamoperator >>119,3567

gpu/Makefile,187
NVCC = /usr/local/cuda-5.5/bin/nvcc -g -use_fast_math -arch=sm_35 -rdc=trueNVCC3,16
LFLAGS = -lcudadevrtLFLAGS4,92
SRC = thrust.cu serial.cuSRC7,158
OBJ = $(SRC:%.cu=%.o)OBJ9,185

gpu/warpscan.h,677
  void getMinMax(fvec3 & _Xmin, fvec3 & _Xmax, const fvec3 & pos) {getMinMax5,55
  uint shflScan(uint partial, uint offset) {shflScan28,853
  uint inclusiveScanInt(const int value) {inclusiveScanInt40,1148
  int lanemask_lt() {lanemask_lt51,1366
  int exclusiveScanBool(const bool p) {exclusiveScanBool58,1505
  int reduceBool(const bool p) {reduceBool64,1649
  int lanemask_le() {lanemask_le72,1795
  int shflSegScan(int partial, uint offset, uint distance) {shflSegScan79,1934
  int inclusiveSegscan(int value, const int distance) {inclusiveSegscan92,2283
  int inclusiveSegscanInt(const int packedValue, const int carryValue) {inclusiveSegscanInt99,2473

gpu/vec.h,37856
#define vec_hvec_h2,14
#define NEWTON NEWTON4,47
class vec {vec9,211
  T data[N];data11,233
  vec(){}                                                       // Default constructorvec13,255
  vec(const T &v) {                                             // Copy constructor (scalar)vec14,342
  vec(const vec &v) {                                           // Copy constructor (vector)vec17,480
  ~vec(){}                                                      // Destructor~vec20,621
  const vec &operator=(const T v) {                             // Scalar assignmentoperator =21,699
  const vec &operator+=(const T v) {                            // Scalar compound assignment (add)operator +=25,847
  const vec &operator-=(const T v) {                            // Scalar compound assignment (subtract)operator -=29,1011
  const vec &operator*=(const T v) {                            // Scalar compound assignment (multiply)operator *=33,1180
  const vec &operator/=(const T v) {                            // Scalar compound assignment (divide)operator /=37,1349
  const vec &operator>=(const T v) {                            // Scalar compound assignment (greater than)operator >=41,1516
  const vec &operator<=(const T v) {                            // Scalar compound assignment (less than)operator <=45,1689
  const vec &operator&=(const T v) {                            // Scalar compound assignment (bitwise and)operator &=49,1859
  const vec &operator|=(const T v) {                            // Scalar compound assignment (bitwise or)operator |=53,2031
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =57,2202
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=61,2353
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=65,2520
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=69,2692
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=73,2864
  const vec &operator>=(const vec &v) {                         // Vector compound assignment (greater than)operator >=77,3034
  const vec &operator<=(const vec &v) {                         // Vector compound assignment (less than)operator <=81,3210
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=85,3383
  const vec &operator|=(const vec &v) {                         // Vector compound assignment (bitwise or)operator |=89,3558
  vec operator+(const T v) const {                              // Scalar arithmetic (add)operator +93,3732
  vec operator-(const T v) const {                              // Scalar arithmetic (subtract)operator -96,3855
  vec operator*(const T v) const {                              // Scalar arithmetic (multiply)operator *99,3983
  vec operator/(const T v) const {                              // Scalar arithmetic (divide)operator /102,4111
  vec operator>(const T v) const {                              // Scalar arithmetic (greater than)operator >105,4237
  vec operator<(const T v) const {                              // Scalar arithmetic (less than)operator <108,4369
  vec operator&(const T v) const {                              // Scalar arithmetic (bitwise and)operator &111,4498
  vec operator|(const T v) const {                              // Scalar arithmetic (bitwise or)operator |114,4629
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +117,4759
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -120,4882
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *123,5010
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /126,5138
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >129,5264
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <132,5396
  vec operator&(const vec &v) const {                           // Vector arithmetic (bitwise and)operator &135,5525
  vec operator|(const vec &v) const {                           // Vector arithmetic (bitwise or)operator |138,5656
  vec operator-() const {                                       // Vector arithmetic (negation)operator -141,5786
  T &operator[](int i) {                                        // Indexing (lvalue)operator []146,5965
  const T &operator[](int i) const {                            // Indexing (rvalue)operator []149,6074
  operator       T* ()       {return data;}                     // Type-casting (lvalue)operator T*152,6183
  operator const T* () const {return data;}                     // Type-casting (rvalue)operator const T*153,6272
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<154,6361
  friend T sum(const vec &v) {                                  // Sum vectorsum158,6523
  friend T norm(const vec &v) {                                 // L2 norm squarednorm163,6680
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin168,6849
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax173,7037
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt178,7225
  friend void wrap(vec &v, const T &w) {                        // Wrap around periodic boundarywrap183,7410
class vec {vec193,7674
  T data[N];data195,7696
  vec(){}                                                       // Default constructorvec198,7756
  vec(const T &v) {                                             // Copy constructor (scalar)vec200,7881
  vec(const vec &v) {                                           // Copy constructor (vector)vec204,8062
  vec(const float4 &v) {                                        // Copy constructor (float4)vec208,8243
  vec(const float x, const float y, const float z, const float w) {// Copy constructor (4 floats)vec215,8454
  vec(const float x, const float y, const float z) {            // Copy constructor (3 floats)vec222,8662
  ~vec(){}                                                      // Destructor~vec228,8850
  const vec &operator=(const T v) {                             // Scalar assignmentoperator =230,8966
  const vec &operator+=(const T v) {                            // Scalar compound assignment (add)operator +=235,9157
  const vec &operator-=(const T v) {                            // Scalar compound assignment (subtract)operator -=240,9360
  const vec &operator*=(const T v) {                            // Scalar compound assignment (multiply)operator *=245,9568
  const vec &operator/=(const T v) {                            // Scalar compound assignment (divide)operator /=250,9776
  const vec &operator>=(const T v) {                            // Scalar compound assignment (greater than)operator >=255,9982
  const vec &operator<=(const T v) {                            // Scalar compound assignment (less than)operator <=260,10193
  const vec &operator&=(const T v) {                            // Scalar compound assignment (bitwise and)operator &=265,10401
  const vec &operator|=(const T v) {                            // Scalar compound assignment (bitwise or)operator |=270,10612
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =275,10821
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=280,11012
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=285,11215
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=290,11423
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=295,11631
  const vec &operator>=(const vec &v) {                         // Vector compound assignment (greater than)operator >=300,11837
  const vec &operator<=(const vec &v) {                         // Vector compound assignment (less than)operator <=305,12048
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=310,12256
  const vec &operator|=(const vec &v) {                         // Vector compound assignment (bitwise or)operator |=315,12467
  vec operator+(const T v) const {                              // Scalar arithmetic (add)operator +320,12676
  vec operator-(const T v) const {                              // Scalar arithmetic (subtract)operator -324,12837
  vec operator*(const T v) const {                              // Scalar arithmetic (multiply)operator *328,13003
  vec operator/(const T v) const {                              // Scalar arithmetic (divide)operator /332,13169
  vec operator>(const T v) const {                              // Scalar arithmetic (greater than)operator >336,13333
  vec operator<(const T v) const {                              // Scalar arithmetic (less than)operator <340,13503
  vec operator&(const T v) const {                              // Scalar arithmetic (bitwise and)operator &344,13670
  vec operator|(const T v) const {                              // Scalar arithmetic (bitwise or)operator |348,13839
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +352,14007
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -356,14168
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *360,14334
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /364,14500
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >368,14664
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <372,14834
  vec operator&(const vec &v) const {                           // Vector arithmetic (bitwise and)operator &376,15001
  vec operator|(const vec &v) const {                           // Vector arithmetic (bitwise or)operator |380,15170
  vec operator-() const {                                       // Vector arithmetic (negation)operator -384,15338
  T &operator[](int i) {                                        // Indexing (lvalue)operator []390,15556
  const T &operator[](int i) const {                            // Indexing (rvalue)operator []394,15703
  operator       T* ()       {return data;}                     // Type-casting (lvalue)operator T*398,15850
  operator const T* () const {return data;}                     // Type-casting (rvalue)operator const T*400,15977
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<402,16104
  friend T sum(const vec &v) {                                  // Sum vectorsum407,16304
  friend T norm(const vec &v) {                                 // L2 norm squarednorm411,16471
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin415,16619
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax421,16845
  friend T min(const vec &v) {                                  // Reduce minimummin427,17071
    friend T max(const vec &v) {                                // Reduce maximummax433,17286
  friend vec abs(const vec &v) {                                // Absolute valueabs439,17492
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt445,17681
  friend void wrap(vec &v, const T &w) {                        // Wrap around periodic boundarywrap451,17889
class vec<16,float> {vec463,18153
  __m512 data;data465,18185
  vec(){}                                                       // Default constructorvec467,18209
  vec(const float v) {                                          // Copy constructor scalarvec468,18296
  vec(const __m512 v) {                                         // Copy constructor SIMD registervec471,18421
  vec(const vec &v) {                                           // Copy constructor vectorvec474,18537
  vec(const float a, const float b, const float c, const float d,vec477,18651
  ~vec(){}                                                      // Destructor~vec483,19017
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =484,19095
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =488,19232
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=492,19358
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=496,19519
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=500,19685
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=504,19851
  const vec &operator&=(const __mmask16 &v) {                   // Vector compound assignment (and)operator &=508,20015
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +512,20196
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -515,20335
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *518,20479
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /521,20623
  __mmask16 operator>(const vec &v) const {                     // Vector arithmetic (greater than)operator >524,20765
  __mmask16 operator<(const vec &v) const {                     // Vector arithmetic (less than)operator <527,20927
  vec operator-() const {                                       // Vector arithmetic (negation)operator -530,21086
  float &operator[](int i) {                                    // Indexing (lvalue)operator []533,21243
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []536,21363
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<539,21483
  friend float sum(const vec &v) {                              // Sum vectorsum543,21646
  friend float norm(const vec &v) {                             // L2 norm squarednorm546,21769
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin550,21943
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax553,22081
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt556,22219
class vec<8,double> {vec568,22599
  __m512d data;data570,22630
  vec(){}                                                       // Default constructorvec572,22654
  vec(const double v) {                                         // Copy constructor scalarvec573,22741
  vec(const __m512d v) {                                        // Copy constructor SIMD registervec576,22866
  vec(const vec &v) {                                           // Copy constructor vectorvec579,22982
  vec(const double a, const double b, const double c, const double d,vec582,23096
  ~vec(){}                                                      // Destructor~vec586,23322
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =587,23400
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =591,23537
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=595,23663
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=599,23824
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=603,23990
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=607,24156
  const vec &operator&=(const __mmask8 &v) {                    // Vector compound assignment (and)operator &=611,24320
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +615,24501
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -618,24640
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *621,24784
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /624,24928
  __mmask8 operator>(const vec &v) const {                      // Vector arithmetic (greater than)operator >627,25070
  __mmask8 operator<(const vec &v) const {                      // Vector arithmetic (less than)operator <630,25232
  vec operator-() const {                                       // Vector arithmetic (negation)operator -633,25391
  double &operator[](int i) {                                   // Indexing (lvalue)operator []636,25548
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []639,25669
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<642,25790
  friend double sum(const vec &v) {                             // Sum vectorsum646,25952
  friend double norm(const vec &v) {                            // L2 norm squarednorm649,26075
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin653,26251
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax656,26389
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt659,26527
class vec<8,float> {vec677,27051
  __m256 data;data679,27082
  vec(){}                                                       // Default constructorvec681,27106
  vec(const float v) {                                          // Copy constructor scalarvec682,27193
  vec(const __m256 v) {                                         // Copy constructor SIMD registervec685,27318
  vec(const vec &v) {                                           // Copy constructor vectorvec688,27434
  vec(const float a, const float b, const float c, const float d,vec691,27548
  ~vec(){}                                                      // Destructor~vec695,27766
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =696,27844
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =700,27981
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=704,28107
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=708,28268
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=712,28434
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=716,28600
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=720,28764
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +724,28933
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -727,29072
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *730,29216
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /733,29360
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >736,29502
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <739,29661
  vec operator-() const {                                       // Vector arithmetic (negation)operator -742,29817
  float &operator[](int i) {                                    // Indexing (lvalue)operator []745,29974
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []748,30094
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<751,30214
  friend float sum(const vec &v) {                              // Sum vectorsum755,30376
  friend float norm(const vec &v) {                             // L2 norm squarednorm762,30663
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin770,30997
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax773,31135
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt776,31273
class vec<4,double> {vec788,31649
  __m256d data;data790,31681
  vec(){}                                                       // Default constructorvec792,31706
  vec(const double v) {                                         // Copy constructor scalarvec793,31793
  vec(const __m256d v) {                                        // Copy constructor SIMD registervec796,31918
  vec(const vec &v) {                                           // Copy constructor vectorvec799,32034
  vec(const double a, const double b, const double c, const double d) {// Copy constructor (component-wise)vec802,32148
  ~vec(){}                                                      // Destructor~vec805,32296
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =806,32374
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =810,32511
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=814,32637
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=818,32798
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=822,32964
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=826,33130
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=830,33294
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +834,33463
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -837,33602
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *840,33746
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /843,33890
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >846,34032
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <849,34191
  vec operator-() const {                                       // Vector arithmetic (negation)operator -852,34347
  double &operator[](int i) {                                   // Indexing (lvalue)operator []855,34504
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []858,34625
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<861,34746
  friend double sum(const vec &v) {                             // Sum vectorsum865,34908
  friend double norm(const vec &v) {                            // L2 norm squarednorm871,35159
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin879,35496
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax882,35634
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt885,35772
class vec<4,double> {vec902,36303
  vector4double data;data904,36335
  vec(){}                                                       // Default constructorvec906,36366
  vec(const double v) {                                         // Copy constructor scalarvec907,36453
  vec(const vector4double v) {                                  // Copy constructor SIMD registervec911,36595
  vec(const vec &v) {                                           // Copy constructor vectorvec914,36711
  vec(const double a, const double b, const double c, const double d) {// Copy constructor (component-wise)vec917,36825
  ~vec(){}                                                      // Destructor~vec921,36990
  const vec &operator=(double v) {                              // Scalar assignmentoperator =922,37068
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =927,37222
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=931,37348
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=935,37503
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=939,37663
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=943,37823
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=947,37989
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +951,38152
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -954,38285
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *957,38423
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /960,38561
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >963,38705
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <966,38849
  vec operator-() const {                                       // Vector arithmetic (negation)operator -969,38990
  double &operator[](int i) {                                   // Indexing (lvalue)operator []972,39140
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []975,39261
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<978,39382
  friend double sum(const vec &v) {                             // Sum vectorsum982,39561
  friend double norm(const vec &v) {                            // L2 norm squarednorm987,39723
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin992,39897
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax997,40085
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt1002,40273
class vec<4,float> {vec1018,40685
  __m128 data;data1020,40716
  vec(){}                                                       // Default constructorvec1022,40740
  vec(const float v) {                                          // Copy constructor scalarvec1023,40827
  vec(const __m128 v) {                                         // Copy constructor SIMD registervec1026,40949
  vec(const vec &v) {                                           // Copy constructor vectorvec1029,41065
  vec(const float a, const float b, const float c, const float d) {// Copy constructor (component-wise)vec1032,41179
  ~vec(){}                                                      // Destructor~vec1035,41320
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =1036,41398
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =1040,41532
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=1044,41658
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=1048,41816
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=1052,41979
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=1056,42142
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=1060,42303
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +1064,42469
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -1067,42605
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *1070,42746
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /1073,42887
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >1076,43026
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <1079,43173
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1082,43317
  float &operator[](int i) {                                    // Indexing (lvalue)operator []1085,43468
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []1088,43588
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<1091,43708
  friend float sum(const vec &v) {                              // Sum vectorsum1095,43870
  friend float norm(const vec &v) {                             // L2 norm squarednorm1100,44064
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin1106,44297
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax1109,44432
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt1112,44567
class vec<2,double> {vec1124,44937
  __m128d data;data1126,44969
  vec(){}                                                       // Default constructorvec1128,44994
  vec(const double v) {                                         // Copy constructor scalarvec1129,45081
  vec(const __m128d v) {                                        // Copy constructor SIMD registervec1132,45203
  vec(const vec &v) {                                           // Copy constructor vectorvec1135,45319
  vec(const double a, const double b) {                         // Copy constructor (component-wise)vec1138,45433
  ~vec(){}                                                      // Destructor~vec1141,45567
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =1142,45645
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =1146,45779
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=1150,45905
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=1154,46063
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=1158,46226
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=1162,46389
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=1166,46550
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +1170,46716
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -1173,46852
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *1176,46993
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /1179,47134
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >1182,47273
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <1185,47420
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1188,47564
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1191,47715
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1194,47836
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<1197,47957
  friend double sum(const vec &v) {                             // Sum vectorsum1201,48119
  friend double norm(const vec &v) {                            // L2 norm squarednorm1205,48280
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin1210,48480
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax1213,48615
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt1216,48750
class vec<2,double> {vec1235,49274
  __m128d data;data1237,49306
  vec(){}                                                       // Default constructorvec1239,49331
  vec(const double v) {                                         // Copy constructor scalarvec1240,49418
  vec(const __m128d v) {                                        // Copy constructor SIMD registervec1243,49541
  vec(const vec &v) {                                           // Copy constructor vectorvec1246,49657
  vec(const double a, const double b) {                         // Copy constructor (component-wise)vec1249,49771
  ~vec(){}                                                      // Destructor~vec1252,49904
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =1253,49982
  const vec &operator=(const vec &v) {                          // Vector assignmentoperator =1257,50117
  const vec &operator+=(const vec &v) {                         // Vector compound assignment (add)operator +=1261,50243
  const vec &operator-=(const vec &v) {                         // Vector compound assignment (subtract)operator -=1265,50401
  const vec &operator*=(const vec &v) {                         // Vector compound assignment (multiply)operator *=1269,50564
  const vec &operator/=(const vec &v) {                         // Vector compound assignment (divide)operator /=1273,50727
  const vec &operator&=(const vec &v) {                         // Vector compound assignment (bitwise and)operator &=1277,50905
  vec operator+(const vec &v) const {                           // Vector arithmetic (add)operator +1281,51071
  vec operator-(const vec &v) const {                           // Vector arithmetic (subtract)operator -1284,51207
  vec operator*(const vec &v) const {                           // Vector arithmetic (multiply)operator *1287,51348
  vec operator/(const vec &v) const {                           // Vector arithmetic (divide)operator /1290,51489
  vec operator>(const vec &v) const {                           // Vector arithmetic (greater than)operator >1293,51645
  vec operator<(const vec &v) const {                           // Vector arithmetic (less than)operator <1296,51792
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1299,51936
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1302,52087
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1305,52208
  friend std::ostream &operator<<(std::ostream &s, const vec &v) {// Component-wise output streamoperator <<1308,52329
  friend double sum(const vec &v) {                             // Sum vectorsum1312,52491
  friend double norm(const vec &v) {                            // L2 norm squarednorm1315,52597
  friend vec min(const vec &v, const vec &w) {                  // Element-wise minimummin1318,52722
  friend vec max(const vec &v, const vec &w) {                  // Element-wise maximummax1321,52857
  friend vec rsqrt(const vec &v) {                              // Reciprocal square rootrsqrt1324,52992

kernels/LaplaceP2PCPU.cxx,230
void kernel::P2P(C_iter Ci, C_iter Cj, real_t eps2, vec3 Xperiodic, bool mutual) {P2P4,42
void kernel::P2P(C_iter Ci, C_iter Cj, real_t eps2, vec3 Xperiodic) {P2P172,3777
void kernel::P2P(C_iter C, real_t eps2) {P2P322,6852

kernels/LaplaceSphericalCPU.cxx,726
#define ODDEVEN(ODDEVEN3,21
#define IPOW2N(IPOW2N4,68
void cart2sph(real_t & r, real_t & theta, real_t & phi, vec3 dX) {cart2sph9,229
void sph2cart(real_t r, real_t theta, real_t phi, T spherical, T & cartesian) {sph2cart17,624
void evalMultipole(real_t rho, real_t alpha, real_t beta, complex_t * Ynm, complex_t * YnmTheta) {evalMultipole29,1267
void evalLocal(real_t rho, real_t alpha, real_t beta, complex_t * Ynm) {evalLocal68,4493
void kernel::P2M(C_iter C) {P2M103,7378
void kernel::M2M(C_iter Ci, C_iter C0) {M2M120,7836
void kernel::M2L(C_iter Ci, C_iter Cj, vec3 Xperiodic, bool mutual) {M2L149,8841
void kernel::L2L(C_iter Ci, C_iter C0) {L2L193,10222
void kernel::L2P(C_iter Ci) {L2P226,11184

kernels/LaplaceCartesianCPU.cxx,7889
struct Index {Index4,54
  static const int      I = Index<nx,ny+1,nz-1>::I + 1;I5,69
  static const uint64_t F = Index<nx,ny,nz-1>::F * nz;F6,125
struct Index<nx,ny,0> {Index10,209
  static const int      I = Index<nx+1,0,ny-1>::I + 1;I11,233
  static const uint64_t F = Index<nx,ny-1,0>::F * ny;F12,288
struct Index<nx,0,0> {Index16,363
  static const int      I = Index<0,0,nx-1>::I + 1;I17,386
  static const uint64_t F = Index<nx-1,0,0>::F * nx;F18,438
struct Index<0,0,0> {Index22,506
  static const int      I = 0;I23,528
  static const uint64_t F = 1;F24,559
struct DerivativeTerm {DerivativeTerm29,643
  static const int coef = 1 - 2 * n;coef30,667
  static inline real_t kernel(const vecP &C, const vec3 &dX) {kernel31,704
struct DerivativeTerm<n,kx,ky,kz,-1> {DerivativeTerm37,865
  static const int coef = 1 - n;coef38,904
  static inline real_t kernel(const vecP &C, const vec3&) {kernel39,937
struct DerivativeSum {DerivativeSum46,1125
  static const int nextflag = 5 - (kz < nz || kz == 1);nextflag47,1148
  static const int dim = kz == (nz-1) ? -1 : 2;dim48,1204
  static const int n = nx + ny + nz;n49,1252
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop50,1289
struct DerivativeSum<nx,ny,nz,kx,ky,kz,4> {DerivativeSum57,1540
  static const int nextflag = 3 - (ny == 0);nextflag58,1584
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop59,1629
struct DerivativeSum<nx,ny,nz,kx,ky,kz,3> {DerivativeSum65,1822
  static const int nextflag = 3 - (ky < ny || ky == 1);nextflag66,1866
  static const int dim = ky == (ny-1) ? -1 : 1;dim67,1922
  static const int n = nx + ny + nz;n68,1970
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop69,2007
struct DerivativeSum<nx,ny,nz,kx,ky,kz,2> {DerivativeSum76,2258
  static const int nextflag = 1 - (nx == 0);nextflag77,2302
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop78,2347
struct DerivativeSum<nx,ny,nz,kx,ky,kz,1> {DerivativeSum84,2540
  static const int nextflag = 1 - (kx < nx || kx == 1);nextflag85,2584
  static const int dim = kx == (nx-1) ? -1 : 0;dim86,2640
  static const int n = nx + ny + nz;n87,2688
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop88,2725
struct DerivativeSum<nx,ny,nz,kx,ky,kz,0> {DerivativeSum95,2976
  static inline real_t loop(const vecP&, const vec3&) {loop96,3020
struct DerivativeSum<nx,ny,nz,kx,ky,0,5> {DerivativeSum102,3147
  static inline real_t loop(const vecP &C, const vec3 &dX) {loop103,3190
struct MultipoleSum {MultipoleSum110,3385
  static inline real_t kernel(const vecP &C, const vecP &M) {kernel111,3407
struct MultipoleSum<nx,ny,nz,kx,ky,0> {MultipoleSum118,3649
  static inline real_t kernel(const vecP &C, const vecP &M) {kernel119,3689
struct MultipoleSum<nx,ny,nz,kx,0,0> {MultipoleSum126,3919
  static inline real_t kernel(const vecP &C, const vecP &M) {kernel127,3958
struct MultipoleSum<nx,ny,nz,0,0,0> {MultipoleSum134,4176
  static inline real_t kernel(const vecP&, const vecP&) { return 0; }kernel135,4214
struct LocalSum {LocalSum140,4363
  static inline real_t kernel(const vecP &M, const vecP &L) {kernel141,4381
struct LocalSum<nx,ny,nz,kx,ky,0> {LocalSum148,4620
  static inline real_t kernel(const vecP &M, const vecP &L) {kernel149,4656
struct LocalSum<nx,ny,nz,kx,0,0> {LocalSum156,4883
  static inline real_t kernel(const vecP &M, const vecP &L) {kernel157,4918
struct LocalSum<nx,ny,nz,0,0,0> {LocalSum164,5130
  static inline real_t kernel(const vecP&, const vecP&) { return 0; }kernel165,5164
struct Kernels {Kernels170,5272
  static inline void power(vecP &C, const vec3 &dX) {power171,5289
  static inline void derivative(vecP &C, const vec3 &dX, const real_t &invR2) {derivative175,5454
  static inline void scale(vecP &C) {scale180,5707
  static inline void M2M(vecP &MI, const vecP &C, const vecP &MJ) {M2M184,5835
  static inline void M2L(vecP &L, const vecP &C, const vecP &M) {M2L188,6019
  static inline void L2L(vecP &LI, const vecP &C, const vecP &LJ) {L2L192,6193
  static inline void L2P(B_iter B, const vecP &C, const vecP &L) {L2P196,6373
struct Kernels<nx,ny,0> {Kernels203,6582
  static inline void power(vecP &C, const vec3 &dX) {power204,6608
  static inline void derivative(vecP &C, const vec3 &dX, const real_t &invR2) {derivative208,6770
  static inline void scale(vecP &C) {scale213,7016
  static inline void M2M(vecP &MI, const vecP &C, const vecP &MJ) {M2M217,7141
  static inline void M2L(vecP &L, const vecP &C, const vecP &M) {M2L221,7322
  static inline void L2L(vecP &LI, const vecP &C, const vecP &LJ) {L2L225,7493
  static inline void L2P(B_iter B, const vecP &C, const vecP &L) {L2P229,7670
struct Kernels<nx,0,0> {Kernels236,7868
  static inline void power(vecP &C, const vec3 &dX) {power237,7893
  static inline void derivative(vecP &C, const vec3 &dX, const real_t &invR2) {derivative241,8050
  static inline void scale(vecP &C) {scale246,8286
  static inline void M2M(vecP &MI, const vecP &C, const vecP &MJ) {M2M250,8406
  static inline void M2L(vecP &L, const vecP &C, const vecP &M) {M2L254,8582
  static inline void L2L(vecP &LI, const vecP &C, const vecP &LJ) {L2L258,8748
  static inline void L2P(B_iter B, const vecP &C, const vecP &L) {L2P262,8920
struct Kernels<0,0,0> {Kernels269,9107
  static inline void power(vecP&, const vec3&) {}power270,9131
  static inline void derivative(vecP&, const vec3&, const real_t&) {}derivative271,9181
  static inline void scale(vecP&) {}scale272,9251
  static inline void M2M(vecP&, const vecP&, const vecP&) {}M2M273,9288
  static inline void M2L(vecP&, const vecP&, const vecP&) {}M2L274,9349
  static inline void L2L(vecP&, const vecP&, const vecP&) {}L2L275,9410
  static inline void L2P(B_iter, const vecP&, const vecP&) {}L2P276,9471
inline void getCoef(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef281,9555
inline void getCoef<1>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef288,9740
inline void getCoef<2>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef299,10005
inline void getCoef<3>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef314,10415
inline void getCoef<4>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef336,11071
inline void getCoef<5>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef364,12088
inline void getCoef<6>(vecP &C, const vec3 &dX, real_t &invR2, const real_t &invR) {getCoef399,13828
inline void sumM2L(vecP &L, const vecP &C, const vecP &M) {sumM2L443,16798
inline void sumM2L<1>(vecP &L, const vecP &C, const vecP&M __attribute__((unused))) {sumM2L454,17075
inline void sumM2L<2>(vecP &L, const vecP &C, const vecP &M) {sumM2L463,17292
inline void sumM2L<3>(vecP &L, const vecP &C, const vecP &M) {sumM2L472,17555
inline void sumM2L<4>(vecP &L, const vecP &C, const vecP &M) {sumM2L487,18220
inline void sumM2L<5>(vecP &L, const vecP &C, const vecP &M) {sumM2L512,19755
inline void sumM2L<6>(vecP &L, const vecP &C, const vecP &M) {sumM2L552,22859
struct Coefs {Coefs614,28608
  static const int begin = PP*(PP+1)*(PP+2)/6;begin615,28623
  static const int end = (PP+1)*(PP+2)*(PP+3)/6;end616,28670
  static inline void negate(vecP &C) {negate617,28719
struct Coefs<PP,0> {Coefs624,28865
  static inline void negate(vecP &C) {negate625,28886
struct Coefs<0,0> {Coefs631,28974
  static inline void negate(vecP){}negate632,28994
void kernel::P2M(C_iter C) {P2M635,29034
void kernel::M2M(C_iter Ci, C_iter C0) {M2M645,29266
void kernel::M2L(C_iter Ci, C_iter Cj, vec3 Xperiodic, bool mutual) {M2L658,29599
void kernel::L2L(C_iter Ci, C_iter Ci0) {L2L675,30022
void kernel::L2P(C_iter Ci) {L2P689,30339

old/mr3/matrixMul.h,99
#define _MATRIXMUL_H__MATRIXMUL_H_2,22
#define BLOCK_SIZE BLOCK_SIZE4,45
#define THD THD6,84

old/mr3/vtgrapeproto.h,0

old/mr3/mr3.c,2155
#define MD_LJ_R2MIN MD_LJ_R2MIN8,102
#define MD_LJ_R2MAX MD_LJ_R2MAX9,128
#define COULOMB_VDW_FACTORCOULOMB_VDW_FACTOR11,155
static double Coulomb_vdw_factor=1.0;Coulomb_vdw_factor12,182
#define MR3_malloc_pointer(MR3_malloc_pointer14,221
#define MR3_free_pointer(MR3_free_pointer15,274
static double Eps2=0.0;Eps217,323
int Deviceid=0;Deviceid18,347
void vg_exit(int ret)vg_exit21,365
void *m3_get_unit(void)m3_get_unit27,406
void m3_set_softening(void *unit, double eps)m3_set_softening33,451
void MR3_exit(int ret)MR3_exit39,519
void MR3init(void)MR3init45,561
void mr3init_(void)mr3init_57,722
void mr3init__(void)mr3init__63,761
void MR3free(void)MR3free69,802
void mr3free_(void)mr3free_74,827
void mr3free__(void)mr3free__80,866
void MR3calccoulomb_ij(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij93,980
void mr3calccoulomb_ij_(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij_116,1557
void mr3calccoulomb_ij__(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij__128,1849
void MR3calccoulomb(double x[], int n, double q[], double rscale,MR3calccoulomb140,2143
void mr3calccoulomb_(double x[], int *n, double q[], double *rscale,mr3calccoulomb_177,3042
void mr3calccoulomb__(double x[], int *n, double q[], double *rscale,mr3calccoulomb__186,3298
void MR3calcvdw_ij(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij196,3558
void MR3calcvdw(double x[], int n, int atype[], int nat,MR3calcvdw210,3903
void mr3calcvdw_(double x[], int *n, int atype[], int *nat,mr3calcvdw_265,5368
void mr3calcvdw__(double x[], int *n, int atype[], int *nat,mr3calcvdw__296,6132
void MR3calcewald(int *k, int knum_org, double *x, int n, double *chg,MR3calcewald308,6438
void mr3calcewald_(int *k, int *knum, double *x, int *n,mr3calcewald_354,7827
void mr3calcewald__(int *k, int *knum, double *x, int *n,mr3calcewald__364,8098
void MR3calcnacl(void)MR3calcnacl374,8371
void vtgrape_force(double xj[][3], // position of j-th particlesvtgrape_force380,8466
void vg_get_r1result(int n, float r[], float r1[])vg_get_r1result401,8965

old/mr3/md.c,1092
#define kernel(kernel1,0
#define mother(mother31,747
static void grav_kernel(int nii, int nj, int natj, grav_kernel57,1420
static void gravpot_kernel(int nii, int nj, int natj, gravpot_kernel66,1611
static void lj_kernel(int nii, int nj, int natj, lj_kernel75,1817
static void ljpot_kernel(int nii, int nj, int natj, ljpot_kernel84,2019
static void real_kernel(int nii, int nj, int natj, real_kernel93,2214
static void realpot_kernel(int nii, int nj, int natj, realpot_kernel102,2404
static void wave_kernel(int nii, int nj, int natj, wave_kernel111,2609
static void wavepot_kernel(int nii, int nj, int natj, wavepot_kernel120,2799
static void md_grav(void *unit_org)md_grav129,3004
static void md_gravpot(void *unit_org)md_gravpot135,3069
static void md_lj(void *unit_org)md_lj141,3140
static void md_ljpot(void *unit_org)md_ljpot147,3201
static void md_real(void *unit_org)md_real153,3268
static void md_realpot(void *unit_org)md_realpot159,3333
static void md_wave(void *unit_org)md_wave165,3404
static void md_wavepot(void *unit_org)md_wavepot171,3469

old/mr3/vtgrape_dummy.c,1589
void MR3_get_board_version(int *version, int *freq)MR3_get_board_version1,0
void MR3_rscale_and_pack(int n, double (*x)[3], int *atype,MR3_rscale_and_pack10,150
void MR3_rscale_and_pack_old(int n, double (*x)[3], int *atype,MR3_rscale_and_pack_old17,290
void MR3SetTable_emu(char *filename, int tblno, int flag)MR3SetTable_emu24,442
int MR3_get_total_num_chips(void)MR3_get_total_num_chips30,553
void MR3print_chip_temperature(int flag)MR3print_chip_temperature37,660
int MR3_get_retry_count(void)MR3_get_retry_count43,764
void m3_free_unit(M3_UNIT *unit)m3_free_unit50,863
M3_UNIT *m3_allocate_periodic_unit(const char *fname, int mode, double size, int dum)m3_allocate_periodic_unit57,960
void m3_set_positions(M3_UNIT *unit, double (*pos)[3], int n)m3_set_positions65,1138
void m3_set_charges(M3_UNIT *unit, const double *q, int n)m3_set_charges72,1268
void m3_set_cells(M3_UNIT *unit, M3_CELL *cell, int ncell)m3_set_cells79,1393
void m3_calculate_forces(M3_UNIT *unit, double (*xi)[3], int ni, double (*force)[3])m3_calculate_forces86,1516
void m3_calculate_potentials(M3_UNIT *unit, double (*xi)[3], int ni, double *eng)m3_calculate_potentials93,1672
void m3_set_types(M3_UNIT *unit, const int *atype, int n)m3_set_types100,1829
void m3_set_pipeline_types(M3_UNIT *unit, const int *atype, int n)m3_set_pipeline_types107,1951
void m3_set_charge_matrix(M3_UNIT *unit, const double *gscale, int nati, int natj)m3_set_charge_matrix114,2091
void m3_set_rscale_matrix(M3_UNIT *unit, const double *rscale, int nati, int natj)m3_set_rscale_matrix121,2246

old/mr3/sample_md3.f,4903
      program mainmain23,821
      integer*4 natype(natype42,1279
      real*8 gseng(gseng43,1309
      real*8 gseng(natot,natot),gsforc(gsforc43,1309
      real*8 rseng(rseng44,1361
      real*8 rseng(natot,natot),rsforc(rsforc44,1361
      real*8 smass(smass45,1413
      real*8 pos(pos46,1439
      real*8 pos(3,nmlcl),vmom(vmom46,1439
      real*8 engph(engph47,1479
      real*8 engph(3,nmlcl),engpg(engpg47,1479
      real*8 e_vdwg(e_vdwg48,1522
      real*8 e_vdwg(3,nmlcl),e_vdwh(e_vdwh48,1522
      real*8 e_c_dg(e_c_dg49,1567
      real*8 e_c_dg(3,nmlcl),e_c_dh(e_c_dh49,1567
      real*8 e_c_rg(e_c_rg50,1612
      real*8 e_c_rg(3,nmlcl),e_c_rh(e_c_rh50,1612
      real*8 e_c_wg(e_c_wg51,1657
      real*8 e_c_wg(3,nmlcl),e_c_wh(e_c_wh51,1657
      real*8 e_c_wg(3,nmlcl),e_c_wh(3,nmlcl),e_c_wg2(e_c_wg251,1657
      real*8 forceh(forceh52,1719
      real*8 forceh(3,nmlcl),forceg(forceg52,1719
      real*8 f_vdwg(f_vdwg53,1764
      real*8 f_vdwg(3,nmlcl),f_vdwh(f_vdwh53,1764
      real*8 f_c_dg(f_c_dg54,1809
      real*8 f_c_dg(3,nmlcl),f_c_dh(f_c_dh54,1809
      real*8 f_c_rg(f_c_rg55,1854
      real*8 f_c_rg(3,nmlcl),f_c_rh(f_c_rh55,1854
      real*8 f_c_wg(f_c_wg56,1899
      real*8 f_c_wg(3,nmlcl),f_c_wh(f_c_wh56,1899
      real*8 engt(engt57,1944
      real*8 charge(charge58,1969
      integer*4 kvect(kvect59,1996
      real*8 rkvect(rkvect60,2038
      real*8 fac_k(fac_k61,2078
      real*8 cell(cell62,2115
      real*8 cell(3,3),stress(stress62,2115
      real*8 cell(3,3),stress(3,3),cellsize(cellsize62,2115
      real*8 cell(3,3),stress(3,3),cellsize(3),rkmaxrkmax62,2115
      real*4 time0,time063,2168
      real*4 time0,time1,time163,2168
      real*4 time0,time1,time2,time263,2168
      real*4 time0,time1,time2,time3,time363,2168
      real*4 time0,time1,time2,time3,time4time463,2168
      character*30 cuprntcuprnt64,2211
 1098   notabl=01098210,6249
  190 notabl=8190288,8459
 1099 call cputime(time2)1099319,9382
 1100 continue1100343,10065
      subroutine sum_part_force_eng(sum_part_force_eng357,10247
   10 continue10375,10865
      subroutine set_rkvect(set_rkvect384,10980
 1000 continue1000398,11393
      subroutine set_kvect(set_kvect403,11502
 1000 continue1000473,13250
      subroutine calc_force_coul_w(calc_force_coul_w479,13455
 1000 continue1000540,15227
 1001 continue1001546,15430
 1002 continue1002551,15633
 1003 continue1003556,15836
 1210 continue1210595,16789
 1211 continue1211602,17118
 1212 continue1212611,17487
 1213 continue1213618,17816
 1219 continue1219627,17988
 1220 continue1220645,18473
 1200 continue1200647,18490
      subroutine calc_force_eng_coul(calc_force_eng_coul665,19024
   10 do 1010 j=2,nmlcl10708,20199
 1010 continue1010738,21166
   20 do 2010 j=2,nmlcl20742,21204
 2010 continue2010775,22336
      subroutine calc_force_eng_vdw(calc_force_eng_vdw784,22456
 1010 continue1010865,24887
      subroutine tmpset(tmpset872,25005
 1010 continue1010892,25531
 1030 continue1030902,25825
 1050 continue1050910,26040
 3011 continue3011917,26288
 9500 format(2f10.4)9500920,26379
      subroutine output(output928,26505
 1010 continue1010944,26966
 9000 format(i6,3e15.7)9000947,27072
      subroutine motion(motion953,27199
 1010 continue10101009,28822
      subroutine sysdef(sysdef1019,28944
 1010 continue10101067,30183
 2000 continue20001075,30330
 2010 continue20101088,30791
 3000 continue30001095,30903
 3010 continue30101104,31060
 3020 continue30201108,31167
      subroutine start(start1116,31288
 1020 continue10201135,31877
 1010 continue10101136,31892
      subroutine values(values1142,32010
 1020 continue10201157,32436
 1010 continue10101158,32451
      subroutine write_sys(write_sys1164,32569
 9000 format(a,i3,a,i3)90001180,33078
 9010 format(2i3,4f10.3)90101186,33230
 9020 format(i3,a,f10.3)90201189,33311
      subroutine write_start(write_start1195,33439
 9000 format(a,3f10.3)90001206,33790
      subroutine write_eng_forc(write_eng_forc1211,33915
 8000 s=0.0d080001315,37509
 9000 format(i5,2e15.7,f15.10,i3)90001338,38047
 9005 format(i5,2e15.7,i3)90051339,38081
 9010 format(i5,a,i2,a,3a)90101340,38108
 9020 format(a,3e15.7)90201341,38135
 9025 format(a,3f15.10)90251342,38158
 9030 format(a,3f15.10)90301343,38182
 9035 format(a,f15.10)90351344,38206
      subroutine cputime(cputime1353,38402
      real*8 FUNCTION ran2(ran21370,38688
   11 continue111391,39484
      SUBROUTINE indexx(indexx1409,39911
   11 continue111423,40339
    1 if(ir-l.lt.M)then11427,40390
   12 continue121434,40581
    2 indx(i+1)=indxt21436,40610
   13 continue131437,40632
    3 continue31466,41343
    4 continue41469,41410
    5 indx(l)=indx(j)51477,41585

old/mr3/md_charmm.h,7192
#define _MD_H__MD_H_2,15
#define MD_QAUNION_ATYPEBIT MD_QAUNION_ATYPEBIT24,819
#define MD_CELLINDEX MD_CELLINDEX30,1202
#define MD_CELLINDEX_MAXCELL_PER_DIM MD_CELLINDEX_MAXCELL_PER_DIM32,1342
#define MD_CELLINDEX_MAXIBLOCKS MD_CELLINDEX_MAXIBLOCKS33,1382
#define MD_USE_LARGE_VAL MD_USE_LARGE_VAL37,1667
#define COULOMB_SHIFT COULOMB_SHIFT47,2402
#define VDW_SHIFT VDW_SHIFT48,2494
#define ACCUMULATE_PAIR_FLOAT ACCUMULATE_PAIR_FLOAT51,2725
#define MD_PERIODIC_FIXED MD_PERIODIC_FIXED57,3213
#define MD_LJ_05SIGMA_8SIGMA MD_LJ_05SIGMA_8SIGMA59,3412
#define MD_UNROLL_KERNEL MD_UNROLL_KERNEL71,4471
#define MD_FVEC_SIZE MD_FVEC_SIZE74,4627
#define MD_MAX_I_PER_KERNEL MD_MAX_I_PER_KERNEL77,4796
#define MD_MAX_J_PER_RUN MD_MAX_J_PER_RUN79,4835
#define MD_USE_QAUNION MD_USE_QAUNION81,4915
#define MD_R1_EMU_FNAME MD_R1_EMU_FNAME85,5150
#define MD_RSQRT_EMU_FNAME MD_RSQRT_EMU_FNAME86,5198
#define VG_MINIMUM_PARTICLE_BLOCK_I VG_MINIMUM_PARTICLE_BLOCK_I89,5316
#define VG_JDIV VG_JDIV93,5522
#define VG_MINIMUM_PARTICLE_BLOCK_J VG_MINIMUM_PARTICLE_BLOCK_J95,5593
#define VG_MINIMUM_PARTICLE_BLOCK_F VG_MINIMUM_PARTICLE_BLOCK_F96,5657
#define VG_EMU_VECSIZE VG_EMU_VECSIZE98,5722
#define VG_RESTRICTED VG_RESTRICTED99,5747
#define VG_MINIMUM_ATYPE_BLOCK VG_MINIMUM_ATYPE_BLOCK105,5916
#define NI_ROUNDUP(NI_ROUNDUP112,6442
#define NJ_ROUNDUP(NJ_ROUNDUP113,6558
#define NF_ROUNDUP(NF_ROUNDUP114,6674
#define MATRIX_ROUNDUP(MATRIX_ROUNDUP116,6797
#define MD_QATYPE_TO_ATYPE(MD_QATYPE_TO_ATYPE121,6957
#define MD_QATYPE_TO_Q(MD_QATYPE_TO_Q122,7010
#define LJ_BS_SIZE LJ_BS_SIZE126,7107
#define LJ_BS_SIZE LJ_BS_SIZE128,7136
#define MASK(MASK132,7180
#define LARGE_VAL_SHIFT LARGE_VAL_SHIFT135,7220
#define LOWER_VAL_SHIFT LOWER_VAL_SHIFT138,7411
#define LARGE_VAL_ORG LARGE_VAL_ORG140,7507
#define LOWER_VAL_FACTOR_ORG LOWER_VAL_FACTOR_ORG146,7724
#define LOWER_VAL_FACTOR_1_ORG LOWER_VAL_FACTOR_1_ORG147,7819
#define LARGE_VAL LARGE_VAL159,8309
#define LOWER_VAL_FACTOR LOWER_VAL_FACTOR160,8395
#define LOWER_VAL_FACTOR_1 LOWER_VAL_FACTOR_1161,8431
#define Q_DOUBLE_TO_INT(Q_DOUBLE_TO_INT167,8524
#define Q_INT_TO_FLOAT(Q_INT_TO_FLOAT169,8715
#define ATYPE_PACK_TO_QATYPE(ATYPE_PACK_TO_QATYPE170,8811
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE171,8889
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE173,8973
#define TYPEDEF_LONGLONG TYPEDEF_LONGLONG178,9055
typedef struct { unsigned int h,l; } longlong;h180,9100
typedef struct { unsigned int h,l; } longlong;l180,9100
typedef struct { unsigned int h,l; } longlong;longlong180,9100
typedef struct { unsigned int l,h; } longlong;l182,9154
typedef struct { unsigned int l,h; } longlong;h182,9154
typedef struct { unsigned int l,h; } longlong;longlong182,9154
#define M3_UNIT M3_UNIT187,9233
  long base;base192,9297
  long size;size193,9310
} M3_CELL;M3_CELL194,9323
  float q;q199,9380
  int atype;atype200,9391
} VG_QATYPE;VG_QATYPE201,9404
  float r[3];r206,9443
  int qatype;qatype208,9478
  VG_QATYPE qatype;qatype210,9522
  int atype;atype212,9548
  float q;q213,9561
  float halfsigma;halfsigma216,9614
  float sqrtepsilon;sqrtepsilon217,9633
} VG_JVEC;VG_JVEC219,9661
  float r[3];r222,9690
  int qatype;qatype224,9725
  VG_QATYPE qatype;qatype226,9769
  int atype;atype228,9795
  float q;q229,9808
  float halfsigma;halfsigma232,9861
  float sqrtepsilon;sqrtepsilon233,9880
  int ci[4];ci236,9939
} VG_IVEC;VG_IVEC238,9959
  float gscale;gscale243,10007
  float rscale;rscale244,10023
  float shift;shift246,10056
  float pol;pol249,10093
  float sigm;sigm250,10106
  float ipotro;ipotro251,10120
  float pc;pc252,10136
  float pd;pd253,10148
  float zz;zz254,10160
} VG_MATRIX;VG_MATRIX256,10179
  float volume[3];volume259,10210
  float alpha;alpha260,10229
  float alphafac;alphafac261,10244
  float alpha3fac;alpha3fac262,10262
  float eps2;eps2263,10281
  float gscalesf[VG_MINIMUM_ATYPE_BLOCK];gscalesf265,10322
  float gscalesp[VG_MINIMUM_ATYPE_BLOCK];gscalesp266,10364
  float rscales[VG_MINIMUM_ATYPE_BLOCK];rscales267,10406
  float rcut21;rcut21270,10486
  float scaleqi_1,scaleqj_1;scaleqi_1273,10536
  float scaleqi_1,scaleqj_1;scaleqj_1273,10536
} VG_SCALER;VG_SCALER275,10572
  float fi[MD_FVEC_SIZE];fi278,10603
  float fi2[MD_FVEC_SIZE];fi2280,10658
} VG_FVEC;VG_FVEC282,10692
  int base;base285,10721
  int size;size286,10733
} VG_CELL;VG_CELL287,10745
#define MD_NUM_JCELLS MD_NUM_JCELLS289,10757
  VG_CELL ci[MD_CELLINDEX_MAXIBLOCKS][MD_NUM_JCELLS];ci293,10828
  int   niblock[MD_CELLINDEX_MAXIBLOCKS];niblock294,10882
  int   nicell;nicell295,10924
  float potc;potc297,10947
  float potv;potv298,10961
} VG_PSCALER;VG_PSCALER299,10975
  float f;f302,11006
  int i;i303,11017
} VG_UNION_FI;VG_UNION_FI304,11026
#define MD_LJ_R2MIN MD_LJ_R2MIN309,11123
#define MD_LJ_R2MAX MD_LJ_R2MAX310,11151
#define MD_LJ_R2MIN MD_LJ_R2MIN312,11206
#define MD_LJ_R2MAX MD_LJ_R2MAX313,11232
#define MD_LJ_R2MIN MD_LJ_R2MIN315,11287
#define MD_LJ_R2MAX MD_LJ_R2MAX316,11315
#define MD_LJ_R2MIN MD_LJ_R2MIN318,11369
#define MD_LJ_R2MAX MD_LJ_R2MAX319,11397
#define MD_LJ_R2MIN MD_LJ_R2MIN321,11452
#define MD_LJ_R2MAX MD_LJ_R2MAX322,11480
#define MD_LJ_R2MIN MD_LJ_R2MIN324,11536
#define MD_LJ_R2MAX MD_LJ_R2MAX325,11564
#define MD_LJ_R2MIN MD_LJ_R2MIN327,11621
#define MD_LJ_R2MAX MD_LJ_R2MAX328,11649
#define MD_LJ_R2MIN MD_LJ_R2MIN332,11761
#define MD_LJ_R2MAX MD_LJ_R2MAX333,11802
#define MD_REAL_R2MIN MD_REAL_R2MIN346,12031
#define MD_REAL_R2MAX MD_REAL_R2MAX347,12061
#define MR3_malloc_pointer(MR3_malloc_pointer351,12109
#define MR3_free_pointer(MR3_free_pointer352,12161
#define MR3_malloc_pointer(MR3_malloc_pointer354,12231
#define MR3_free_pointer(MR3_free_pointer355,12273
typedef float v4sf __attribute__ ((vector_size(16)));v4sf361,12425
typedef int   v4si __attribute__ ((vector_size(16)));v4si362,12479
typedef float* v4sf;v4sf364,12539
  int ni;ni369,12586
  double *xi;xi370,12596
  double *qi;qi371,12610
  int *atypei;atypei372,12624
  double *force;force373,12639
  int nj;nj374,12656
  double *xj;xj375,12666
  double *qj; qj376,12680
  int *atypej;atypej377,12695
  int nat;nat378,12710
  double *gscalesf;gscalesf379,12721
  double *gscalesp;gscalesp380,12741
  double *rscales;rscales381,12761
  double rscale;rscale382,12780
  int tblno;tblno383,12797
  double xmax;xmax384,12810
  double *potc;potc385,12825
  double *potv;potv386,12841
  int periodicflag;periodicflag387,12857
  int potflag;potflag388,12877
  int changeflag;changeflag389,12892
  int *numex;numex390,12910
  int *natex;natex391,12924
} thread_arg_coulombvdwijexlist;thread_arg_coulombvdwijexlist392,12938
#define grav grav395,12973
#define gravpot gravpot399,13090
#define lj lj403,13196
#define ljpot ljpot412,13509
#define real real421,13793
#define realpot realpot426,13967
#define wave wave431,14105
#define wavepot wavepot433,14141
#define dummy dummy435,14180

old/mr3/emutest.c,190
#define N N11,189
int Argc=0;Argc15,257
char **Argv=NULL;Argv16,269
void get_cputime(double *laptime, double *sprittime)get_cputime20,296
int main(int argc, char **argv)main36,661

old/mr3/emutest_simple.c,190
#define N N11,189
int Argc=0;Argc15,257
char **Argv=NULL;Argv16,269
void get_cputime(double *laptime, double *sprittime)get_cputime20,296
int main(int argc, char **argv)main36,661

old/mr3/initialize.sh,0

old/mr3/vtgrape.c,6907
  int i;i47,1130
  float f;f48,1139
} FI;FI49,1150
    FI fi0;fi053,1183
    FI fi1;fi154,1195
  } fi2;fi255,1207
  double d;d56,1216
} DI2;DI257,1228
#define COPY_POS(COPY_POS60,1261
#define COPY_POS_INT(COPY_POS_INT65,1500
#define COPY_POS_DEFINE COPY_POS_DEFINE69,1705
#define COPY_POS(COPY_POS74,1888
#define COPY_POS_INT(COPY_POS_INT76,1952
#define COPY_POS_DEFINE COPY_POS_DEFINE78,2020
static double  Coulomb_vdw_factor=1.0;Coulomb_vdw_factor83,2145
static VG_UNIT *MR3_unit;MR3_unit84,2184
static int Ldim[3]={1,1,1};Ldim86,2230
static float *Emutable_r1=NULL;Emutable_r190,2294
static float *Emutable_rsqrt=NULL;Emutable_rsqrt91,2326
double Time[MD_MEASURE_TIME][3];Time94,2391
static void vg_get_cputime(double *laptime, double *sprittime)vg_get_cputime149,4737
static void vg_start_timer(int timerindex)vg_start_timer166,5135
static void vg_stop_and_accumulate_timer(int timerindex)vg_stop_and_accumulate_timer172,5246
void *MR3_my_malloc2(size_t n, char *s)MR3_my_malloc2180,5422
void MR3_my_free2(void **p, char *s)MR3_my_free2208,5922
VG_UNIT *m3_get_unit(void)m3_get_unit220,6155
void vg_exit(int ret)vg_exit227,6213
int vg_exit(int ret)vg_exit232,6258
VG_UNIT *vg_allocate_unit(void (*function)(void *))vg_allocate_unit239,6306
void vg_free_unit(VG_UNIT *unit)vg_free_unit298,7924
void vg_set_function(VG_UNIT *unit, int function_index, void (*function)(void *))vg_set_function314,8617
void vg_set_vectors(VG_UNIT *unit, int nj, void *jvectors)vg_set_vectors325,8903
void vg_set_matrices(VG_UNIT *unit, int nati, int natj, void *matrices)vg_set_matrices343,9575
void vg_set_scalers(VG_UNIT *unit, void *scalers)vg_set_scalers364,10195
void vg_set_pipeline_vectors(VG_UNIT *unit, int ni, void *ivectors)vg_set_pipeline_vectors376,10565
void vg_calculate(VG_UNIT *unit, int function_index, vg_calculate393,11165
void vg_set_vectors_pos_charge_atype(VG_UNIT *unit, int nj,vg_set_vectors_pos_charge_atype428,12293
void vg_set_vectors_pos_halfsigma_sqrtepsilon(VG_UNIT *unit, int nj,vg_set_vectors_pos_halfsigma_sqrtepsilon528,15387
void vg_set_vectors_pos_charge(VG_UNIT *unit, int nj,vg_set_vectors_pos_charge558,16302
void vg_set_vectors_pos_atype(VG_UNIT *unit, int nj,vg_set_vectors_pos_atype645,19290
void vg_set_matrices_gscales_rscales(VG_UNIT *unit, int nati_org, int natj_org, vg_set_matrices_gscales_rscales714,21744
void vg_set_pol_sigm_ipotro_pc_pd_zz(VG_UNIT *unit, int nati, int natj,vg_set_pol_sigm_ipotro_pc_pd_zz826,24877
void vg_set_scalers_volume_alpha(VG_UNIT *unit, double volume[3], double alpha)vg_set_scalers_volume_alpha867,26180
void vg_set_scalers_volume_alpha_gscales_rscales(VG_UNIT *unit, double volume[3], vg_set_scalers_volume_alpha_gscales_rscales906,27280
void vg_set_pipeline_vectors_pos_charge_atype(VG_UNIT *unit, int ni, vg_set_pipeline_vectors_pos_charge_atype946,28390
void vg_set_pipeline_vectors_pos_halfsigma_sqrtepsilon(VG_UNIT *unit, int ni, vg_set_pipeline_vectors_pos_halfsigma_sqrtepsilon1047,31629
void vg_set_pipeline_vectors_pos_charge(VG_UNIT *unit, int ni, vg_set_pipeline_vectors_pos_charge1077,32578
void vg_set_pipeline_vectors_pos_atype(VG_UNIT *unit, int ni, vg_set_pipeline_vectors_pos_atype1147,34698
void vg_convert_forces(VG_UNIT *unit, int nf, int function_index, double fi[][3])vg_convert_forces1204,36465
void vg_calculate_forces_potentials(VG_UNIT *unit, int function_index,vg_calculate_forces_potentials1254,38123
static void vg_get_funcresult(int n_org, float r[], float r1[], int function_index)vg_get_funcresult1342,41443
void vg_get_r1result(int n_org, float r[], float r1[])vg_get_r1result1456,44788
void vg_get_rsqrtresult(int n_org, float r[], float r1[])vg_get_rsqrtresult1467,44993
void vg_get_mulresult(int n_org, float r[], float q[], float rq[])vg_get_mulresult1474,45152
int vg_write_emufile(int flag)vg_write_emufile1579,48283
void vg_initialize_emu(void)vg_initialize_emu1712,52301
float vg_r1emu(float x)vg_r1emu1787,54382
v4sf vg_r1emu_vec(v4sf xv)vg_r1emu_vec1806,54654
float vg_rsqrtemu(float x)vg_rsqrtemu1820,54812
void vg_set_scaleq(int n, double q[], vg_set_scaleq1847,55303
void m3_set_softening(VG_UNIT *unit, double eps)m3_set_softening1865,55626
void MR3_exit(int ret)MR3_exit1890,56244
void MR3init(void)MR3init1896,56289
void mr3init_(void)mr3init_2084,62622
void mr3init__(void)mr3init__2090,62661
void MR3free(void)MR3free2096,62702
void mr3free_(void)mr3free_2119,63127
void mr3free__(void)mr3free__2125,63166
void MR3calccoulomb(double x[], int n, double q[], double rscale,MR3calccoulomb2131,63207
void mr3calccoulomb_(double x[], int *n, double q[], double *rscale,mr3calccoulomb_2199,65158
void mr3calccoulomb__(double x[], int *n, double q[], double *rscale,mr3calccoulomb__2208,65414
void MR3calccoulomb_ij(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij2218,65674
void mr3calccoulomb_ij_(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij_2318,69007
void mr3calccoulomb_ij__(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij__2330,69299
void MR3_sort_with_index_int(int data[], int index[], int left, int right)MR3_sort_with_index_int2342,69593
void MR3calcvdw_ij_core(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_core2366,70297
void MR3calcvdw_ij(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij2538,76274
void mr3calcvdw_ij_(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij_2658,79733
void mr3calcvdw_ij__(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij__2710,81171
void MR3calcvdw(double x[], int n, int atype[], int nat,MR3calcvdw2722,81501
void mr3calcvdw_(double x[], int *n, int atype[], int *nat,mr3calcvdw_2777,83134
void mr3calcvdw__(double x[], int *n, int atype[], int *nat,mr3calcvdw__2808,83877
void MR3calcewald(int *k, int knum_org, double *x, int n, double *chg,MR3calcewald2820,84183
void mr3calcewald_(int *k, int *knum, double *x, int *n,mr3calcewald_2827,84367
void mr3calcewald__(int *k, int *knum, double *x, int *n,mr3calcewald__2837,84638
void MR3calcnacl(double x[], int n, int atype[], int nat, MR3calcnacl2847,84911
void vtgrape_force(double xj[][3], // position of j-th particlesvtgrape_force2893,86490
void vg_set_rcut2(VG_UNIT *unit, double rcut2)vg_set_rcut22941,87609
void mr3_set_rcut2_(double *rcut2)mr3_set_rcut2_2967,88164
void vg_set_cuton(VG_UNIT *unit, double cuton)vg_set_cuton2980,88388
void mr3_set_cuton_(double *cuton)mr3_set_cuton_2986,88462
#undef LARGE_VALLARGE_VAL3006,88836
#undef LOWER_VAL_FACTORLOWER_VAL_FACTOR3007,88853
#undef LOWER_VAL_FACTOR_1LOWER_VAL_FACTOR_13008,88877
#define LARGE_VAL LARGE_VAL3009,88903
#define LOWER_VAL_FACTOR LOWER_VAL_FACTOR3010,88948
#define LOWER_VAL_FACTOR_1 LOWER_VAL_FACTOR_13011,89000

old/mr3/sock_lib.c,3775
#define SOCKET SOCKET28,863
#define INVALID_SOCKET INVALID_SOCKET29,882
#define CLOSE(CLOSE30,908
#define CLOSE(CLOSE35,1004
SOCKET listensock = INVALID_SOCKET;listensock41,1134
int STRLEN=0;STRLEN43,1171
  int new_orig = 0;new_orig44,1185
int MR3_close_ch(SOCKET s_sock)MR3_close_ch46,1206
int mr3_close_ch_(SOCKET *s_sock)mr3_close_ch_52,1362
static void sig_chld(int signal_type)sig_chld58,1518
static void ignore_pipe(void)ignore_pipe71,1917
static int atoport(service, proto)atoport86,2304
static SOCKET get_connection(socket_type, port, listener)get_connection128,3990
SOCKET MR3_open_port(int port_number)MR3_open_port246,7194
static struct in_addr *atoaddr(address)atoaddr296,8424
static SOCKET make_connection(service, type, netaddress)make_connection320,9056
int MR3_sock_read(SOCKET sockfd, char *buf, size_t count)MR3_sock_read373,10495
int mr3_sock_read_(SOCKET *sockfd, char* buf, int* count)mr3_sock_read_398,11079
int mr3_sock_read__(SOCKET *sockfd, char* buf, int* count)mr3_sock_read__402,11187
int mr3_sock_read_i_(SOCKET* sockfd, int* buf)mr3_sock_read_i_407,11297
int mr3_sock_read_i__(SOCKET* sockfd, int* buf)mr3_sock_read_i__411,11402
int MR3_sock_read_iv(SOCKET sockfd, int* buf, int count)MR3_sock_read_iv416,11509
int mr3_sock_read_iv_(SOCKET* sockfd, int* buf, int* count)mr3_sock_read_iv_421,11630
int mr3_sock_read_iv__(SOCKET* sockfd, int* buf, int* count)mr3_sock_read_iv__425,11755
int MR3_sock_read_d(SOCKET sockfd, double* buf)MR3_sock_read_d430,11882
int mr3_sock_read_d__(SOCKET* sockfd, double* buf)mr3_sock_read_d__435,11988
int mr3_sock_read_d_(SOCKET* sockfd, double* buf)mr3_sock_read_d_439,12097
int MR3_sock_read_dv(SOCKET sockfd, double* buf, int count)MR3_sock_read_dv444,12206
int mr3_sock_read_dv__(SOCKET* sockfd, double* buf, int* count)mr3_sock_read_dv__448,12329
int mr3_sock_read_dv_(SOCKET* sockfd, double* buf, int* count)mr3_sock_read_dv_452,12458
int MR3_sock_write(SOCKET sockfd, char *buf, size_t count)MR3_sock_write459,12699
int MR3_sock_write_c(SOCKET sockfd, char* buf)MR3_sock_write_c483,13241
int mr3_sock_write_c_(SOCKET *sockfd, char* buf)mr3_sock_write_c_491,13381
int mr3_sock_write_c__(SOCKET *sockfd, char* buf)mr3_sock_write_c__496,13475
int MR3_sock_write_i(SOCKET sockfd, int buf)MR3_sock_write_i501,13570
int mr3_sock_write_i_(SOCKET* sockfd, int* buf)mr3_sock_write_i_506,13675
int mr3_sock_write_i__(SOCKET* sockfd, int* buf)mr3_sock_write_i__510,13782
int MR3_sock_write_iv(SOCKET sockfd, int* buf, int count)MR3_sock_write_iv515,13891
int mr3_sock_write_iv_(SOCKET* sockfd, int* buf, int* count)mr3_sock_write_iv_520,14014
int mr3_sock_write_iv__(SOCKET* sockfd, int* buf, int* count)mr3_sock_write_iv__524,14141
int MR3_sock_write_dv(SOCKET sockfd, double* buf, int count)MR3_sock_write_dv529,14270
int mr3_sock_write_dv__(SOCKET* sockfd, double* buf, int* count)mr3_sock_write_dv__534,14396
int mr3_sock_write_dv_(SOCKET* sockfd, double* buf, int* count)mr3_sock_write_dv_538,14527
int MR3_sock_gets(sockfd, str, count)MR3_sock_gets551,15017
int MR3_sock_puts(sockfd, str)MR3_sock_puts585,15910
void MR3_sock_init(SOCKET *s_sock_org, int port_num, double x[], int igraph[],MR3_sock_init592,16023
void mr3_sock_init_(SOCKET *s_sock, int *port_num, double x[], int igraph[],mr3_sock_init_708,18330
void mr3_sock_init__(SOCKET *s_sock, int *port_num, double x[], int igraph[],mr3_sock_init__718,18572
void MR3_sock_1step(SOCKET s_sock, double t1, double time, double t2, MR3_sock_1step728,18814
void mr3_sock_1step_(SOCKET *s_sock, double *t1, double *time, double *t2,mr3_sock_1step_747,19435
void mr3_sock_1step__(SOCKET *s_sock, double *t1, double *time, double *t2,mr3_sock_1step__756,19669

old/mr3/mr3_host.c,3848
__inline__ double vg_mul_double(double x, double y){ return x*y;}vg_mul_double4,70
__inline__ float  vg_mul_float (float  x, float  y){ return x*y;}vg_mul_float5,136
__inline__ double vg_add_double(double x, double y){ return x+y;}vg_add_double6,202
__inline__ float  vg_add_float (float  x, float  y){ return x+y;}vg_add_float7,268
void MR3calccoulomb_ij_host(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_host10,336
void mr3calccoulomb_ij_host_(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij_host_181,4800
void mr3calccoulomb_ij_host__(int *ni, double xi[], double qi[], double force[],mr3calccoulomb_ij_host__191,5100
static double vdw_shift(double r2, vdw_shift203,5413
void MR3calcvdw_ij_host(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_host245,6292
void mr3calcvdw_ij_host_(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij_host_412,10132
void mr3calcvdw_ij_host__(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij_host__459,11493
void MR3calccoulomb_nlist_ij_host_notwork(int ni, double xi[], double qi[], double force[],MR3calccoulomb_nlist_ij_host_notwork471,11839
void MR3calccoulomb_nlist_ij_host(int ni, double xid[], double qid[], double force[],MR3calccoulomb_nlist_ij_host574,14465
void MR3calccoulomb_nlist_host(double xd[], int n, double qd[], double rscale,MR3calccoulomb_nlist_host716,18251
void MR3calcvdw_nlist_ij_host_notwork(int ni, double xi[], int atypei[], double force[],MR3calcvdw_nlist_ij_host_notwork726,18585
void MR3calcvdw_nlist_ij_host(int ni, double xid[], int atypei[], double force[],MR3calcvdw_nlist_ij_host806,20571
void MR3calcvdw_nlist_host2(double x[], int n, int atype[], int nat,MR3calcvdw_nlist_host2932,23510
void MR3calccoulomb_ij_exlist_host(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_exlist_host944,23876
void MR3calcvdw_ij_exlist_host(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_exlist_host969,24774
void MR3calcewald_dft_host(int k[], int knum, double x[], int n,MR3calcewald_dft_host988,25522
void MR3calcewald_idft_eng_host(int k[], double bs[], double bc[],MR3calcewald_idft_eng_host1008,26113
void MR3calcewald_idft_force_host(int k[], double bs[], double bc[],MR3calcewald_idft_force_host1038,26872
void MR3calcewald_host(int *k, int knum_org, double *x, int n, double *chg,MR3calcewald_host1104,28653
void mr3calcewald_host__(k,knum,x,n,chg,alpha,epsilon,cell,mr3calcewald_host__1167,30573
void mr3calcewald_host_(k,knum,x,n,chg,alpha,epsilon,cell,mr3calcewald_host_1176,30871
void MR3SetTable(char *filename, int tblno, int flag)MR3SetTable1186,31147
void mr3settable_nf_(char *fname, int *tblno, int *flag, int *n)mr3settable_nf_1192,31281
void mr3settable_nf__(char *fname, int *tblno, int *flag, int *n)mr3settable_nf__1197,31352
void MR3_setup_exlist(int n, int *bckptr)MR3_setup_exlist1203,31463
void mr3_setup_exlist_(int *n, int *bckptr)mr3_setup_exlist_1208,31511
void MR3_make_natex2_from_natex(int n, int natex[], int numex[],MR3_make_natex2_from_natex1227,31881
void calccoulomb_vdw_ij_exlist_host_sub(int i, int j,calccoulomb_vdw_ij_exlist_host_sub1346,34693
void MR3calccoulomb_vdw_ij_exlist_cutoff_host(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist_cutoff_host1470,38024
void MR3calccoulomb_vdw_ij_exlist_host(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist_host1668,44860
void MR3calccoulomb_vdw_ij_exlist_host2(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist_host21714,46254
void mr3calccoulomb_vdw_ij_exlist_host_(int *ni, double xi[], double qi[], mr3calccoulomb_vdw_ij_exlist_host_1765,47974
void mr3calccoulomb_vdw_ij_exlist_host__(int *ni, double xi[], double qi[], mr3calccoulomb_vdw_ij_exlist_host__1835,50099

old/mr3/vtgrape_mixed.c,1142
static void sort_natex2(int ni, int numex2[], int natex2[])sort_natex21,0
static void calc_ij_host_mixedaccuracy_setup(float *largeval, int method)calc_ij_host_mixedaccuracy_setup48,1010
static void calc_ij_host_mixedaccuracy_clearforce(float forcef[3], float forcef2[3],calc_ij_host_mixedaccuracy_clearforce54,1144
static void calc_ij_host_mixedaccuracy_updateforce(float forcef[3], float forcef2[3],calc_ij_host_mixedaccuracy_updateforce63,1391
#define LOWER_VAL_SHIFT2 LOWER_VAL_SHIFT272,1629
static void calc_ij_host_mixedaccuracy_addforce(float forcef[3], float forcef2[3],calc_ij_host_mixedaccuracy_addforce102,2804
static void calc_ij_host_mixedaccuracy_calcforce(double xid[3], double xjd[3],calc_ij_host_mixedaccuracy_calcforce123,3373
void MR3calc_ij_host_mixedaccuracy(int ni, double xid[], double *qid, int *atypei, MR3calc_ij_host_mixedaccuracy302,7656
void MR3calc_ij_exlist_host_mixedaccuracy(int ni, double xid[], double *qid, MR3calc_ij_exlist_host_mixedaccuracy351,9516
void MR3calc_ij_nlist_host_mixedaccuracy(int ni, double xid[], double *qid, int *atypei, MR3calc_ij_nlist_host_mixedaccuracy485,14436

old/mr3/sockhelp.h,41
#define _SOCKHELP_H__SOCKHELP_H_19,691

old/mr3/vtgrape_mr3.c,6444
static int Overlapflag=0;Overlapflag1,0
static double *F2compare=NULL,Potccompare=0.0,Potvcompare=0.0;F2compare2,26
static double *F2compare=NULL,Potccompare=0.0,Potvcompare=0.0;Potccompare2,26
static double *F2compare=NULL,Potccompare=0.0,Potvcompare=0.0;Potvcompare2,26
static int    Ncompare=0;Ncompare3,89
void MR3_get_cputime(double *laptime, double *sprittime)MR3_get_cputime6,117
static void setup_volume(double xmax, double volume[3])setup_volume11,216
void MR3_set_ldim(int ldim[3])MR3_set_ldim42,935
void mr3_set_ldim_(int ldim[3])mr3_set_ldim_49,1017
void mr3_set_ldim__(int ldim[3])mr3_set_ldim__55,1077
void MR3_set_coulomb_vdw_factor(double cgf)MR3_set_coulomb_vdw_factor61,1138
void mr3_set_coulomb_vdw_factor_(double *cgf)mr3_set_coulomb_vdw_factor_67,1214
void mr3_set_coulomb_vdw_factor__(double *cgf)mr3_set_coulomb_vdw_factor__73,1302
void MR3calccoulomb_ij_emu(int ni, double xid[], double qid[], double force[],MR3calccoulomb_ij_emu79,1391
void MR3calccoulomb_nlist_ij_emu(int ni, double xid[], double qid[], double force[],MR3calccoulomb_nlist_ij_emu229,5148
void MR3calccoulomb_nlist_emu(double xd[], int n, double qd[], double rscale,MR3calccoulomb_nlist_emu429,10869
static float vdw_shift_emu(float r2, vdw_shift_emu439,11197
void MR3calcvdw_ij_emu(int ni, double xid[], int atypei[], double force[],MR3calcvdw_ij_emu487,12397
static __inline__ float madd_emu(float a, float x, float y)madd_emu628,15487
__inline__ float calc_dr_r2(calc_dr_r2669,16501
float calc_dtmp_vdw_force(float r1, float r2, float r6, calc_dtmp_vdw_force707,17304
static void MR3calccoulomb_vdw_nlist_ij_emu_work(int ni, double xid[], double qid[], int atypei[], double force[],MR3calccoulomb_vdw_nlist_ij_emu_work738,17785
static v4sf erfcfv(v4sf xv)erfcfv1074,25913
static v4sf expfv(v4sf xv)expfv1087,26062
static v4sf rintfv(v4sf xv)rintfv1100,26209
static v4sf powfv(v4sf xv, float p)powfv1113,26358
static v4sf sqrtfv(v4sf xv)sqrtfv1126,26516
static void MR3calccoulomb_vdw_nlist_ij_emu_vec_sub(v4sf fiv[3], v4sf fjv[3],MR3calccoulomb_vdw_nlist_ij_emu_vec_sub1139,26665
static void MR3calccoulomb_vdw_nlist_ij_emu_vec_sub2(int iindex[],int jindex[], MR3calccoulomb_vdw_nlist_ij_emu_vec_sub21352,32738
static void MR3calccoulomb_vdw_nlist_ij_emu_vec(int ni, double xid[], double qid[], int atypei[], double force[],MR3calccoulomb_vdw_nlist_ij_emu_vec1370,33127
void MR3calccoulomb_vdw_nlist_ij_emu(int ni, double xid[], double qid[], int atypei[], double force[],MR3calccoulomb_vdw_nlist_ij_emu1513,37294
void MR3calcvdw_nlist_ij_emu(int ni, double xid[], int atypei[], double force[],MR3calcvdw_nlist_ij_emu1548,38763
void MR3calcvdw_nlist_emu2(double xd[], int n, int atype[], int nat,MR3calcvdw_nlist_emu21775,43953
void MR3calccoulomb_ij_exlist(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_exlist1840,45413
void mr3calccoulomb_ij_exlist_(int *ni, double xi[], double qi[], mr3calccoulomb_ij_exlist_1956,50200
void mr3calccoulomb_ij_exlist__(int *ni, double xi[], double qi[], mr3calccoulomb_ij_exlist__2053,52733
void MR3calcvdw_ij_exlist(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_exlist2070,53148
void mr3calcvdw_ij_exlist_(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij_exlist_2143,56192
void mr3calcvdw_ij_exlist__(int *ni, double xi[], int atypei[], double force[],mr3calcvdw_ij_exlist__2202,58084
static void make_natex2(int n, int numex[], int natex[],make_natex22216,58477
void MR3calccoulomb_vdw_ij_exlist_core_old(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist_core_old2299,60443
void MR3calccoulomb_vdw_ij_exlist_core(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist_core2545,68422
static void *MR3calccoulomb_vdw_ij_exlist_theread(void *thread_arg){MR3calccoulomb_vdw_ij_exlist_theread2764,77041
void MR3calccoulomb_vdw_ij_exlist(int ni, double xi[], double qi[], MR3calccoulomb_vdw_ij_exlist2779,77567
void mr3calccoulomb_vdw_ij_exlist_(int *ni, double xi[], double qi[], mr3calccoulomb_vdw_ij_exlist_2974,83869
void mr3calccoulomb_vdw_ij_exlist_virial_(int *ni, double xi[], double qi[], mr3calccoulomb_vdw_ij_exlist_virial_3183,90323
void MR3calccoulomb_vdw_exlist(int n, double x[], double q[], MR3calccoulomb_vdw_exlist3387,96820
void MR3calccoulomb_vdw_exlist_from_cell(int n, double x[], double q[], MR3calccoulomb_vdw_exlist_from_cell3432,98425
#define CALC_NLIST_WITH_SPECALC_NLIST_WITH_SPE3454,99085
static void MR3calccoulomb_vdw_exlist_host2(int *n, double x[], double q[], MR3calccoulomb_vdw_exlist_host23621,104603
static void compare_forces(double *potc, double potch, double *potv, double potvh,compare_forces3711,106886
void mr3calccoulomb_vdw_exlist_(int *n, double x[], double q[], mr3calccoulomb_vdw_exlist_3770,109432
void MR3_get_forces_overlap(double force[])MR3_get_forces_overlap4120,121101
void mr3_get_forces_overlap_(double force[])mr3_get_forces_overlap_4179,123212
void MR3_get_potc_and_potv_overlap(double *potc, double *potv)MR3_get_potc_and_potv_overlap4185,123296
void mr3_get_potc_and_potv_overlap_(double *potc, double *potv)mr3_get_potc_and_potv_overlap_4204,123721
void mr3_get_potc_and_potv_overlap__(double *potc, double *potv)mr3_get_potc_and_potv_overlap__4210,123835
void MR3_get_forces_and_virial_overlap(double force[], double virial[3][3])MR3_get_forces_and_virial_overlap4216,123951
void mr3_get_forces_and_virial_overlap_(double force[], double virial[3][3])mr3_get_forces_and_virial_overlap_4223,124139
void MR3calccoulomb_ci_exlist(int n, double x[], double q[], double force[],MR3calccoulomb_ci_exlist4229,124273
void mr3calccoulomb_ci_exlist_(int *n, double x[], double q[], double force[],mr3calccoulomb_ci_exlist_4240,124552
void MR3calcvdw_ci(int n, double x[], int atype[], int nat, double force[],MR3calcvdw_ci4281,125940
void mr3calcvdw_ci_(int *n, double x[], int atype[], int *nat, double force[],mr3calcvdw_ci_4288,126138
void MR3calcvdw_ci_exlist(int n, double x[], int atype[], int nat, MR3calcvdw_ci_exlist4309,126788
void mr3calcvdw_ci_exlist_(int *n, double x[], int atype[], int *nat, mr3calcvdw_ci_exlist_4321,127075
void MR3calccoulomb_vdw_ci_exlist(int n, double x[], double q[], MR3calccoulomb_vdw_ci_exlist4395,129280
void mr3calccoulomb_vdw_ci_exlist_(int *n, double x[], double q[], mr3calccoulomb_vdw_ci_exlist_4458,131147

old/mr3/md.h,7823
#define _MD_H__MD_H_2,15
#define MD_GENERATE_EMUTABLE MD_GENERATE_EMUTABLE26,992
#define MD_QAUNION_ATYPEBIT MD_QAUNION_ATYPEBIT29,1260
#define MD_CELLINDEX MD_CELLINDEX35,1643
#define MD_CELLINDEX_MAXCELL_PER_DIM MD_CELLINDEX_MAXCELL_PER_DIM37,1783
#define MD_CELLINDEX_MAXIBLOCKS MD_CELLINDEX_MAXIBLOCKS38,1823
#define MD_USE_LARGE_VAL MD_USE_LARGE_VAL42,2108
#define VDW_SHIFT VDW_SHIFT53,2937
#define VDW_SHIFT_CORRECT VDW_SHIFT_CORRECT58,3274
#define CUTON_DEFAULT CUTON_DEFAULT59,3356
#define ACCUMULATE_PAIR_FLOAT ACCUMULATE_PAIR_FLOAT62,3504
#define MD_PERIODIC_FIXED MD_PERIODIC_FIXED68,3992
#define MD_LJ_05SIGMA_8SIGMA MD_LJ_05SIGMA_8SIGMA70,4191
#define MD_UNROLL_KERNEL MD_UNROLL_KERNEL82,5250
#define MD_FVEC_SIZE MD_FVEC_SIZE85,5406
#define MD_MAX_I_PER_KERNEL MD_MAX_I_PER_KERNEL88,5575
#define MD_MAX_J_PER_RUN MD_MAX_J_PER_RUN90,5614
#define MD_USE_QAUNION MD_USE_QAUNION92,5694
#define MD_R1_EMU_FNAME MD_R1_EMU_FNAME96,5929
#define MD_RSQRT_EMU_FNAME MD_RSQRT_EMU_FNAME97,5977
#define MD_R1_EMU_MD5SUM MD_R1_EMU_MD5SUM99,6029
#define MD_RSQRT_EMU_MD5SUM MD_RSQRT_EMU_MD5SUM100,6094
#define VG_MINIMUM_PARTICLE_BLOCK_I VG_MINIMUM_PARTICLE_BLOCK_I104,6227
#define VG_JDIV VG_JDIV108,6433
#define VG_MINIMUM_PARTICLE_BLOCK_J VG_MINIMUM_PARTICLE_BLOCK_J110,6504
#define VG_MINIMUM_PARTICLE_BLOCK_F VG_MINIMUM_PARTICLE_BLOCK_F111,6568
#define VG_EMU_VECSIZE VG_EMU_VECSIZE113,6633
#define VG_RESTRICTED VG_RESTRICTED114,6658
#define VG_MINIMUM_ATYPE_BLOCK VG_MINIMUM_ATYPE_BLOCK120,6827
#define NI_ROUNDUP(NI_ROUNDUP127,7353
#define NJ_ROUNDUP(NJ_ROUNDUP128,7469
#define NF_ROUNDUP(NF_ROUNDUP129,7585
#define MATRIX_ROUNDUP(MATRIX_ROUNDUP131,7708
#define MD_QATYPE_TO_ATYPE(MD_QATYPE_TO_ATYPE136,7868
#define MD_QATYPE_TO_Q(MD_QATYPE_TO_Q137,7921
#define LJ_BS_SIZE LJ_BS_SIZE141,8018
#define LJ_BS_SIZE LJ_BS_SIZE143,8047
#define MASK(MASK147,8091
#define LARGE_VAL_SHIFT LARGE_VAL_SHIFT150,8131
#define LOWER_VAL_SHIFT LOWER_VAL_SHIFT153,8322
#define LARGE_VAL_ORG LARGE_VAL_ORG155,8418
#define LOWER_VAL_FACTOR_ORG LOWER_VAL_FACTOR_ORG161,8635
#define LOWER_VAL_FACTOR_1_ORG LOWER_VAL_FACTOR_1_ORG162,8730
#define LARGE_VAL LARGE_VAL174,9220
#define LOWER_VAL_FACTOR LOWER_VAL_FACTOR175,9306
#define LOWER_VAL_FACTOR_1 LOWER_VAL_FACTOR_1176,9342
#define Q_DOUBLE_TO_INT(Q_DOUBLE_TO_INT182,9435
#define Q_INT_TO_FLOAT(Q_INT_TO_FLOAT184,9626
#define ATYPE_PACK_TO_QATYPE(ATYPE_PACK_TO_QATYPE185,9722
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE186,9800
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE188,9884
#define TYPEDEF_LONGLONG TYPEDEF_LONGLONG193,9966
typedef struct { unsigned int h,l; } longlong;h195,10011
typedef struct { unsigned int h,l; } longlong;l195,10011
typedef struct { unsigned int h,l; } longlong;longlong195,10011
typedef struct { unsigned int l,h; } longlong;l197,10065
typedef struct { unsigned int l,h; } longlong;h197,10065
typedef struct { unsigned int l,h; } longlong;longlong197,10065
#define M3_UNIT M3_UNIT202,10144
  long base;base207,10208
  long size;size208,10221
} M3_CELL;M3_CELL209,10234
  float q;q214,10291
  int atype;atype215,10302
} VG_QATYPE;VG_QATYPE216,10315
  float r[3];r221,10354
  int qatype;qatype223,10389
  VG_QATYPE qatype;qatype225,10433
  int atype;atype227,10459
  float q;q228,10472
  float halfsigma;halfsigma231,10525
  float sqrtepsilon;sqrtepsilon232,10544
} VG_JVEC;VG_JVEC234,10572
  float r[3];r237,10601
  int qatype;qatype239,10636
  VG_QATYPE qatype;qatype241,10680
  int atype;atype243,10706
  float q;q244,10719
  float halfsigma;halfsigma247,10772
  float sqrtepsilon;sqrtepsilon248,10791
  int ci[4];ci251,10850
} VG_IVEC;VG_IVEC253,10870
  float gscale;gscale258,10918
  float rscale;rscale259,10934
  float shift;shift261,10972
  float pol;pol264,11009
  float sigm;sigm265,11022
  float ipotro;ipotro266,11036
  float pc;pc267,11052
  float pd;pd268,11064
  float zz;zz269,11076
} VG_MATRIX;VG_MATRIX271,11095
  float volume[3];volume274,11126
  float alpha;alpha275,11145
  float alphafac;alphafac276,11160
  float alpha3fac;alpha3fac277,11178
  float eps2;eps2278,11197
  float r2max;r2max279,11211
  float gscalesf[VG_MINIMUM_ATYPE_BLOCK];gscalesf281,11253
  float gscalesp[VG_MINIMUM_ATYPE_BLOCK];gscalesp282,11295
  float rscales[VG_MINIMUM_ATYPE_BLOCK];rscales283,11337
  float rcut21;rcut21286,11417
  float scaleqi_1,scaleqj_1;scaleqi_1289,11467
  float scaleqi_1,scaleqj_1;scaleqj_1289,11467
} VG_SCALER;VG_SCALER291,11503
  float fi[MD_FVEC_SIZE];fi294,11534
  float fi2[MD_FVEC_SIZE];fi2296,11589
} VG_FVEC;VG_FVEC298,11623
  int base;base301,11652
  int size;size302,11664
} VG_CELL;VG_CELL303,11676
#define MD_NUM_JCELLS MD_NUM_JCELLS305,11688
  VG_CELL ci[MD_CELLINDEX_MAXIBLOCKS][MD_NUM_JCELLS];ci309,11759
  int   niblock[MD_CELLINDEX_MAXIBLOCKS];niblock314,11932
  int   nicell;nicell315,11974
  float potc;potc317,11997
  float potv;potv318,12011
} VG_PSCALER;VG_PSCALER319,12025
  float f;f322,12056
  int i;i323,12067
} VG_UNION_FI;VG_UNION_FI324,12076
#define MD_LJ_R2MIN MD_LJ_R2MIN329,12173
#define MD_LJ_R2MAX MD_LJ_R2MAX330,12201
#define MD_LJ_R2MIN MD_LJ_R2MIN332,12256
#define MD_LJ_R2MAX MD_LJ_R2MAX333,12282
#define MD_LJ_R2MIN MD_LJ_R2MIN335,12337
#define MD_LJ_R2MAX MD_LJ_R2MAX336,12365
#define MD_LJ_R2MIN MD_LJ_R2MIN338,12419
#define MD_LJ_R2MAX MD_LJ_R2MAX339,12447
#define MD_LJ_R2MIN MD_LJ_R2MIN341,12502
#define MD_LJ_R2MAX MD_LJ_R2MAX342,12530
#define MD_LJ_R2MIN MD_LJ_R2MIN344,12586
#define MD_LJ_R2MAX MD_LJ_R2MAX345,12614
#define MD_LJ_R2MIN MD_LJ_R2MIN347,12671
#define MD_LJ_R2MAX MD_LJ_R2MAX348,12699
#define MD_LJ_R2MIN MD_LJ_R2MIN352,12811
#define MD_LJ_R2MAX MD_LJ_R2MAX353,12852
#define MD_REAL_R2MIN MD_REAL_R2MIN366,13081
#define MD_REAL_R2MAX MD_REAL_R2MAX367,13111
#define MR3_malloc_pointer(MR3_malloc_pointer371,13159
#define MR3_free_pointer(MR3_free_pointer372,13211
#define MR3_malloc_pointer(MR3_malloc_pointer374,13281
#define MR3_free_pointer(MR3_free_pointer375,13323
typedef float v4sf __attribute__ ((vector_size(16)));v4sf381,13475
typedef int   v4si __attribute__ ((vector_size(16)));v4si382,13529
typedef float* v4sf;v4sf384,13589
  int ni;ni389,13636
  double *xi;xi390,13646
  double *qi;qi391,13660
  int *atypei;atypei392,13674
  double *force;force393,13689
  int nj;nj394,13706
  double *xj;xj395,13716
  double *qj; qj396,13730
  int *atypej;atypej397,13745
  int nat;nat398,13760
  double *gscalesf;gscalesf399,13771
  double *gscalesp;gscalesp400,13791
  double *rscales;rscales401,13811
  double rscale;rscale402,13830
  int tblno;tblno403,13847
  double xmax;xmax404,13860
  double *potc;potc405,13875
  double *potv;potv406,13891
  int periodicflag;periodicflag407,13907
  int potflag;potflag408,13927
  int changeflag;changeflag409,13942
  int *numex;numex410,13960
  int *natex;natex411,13974
} thread_arg_coulombvdwijexlist;thread_arg_coulombvdwijexlist412,13988
#define grav grav415,14023
#define gravpot gravpot419,14140
#define lj lj423,14246
#define ljpot ljpot432,14559
#define real real441,14843
#define realpot realpot446,15017
#define wave wave451,15155
#define wavepot wavepot453,15191
#define dummy dummy455,15230
#define VDW_FORCE(VDW_FORCE483,16461
#define VDW_ENERGY(VDW_ENERGY485,16598
#define VDW_FORCE_SHIFT(VDW_FORCE_SHIFT488,16727
#define VDW_FORCE_SHIFT(VDW_FORCE_SHIFT491,16948
#define VDW_ENERGY_SHIFT(VDW_ENERGY_SHIFT496,17250
#define VDW_FORCE_SWITCH(VDW_FORCE_SWITCH502,17609
#define VDW_ENERGY_SWITCH(VDW_ENERGY_SWITCH508,18093

old/mr3/vtgrape.h,1105
#define _VTGRAPE_H__VTGRAPE_H_2,20
#define VG_MAX_FUNCTIONS VG_MAX_FUNCTIONS6,107
  int deviceid;deviceid9,154
  int nj;nj10,170
  int ni;ni11,180
  int nf;nf12,190
  void *jvectors;jvectors13,200
  int jsize;jsize14,218
  void *ivectors;ivectors15,231
  int isize;isize16,249
  int nati;nati17,262
  int natj;natj18,274
  void *matrices;matrices19,286
  int ssize;ssize20,304
  void *scalers;scalers21,317
  void *fvectors;fvectors22,334
  int fsize;fsize23,352
  int psize;psize24,365
  void *pscalers;pscalers25,378
  double volume[3];// only for MD_PERIODIC_FIXED==1volume27,447
  void (*calculate[VG_MAX_FUNCTIONS])(void *);calculate28,499
  float *r1;r129,546
  float *rsqrt;rsqrt30,559
  double *fthread;fthread33,638
  pthread_t thread;thread34,657
  int ni_overlap;ni_overlap35,677
  double potc;potc36,695
  double potv;potv37,710
  double rcut2;rcut238,725
  double cuton;cuton39,741
  int gpuoverlapflag;gpuoverlapflag41,803
  int function_index;function_index42,825
  int debug_flag;debug_flag47,926
} VG_UNIT;VG_UNIT48,944

old/mr3/vtgrape_cellindex.c,2097
static void check_rcut_and_skinnb(double rcut, double skinnb,check_rcut_and_skinnb1,0
static void assign_cell(int n, double x_org[], assign_cell15,468
static void cell_range(int n, double x[], cell_range108,3147
static void assign_cell_noperiodic(int n, double *x,assign_cell_noperiodic188,5369
static void make_contiguous_xq(int n, double *x, double *q,make_contiguous_xq265,7822
static void make_contiguous_xa(int n, double *x, int *atype,make_contiguous_xa288,8459
static void make_contiguous_xqa(int n, double *x, double *q, int *atype,make_contiguous_xqa311,9115
void MR3calccoulomb_ci(int n, double x[], double q[], double force[],MR3calccoulomb_ci335,9804
void mr3calccoulomb_ci_(int *n, double x[], double q[], double force[],mr3calccoulomb_ci_467,13717
void MR3calccoulomb_ij_ci(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_ci477,13976
void MR3calccoulomb_ij_ci_old(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_ci_old745,23466
void MR3calcvdw_ij_ci(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_ci1001,33546
void MR3calccoulomb_vdw_ij_ci_virial(int ni, double xi[], double qi[], int atypei[], double force[],MR3calccoulomb_vdw_ij_ci_virial1308,44204
void MR3calccoulomb_vdw_ij_ci(int ni, double xi[], double qi[], int atypei[], double force[],MR3calccoulomb_vdw_ij_ci1733,59711
void mr3calccoulomb_vdw_ij_ci_(int *ni, double xi[], double qi[], int atypei[], double force[],mr3calccoulomb_vdw_ij_ci_1776,60812
void MR3calccoulomb_vdw_ij_ci_old_09(int ni, double xi[], double qi[], int atypei[], double force[],MR3calccoulomb_vdw_ij_ci_old_091841,63210
void MR3calccoulomb_vdw_ij_ci_old_090121(int ni, double xi[], double qi[], int atypei[], double force[],MR3calccoulomb_vdw_ij_ci_old_0901212164,74473
void MR3calccoulomb_vdw_ij_ci_exlist(int ni, double xi[], double qi[], int atypei[], double force[],MR3calccoulomb_vdw_ij_ci_exlist2488,86103
void mr3calccoulomb_vdw_ij_ci_exlist_(int *ni, double xi[], double qi[], int atypei[], double force[],mr3calccoulomb_vdw_ij_ci_exlist_2624,90848

old/mr3/mddriver.c,2423
#define MD MD21,682
#define PROTOTYPES PROTOTYPES37,1075
typedef unsigned char *POINTER;POINTER41,1149
typedef unsigned short int UINT2;UINT244,1218
typedef unsigned int UINT4;UINT447,1290
#define PROTO_LIST(PROTO_LIST54,1502
#define PROTO_LIST(PROTO_LIST56,1538
  UINT4 state[4];                                   /* state (ABCD) */state87,2545
  UINT4 count[2];        /* number of bits, modulo 2^64 (lsb first) */count88,2616
  unsigned char buffer[64];                         /* input buffer */buffer89,2687
} MD5_CTX;MD5_CTX90,2758
#define S11 S11129,4018
#define S12 S12130,4032
#define S13 S13131,4047
#define S14 S14132,4062
#define S21 S21133,4077
#define S22 S22134,4091
#define S23 S23135,4105
#define S24 S24136,4120
#define S31 S31137,4135
#define S32 S32138,4149
#define S33 S33139,4164
#define S34 S34140,4179
#define S41 S41141,4194
#define S42 S42142,4208
#define S43 S43143,4223
#define S44 S44144,4238
static unsigned char PADDING[64] = {PADDING154,4614
#define F(F162,4901
#define G(G163,4949
#define H(H164,4997
#define I(I165,5034
#define ROTATE_LEFT(ROTATE_LEFT169,5117
#define FF(FF174,5309
#define GG(GG179,5447
#define HH(HH184,5585
#define II(II189,5723
static void MD5Init (context)MD5Init197,5937
static void MD5Update (context, input, inputLen)MD5Update213,6411
static void MD5Final (digest, context)MD5Final255,7582
static void MD5Transform (state, block)MD5Transform284,8376
static void Encode (output, input, len)Encode377,12188
static void Decode (output, input, len)Decode395,12668
static void MD5_memcpy (output, input, len)MD5_memcpy410,13024
static void MD5_memset (output, value, len)MD5_memset423,13258
#define TEST_BLOCK_LEN TEST_BLOCK_LEN437,13488
#define TEST_BLOCK_COUNT TEST_BLOCK_COUNT438,13516
#define MD_CTX MD_CTX447,13821
#define MDInit MDInit448,13844
#define MDUpdate MDUpdate449,13867
#define MDFinal MDFinal450,13894
static void MDString (string)MDString455,13968
static void MDTimeTrial ()MDTimeTrial474,14347
static void MDTestSuite ()MDTestSuite512,15248
static void MDFile (filename)MDFile530,15667
static void MDFilter ()MDFilter557,16185
static void MDPrint (digest)MDPrint574,16500
int md5sum(unsigned char *buffer, int totallen, unsigned char sum[16])md5sum585,16660
int md5sum_file(char *filename, unsigned char sum[16])md5sum_file601,17080

old/mr3/Makefile,845
CC = gccCC23,665
F90 = gfortranF9027,742
F77 = gfortranF7728,757
CUDA_SDK2=-DCUDA_SDK_2CUDA_SDK232,810
CFLAGSCORE = -O $(FLAGS)CFLAGSCORE35,846
INCLUDEDIR = ../../includeINCLUDEDIR44,1067
INCLUDEDEP1 = $(INCLUDEDIR)/mdgrape3.hINCLUDEDEP145,1094
CFLAGS = $(CFLAGSCORE)CFLAGS47,1189
FFLAGS = $(CFLAGSCORE)FFLAGS49,1235
G80LIB = libmd3withg80.aG80LIB50,1258
G80LIBVG = libmd3withg80vg.aG80LIBVG51,1283
TARGET = emutestvg sample_md3vgTARGET55,1506
GPUCOREOBJ = gpuvdwforce_mother.o gpuvdwpot_mother.o gpucoulombforce_mother.o \GPUCOREOBJ65,1946
NVCC       = $(CUDA_INSTALL_PATH)/bin/nvcc NVCC69,2139
NVCC_FLAGS = -cuda --host-compilation C NVCC_FLAGS70,2183
CUDAINCLUDES  = -I. -I$(CUDA_INSTALL_PATH)/includeCUDAINCLUDES85,2625
CUDALIB = -L$(CUDA_INSTALL_PATH)/lib64 -lcudart -lGLU -lGL -lm -lpthreadCUDALIB93,3012

old/mr3/func.c++,597
#define SUB_HEADER SUB_HEADER5,53
#define SUB_HEADER SUB_HEADER7,89
DF calc_vdw(DF r1, DF r2, DF r6, calc_vdw12,175
float calc_dtmp_vdw_force(float r1, float r2, float r6, calc_dtmp_vdw_force58,983
float calc_dtmp_vdw_force_notwork3(float r1, float r2, float r6, calc_dtmp_vdw_force_notwork387,1459
float calc_dtmp_vdw_force_notwork2(float r1, float r2, float r6, calc_dtmp_vdw_force_notwork2110,1848
float calc_dtmp_vdw_force_notwork(float r1, float r2, float r6, calc_dtmp_vdw_force_notwork133,2287
float calc_dtmp_vdw_pot(float r1, float r2, float r6, calc_dtmp_vdw_pot149,2649

old/kernel/CPUCartesianLaplace.cxx,8926
#define KERNELKERNEL22,1091
#undef KERNELKERNEL24,1126
#define constexpr constexpr27,1176
struct Index {Index31,1241
  static const int      I = Index<nx,ny+1,nz-1>::I + 1;I32,1256
  static constexpr real F = Index<nx,ny,nz-1>::F * nz;F33,1312
struct Index<nx,ny,0> {Index37,1396
  static const int      I = Index<nx+1,0,ny-1>::I + 1;I38,1420
  static constexpr real F = Index<nx,ny-1,0>::F * ny;F39,1475
struct Index<nx,0,0> {Index43,1550
  static const int      I = Index<0,0,nx-1>::I + 1;I44,1573
  static constexpr real F = Index<nx-1,0,0>::F * nx;F45,1625
struct Index<0,0,0> {Index49,1693
  static const int      I = 0;I50,1715
  static constexpr real F = 1;F51,1746
struct DerivativeTerm {DerivativeTerm56,1830
  static const int coef = 1 - 2 * n;coef57,1854
  static inline real kernel(const Lset &C, const vect &dist) {kernel58,1891
struct DerivativeTerm<n,kx,ky,kz,-1> {DerivativeTerm64,2054
  static const int coef = 1 - n;coef65,2093
  static inline real kernel(const Lset &C, const vect&) {kernel66,2126
struct DerivativeSum {DerivativeSum73,2312
  static const int nextflag = 5 - (kz < nz || kz == 1);nextflag74,2335
  static const int dim = kz == (nz-1) ? -1 : 2;dim75,2391
  static const int n = nx + ny + nz;n76,2439
  static inline real loop(const Lset &C, const vect &dist) {loop77,2476
struct DerivativeSum<nx,ny,nz,kx,ky,kz,4> {DerivativeSum84,2732
  static const int nextflag = 3 - (ny == 0);nextflag85,2776
  static inline real loop(const Lset &C, const vect &dist) {loop86,2821
struct DerivativeSum<nx,ny,nz,kx,ky,kz,3> {DerivativeSum92,3015
  static const int nextflag = 3 - (ky < ny || ky == 1);nextflag93,3059
  static const int dim = ky == (ny-1) ? -1 : 1;dim94,3115
  static const int n = nx + ny + nz;n95,3163
  static inline real loop(const Lset &C, const vect &dist) {loop96,3200
struct DerivativeSum<nx,ny,nz,kx,ky,kz,2> {DerivativeSum103,3456
  static const int nextflag = 1 - (nx == 0);nextflag104,3500
  static inline real loop(const Lset &C, const vect &dist) {loop105,3545
struct DerivativeSum<nx,ny,nz,kx,ky,kz,1> {DerivativeSum111,3739
  static const int nextflag = 1 - (kx < nx || kx == 1);nextflag112,3783
  static const int dim = kx == (nx-1) ? -1 : 0;dim113,3839
  static const int n = nx + ny + nz;n114,3887
  static inline real loop(const Lset &C, const vect &dist) {loop115,3924
struct DerivativeSum<nx,ny,nz,kx,ky,kz,0> {DerivativeSum122,4180
  static inline real loop(const Lset&, const vect&) {loop123,4224
struct DerivativeSum<nx,ny,nz,kx,ky,0,5> {DerivativeSum129,4349
  static inline real loop(const Lset &C, const vect &dist) {loop130,4392
struct Terms {Terms137,4555
  static inline void power(Lset &C, const vect &dist) {power138,4570
  static inline void derivative(Lset &C, const vect &dist, const real &invR2) {derivative142,4738
  static inline void scale(Lset &C) {scale147,4991
struct Terms<nx,ny,0> {Terms154,5146
  static inline void power(Lset &C, const vect &dist) {power155,5170
  static inline void derivative(Lset &C, const vect &dist, const real &invR2) {derivative159,5335
  static inline void scale(Lset &C) {scale164,5580
struct Terms<nx,0,0> {Terms171,5724
  static inline void power(Lset &C, const vect &dist) {power172,5747
  static inline void derivative(Lset &C, const vect &dist, const real &invR2) {derivative176,5907
  static inline void scale(Lset &C) {scale181,6142
struct Terms<0,0,0> {Terms188,6275
  static inline void power(Lset&, const vect&) {}power189,6297
  static inline void derivative(Lset&, const vect&, const real&) {}derivative190,6347
  static inline void scale(Lset&) {}scale191,6415
struct M2MSum {M2MSum196,6523
  static inline real kernel(const Lset &C, const Mset &M) {kernel197,6539
struct M2MSum<nx,ny,nz,kx,ky,0> {M2MSum204,6773
  static inline real kernel(const Lset &C, const Mset &M) {kernel205,6807
struct M2MSum<nx,ny,nz,kx,0,0> {M2MSum212,7029
  static inline real kernel(const Lset &C, const Mset &M) {kernel213,7062
struct M2MSum<nx,ny,nz,0,0,0> {M2MSum220,7272
  static inline real kernel(const Lset&, const Mset&) { return 0; }kernel221,7304
struct M2LSum {M2LSum226,7449
  static inline real kernel(const Lset &L, const Mset &M) {kernel227,7465
struct M2LSum<nx,ny,nz,kx,ky,0> {M2LSum234,7703
  static inline real kernel(const Lset &L, const Mset &M) {kernel235,7737
struct M2LSum<nx,ny,nz,kx,0,0> {M2LSum242,7962
  static inline real kernel(const Lset &L, const Mset &M) {kernel243,7995
struct M2LSum<nx,ny,nz,0,0,0> {M2LSum250,8205
  static inline real kernel(const Lset&, const Mset&) { return 0; }kernel251,8237
struct LocalSum {LocalSum256,8382
  static inline real kernel(const Lset &C, const Lset &L) {kernel257,8400
struct LocalSum<nx,ny,nz,kx,ky,0> {LocalSum264,8640
  static inline real kernel(const Lset &C, const Lset &L) {kernel265,8676
struct LocalSum<nx,ny,nz,kx,0,0> {LocalSum272,8903
  static inline real kernel(const Lset &C, const Lset &L) {kernel273,8938
struct LocalSum<nx,ny,nz,0,0,0> {LocalSum280,9150
  static inline real kernel(const Lset&, const Lset&) { return 0; }kernel281,9184
struct Upward {Upward286,9290
  static inline void M2M(Mset &MI, const Lset &C, const Mset &MJ) {M2M287,9306
struct Upward<nx,ny,0> {Upward294,9509
  static inline void M2M(Mset &MI, const Lset &C, const Mset &MJ) {M2M295,9534
struct Upward<nx,0,0> {Upward302,9726
  static inline void M2M(Mset &MI, const Lset &C, const Mset &MJ) {M2M303,9750
struct Upward<0,0,0> {Upward310,9931
  static inline void M2M(Mset&, const Lset&, const Mset&) {}M2M311,9954
struct Downward {Downward316,10053
  static inline void M2L(Lset &L, const Lset &C, const Mset &M) {M2L317,10071
  static inline void M2P(B_iter B, const Lset &C, const Mset &M) {M2P321,10241
  static inline void L2L(Lset &LI, const Lset &C, const Lset &LJ) {L2L325,10417
  static inline void L2P(B_iter B, const Lset &C, const Lset &L) {L2P329,10595
struct Downward<nx,ny,0> {Downward336,10802
  static inline void M2L(Lset &L, const Lset &C, const Mset &M) {M2L337,10829
  static inline void M2P(B_iter B, const Lset &C, const Mset &M) {M2P341,10996
  static inline void L2L(Lset &LI, const Lset &C, const Lset &LJ) {L2L345,11169
  static inline void L2P(B_iter B, const Lset &C, const Lset &L) {L2P349,11344
struct Downward<nx,0,0> {Downward356,11540
  static inline void M2L(Lset &L, const Lset &C, const Mset &M) {M2L357,11566
  static inline void M2P(B_iter B, const Lset &C, const Mset &M) {M2P361,11728
  static inline void L2L(Lset &LI, const Lset &C, const Lset &LJ) {L2L365,11896
  static inline void L2P(B_iter B, const Lset &C, const Lset &L) {L2P369,12066
struct Downward<0,0,0> {Downward376,12251
  static inline void M2L(Lset&, const Lset&, const Mset&) {}M2L377,12276
  static inline void M2P(B_iter, const Lset&, const Mset&) {}M2P378,12337
  static inline void L2L(Lset&, const Lset&, const Lset&) {}L2L379,12399
  static inline void L2P(B_iter, const Lset&, const Lset&) {}L2P380,12460
inline void getCoef(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef384,12543
inline void getCoef<1>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef391,12722
inline void getCoef<2>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef402,12987
inline void getCoef<3>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef418,13393
inline void getCoef<4>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef440,14042
inline void getCoef<5>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef468,15050
inline void getCoef<6>(Lset &C, const vect &dist, real &invR2, const real &invR) {getCoef503,16779
inline void sumM2L(Lset &L, const Lset &C, const Mset &M) {sumM2L546,19735
inline void sumM2L<1>(Lset &L, const Lset &C, const Mset&) {sumM2L553,19905
inline void sumM2L<2>(Lset &L, const Lset &C, const Mset &M) {sumM2L558,19990
inline void sumM2L<3>(Lset &L, const Lset &C, const Mset &M) {sumM2L567,20251
inline void sumM2L<4>(Lset &L, const Lset &C, const Mset &M) {sumM2L582,20890
inline void sumM2L<5>(Lset &L, const Lset &C, const Mset &M) {sumM2L607,22340
inline void sumM2L<6>(Lset &L, const Lset &C, const Mset &M) {sumM2L647,25298
inline void sumM2P(B_iter B, const Lset &C, const Mset &M) {sumM2P707,30802
void Kernel<Laplace>::initialize() {}initialize717,31049
void Kernel<Laplace>::P2M(C_iter Ci) {P2M720,31099
void Kernel<Laplace>::M2M(C_iter Ci) {M2M737,31517
void Kernel<Laplace>::M2L(C_iter Ci, C_iter Cj) const {M2L756,32015
void Kernel<Laplace>::M2P(C_iter Ci, C_iter Cj) const {M2P766,32272
void Kernel<Laplace>::L2L(C_iter Ci) const {L2L778,32595
void Kernel<Laplace>::L2P(C_iter Ci) const {L2P791,32888
void Kernel<Laplace>::finalize() {}finalize809,33299

old/kernel/CPUEvaluator.cxx,1768
void Evaluator<equation>::evalP2P(Bodies &ibodies, Bodies &jbodies, bool) {// Evaluate all P2P kernels for periodicevalP2P24,1120
void Evaluator<equation>::evalP2M(Cells &cells) {               // Evaluate all P2M kernelsevalP2M46,3013
void Evaluator<equation>::evalM2M(Cells &cells, Cells &jcells) {// Evaluate all M2M kernelsevalM2M59,3920
void Evaluator<equation>::evalM2L(C_iter Ci, C_iter Cj) {       // Evaluate single M2L kernelevalM2L72,4829
void Evaluator<equation>::evalM2L(Cells &cells) {               // Evaluate queued M2L kernelsevalM2L83,5366
void Evaluator<equation>::evalM2P(C_iter Ci, C_iter Cj) {       // Evaluate single M2P kernelevalM2P115,8225
void Evaluator<equation>::evalM2P(Cells &cells) {               // Evaluate queued M2P kernelsevalM2P126,8762
void Evaluator<equation>::evalP2P(C_iter Ci, C_iter Cj) {       // Evaluate single P2P kernelevalP2P158,11621
void Evaluator<equation>::evalP2P(Cells &cells) {               // Evaluate queued P2P kernelsevalP2P169,12158
void Evaluator<equation>::evalL2L(Cells &cells) {               // Evaluate all L2L kernelsevalL2L198,14753
void Evaluator<equation>::evalL2P(Cells &cells) {               // Evaluate all L2P kernelsevalL2P211,15674
void Evaluator<equation>::evalEwaldReal(C_iter Ci, C_iter Cj) { // Evaluate single Ewald real kernelevalEwaldReal222,16389
void Evaluator<equation>::evalEwaldReal(Cells &cells) {         // Evaluate queued Ewald real kernelsevalEwaldReal227,16614
void Evaluator<equation>::timeKernels() {                       // Time all kernels for auto-tuningtimeKernels245,17983
inline void interactQuark(Quark *quark) {interactQuark273,20207
void Evaluator<equation>::interact(C_iter Ci, C_iter Cj, Quark *quark) {interact301,21033

old/kernel/CPUP2P.cxx,275
#define KERNELKERNEL22,1091
#undef KERNELKERNEL24,1126
void Kernel<Laplace>::P2P(C_iter Ci, C_iter Cj) const {         // Laplace P2P kernel on CPUP2P27,1152
void Kernel<VanDerWaals>::P2P(C_iter Ci, C_iter Cj) const {     // Van der Waals P2P kernel on CPUP2P76,3765

old/kernel/CPUVanDerWaals.cxx,535
#define KERNELKERNEL22,1091
#undef KERNELKERNEL24,1126
void Kernel<VanDerWaals>::initialize() {}initialize27,1152
void Kernel<VanDerWaals>::P2M(C_iter) {}P2M30,1206
void Kernel<VanDerWaals>::M2M(C_iter) {}M2M33,1259
void Kernel<VanDerWaals>::M2L(C_iter, C_iter) const {}M2L36,1312
void Kernel<VanDerWaals>::M2P(C_iter, C_iter) const {}M2P39,1379
void Kernel<VanDerWaals>::L2L(C_iter) const {}L2L42,1446
void Kernel<VanDerWaals>::L2P(C_iter) const {}L2P45,1505
void Kernel<VanDerWaals>::finalize() {}finalize48,1564

old/kernel/GPUEvaluator.cxx,2525
void Evaluator<equation>::setSourceBody() {                     // Set source buffer for bodiessetSourceBody23,1119
void Evaluator<equation>::setSourceCell(bool isM) {             // Set source buffer for cellssetSourceCell39,2368
void Evaluator<equation>::setTargetBody(Lists lists, Maps flags) {// Set target buffer for bodiessetTargetBody63,4380
void Evaluator<equation>::setTargetCell(Lists lists, Maps flags) {// Set target buffer for cellssetTargetCell100,7815
void Evaluator<equation>::getTargetBody(Lists &lists) {         // Get body values from target buffergetTargetBody134,10918
void Evaluator<equation>::getTargetCell(Lists &lists, bool isM) {// Get body values from target buffergetTargetCell152,12409
void Evaluator<equation>::clearBuffers() {                      // Clear GPU buffersclearBuffers175,14368
void Evaluator<equation>::evalP2P(Bodies &ibodies, Bodies &jbodies, bool onCPU) {// Evaluate all P2P kernelsevalP2P189,15382
void Evaluator<equation>::evalP2M(Cells &cells) {               // Evaluate all P2M kernelsevalP2M278,23906
void Evaluator<equation>::evalM2M(Cells &cells, Cells &jcells) {// Evaluate all M2M kernelsevalM2M314,27043
void Evaluator<equation>::evalM2L(C_iter Ci, C_iter Cj) {       // Queue single M2L kernelevalM2L357,30886
void Evaluator<equation>::evalM2L(Cells &cells) {               // Evaluate queued M2L kernelsevalM2L364,31311
void Evaluator<equation>::evalM2P(C_iter Ci, C_iter Cj) {       // Queue single M2P kernelevalM2P398,34211
void Evaluator<equation>::evalM2P(Cells &cells) {               // Evaluate queued M2P kernelsevalM2P405,34636
void Evaluator<equation>::evalP2P(C_iter Ci, C_iter Cj) {       // Queue single P2P kernelevalP2P439,37548
void Evaluator<equation>::evalP2P(Cells &cells) {               // Evaluate queued P2P kernelsevalP2P446,37973
void Evaluator<equation>::evalL2L(Cells &cells) {               // Evaluate all L2L kenrelsevalL2L480,40875
void Evaluator<equation>::evalL2P(Cells &cells) {               // Evaluate all L2P kernelsevalL2P523,44715
void Evaluator<equation>::evalEwaldReal(C_iter Ci, C_iter Cj) { // Queue single Ewald real kernelevalEwaldReal558,47739
void Evaluator<equation>::evalEwaldReal(Cells &cells) {         // Evaluate queued Ewald real kernelsevalEwaldReal564,48077
void Evaluator<equation>::timeKernels() {                       // Time all kernels for auto-tuningtimeKernels599,51094
void Evaluator<equation>::interact(C_iter CI, C_iter CJ, Quark*) {interact645,55111

old/kernel/CPUSphericalLaplace.cxx,694
#define KERNELKERNEL22,1091
#undef KERNELKERNEL24,1126
void cart2sph(real& r, real& theta, real& phi, vect dist) {cart2sph28,1183
void sph2cart(real r, real theta, real phi, T spherical, T &cartesian) {sph2cart48,2590
void Kernel<Laplace>::initialize() {}initialize62,3238
void Kernel<Laplace>::P2M(C_iter Cj) {P2M65,3288
void Kernel<Laplace>::M2M(C_iter Ci) {M2M88,3908
void Kernel<Laplace>::M2L(C_iter Ci, C_iter Cj) const {M2L132,5424
void Kernel<Laplace>::M2P(C_iter Ci, C_iter Cj) const {M2P165,6446
void Kernel<Laplace>::L2L(C_iter Ci) const {L2L198,7668
void Kernel<Laplace>::L2P(C_iter Ci) const {L2P235,8834
void Kernel<Laplace>::finalize() {}finalize268,10032

old/kernel/CPUEwaldLaplace.cxx,405
#define KERNELKERNEL22,1091
#undef KERNELKERNEL24,1126
void dft(Ewalds &ewalds, Bodies &bodies, real R0) {dft27,1153
void idft(Ewalds &ewalds, Bodies &bodies, real R0) {idft42,1593
void Kernel<Laplace>::EwaldReal(C_iter Ci, C_iter Cj) const {   // Ewald real part on CPUEwaldReal61,2166
void Kernel<Laplace>::EwaldWave(Bodies &bodies) const {         // Ewald wave part on CPUEwaldWave89,4507

old/kernel/Makefile,0

old/wrapper/vtgrapeproto.h,0

old/wrapper/serial_coulombVdW.cxx,647
extern "C" void FMMcalccoulomb_ij(int ni, double* xi, double* qi, double* fi,FMMcalccoulomb_ij7,81
extern "C" void FMMcalcvdw_ij(int ni, double* xi, int* atypei, double* fi,FMMcalcvdw_ij144,3893
extern "C" void fmmcalccoulomb_ij_(int *ni, double* xi, double* qi, double* fi,fmmcalccoulomb_ij_278,7730
extern "C" void fmmcalccoulomb_ij_exlist_(int *ni, double* xi, double* qi, double* fi,fmmcalccoulomb_ij_exlist_284,8037
extern "C" void fmmcalcvdw_ij_(int *ni, double* xi, int* atypei, double* fi,fmmcalcvdw_ij_353,10352
extern "C" void fmmcalcvdw_ij_exlist_(int *ni, double* xi, int* atypei, double* fi,fmmcalcvdw_ij_exlist_364,10866

old/wrapper/parallel_coulombVdW.cxx,647
extern "C" void FMMcalccoulomb_ij(int ni, double* xi, double* qi, double* fi,FMMcalccoulomb_ij7,83
extern "C" void FMMcalcvdw_ij(int ni, double* xi, int* atypei, double* fi,FMMcalcvdw_ij153,4249
extern "C" void fmmcalccoulomb_ij_(int *ni, double* xi, double* qi, double* fi,fmmcalccoulomb_ij_296,8487
extern "C" void fmmcalccoulomb_ij_exlist_(int *ni, double* xi, double* qi, double* fi,fmmcalccoulomb_ij_exlist_302,8794
extern "C" void fmmcalcvdw_ij_(int *ni, double* xi, int* atypei, double* fi,fmmcalcvdw_ij_371,11109
extern "C" void fmmcalcvdw_ij_exlist_(int *ni, double* xi, int* atypei, double* fi,fmmcalcvdw_ij_exlist_382,11623

old/wrapper/exec.sh,0

old/wrapper/test_serial_coulombVdW.cxx,25
int main() {main18,520

old/wrapper/ewald.cxx,146
int get_knum(double ksize) {get_knum15,202
void init_kvec(double ksize, int *kvec) {init_kvec36,653
int main(int, char **argv) {main60,1199

old/wrapper/mr3.h,806
#define NMAX NMAX1,0
#define KMAX KMAX2,21
#define NTHRE NTHRE3,42
#define NLOAD NLOAD4,61
#define ATYPE ATYPE5,79
#define ATYPE2 ATYPE26,97
#define MD_REAL_R2MIN MD_REAL_R2MIN8,129
#define MD_REAL_R2MAX MD_REAL_R2MAX9,159
#define MD_LJ_R2MIN MD_LJ_R2MIN10,187
#define MD_LJ_R2MAX MD_LJ_R2MAX11,217
  float q;q14,263
  int atype;atype15,274
} VG_QATYPE;VG_QATYPE16,287
  int r[3];r19,318
  VG_QATYPE qatype;qatype20,330
} VG_XVEC;VG_XVEC21,350
  float k[3];k24,379
  float factor1;factor125,393
} VG_KVEC;VG_KVEC26,410
  float gscale;gscale29,439
  float rscale;rscale30,455
} VG_MATRIX;VG_MATRIX31,471
  int i;i34,501
  float f;f35,510
} FI;FI36,521
    FI fi0;fi040,554
    FI fi1;fi141,566
  } fi2;fi242,578
  double d;d43,587
} DI2;DI244,599

old/wrapper/md.h,7823
#define _MD_H__MD_H_2,15
#define MD_GENERATE_EMUTABLE MD_GENERATE_EMUTABLE26,992
#define MD_QAUNION_ATYPEBIT MD_QAUNION_ATYPEBIT29,1260
#define MD_CELLINDEX MD_CELLINDEX35,1643
#define MD_CELLINDEX_MAXCELL_PER_DIM MD_CELLINDEX_MAXCELL_PER_DIM37,1783
#define MD_CELLINDEX_MAXIBLOCKS MD_CELLINDEX_MAXIBLOCKS38,1823
#define MD_USE_LARGE_VAL MD_USE_LARGE_VAL42,2108
#define VDW_SHIFT VDW_SHIFT53,2937
#define VDW_SHIFT_CORRECT VDW_SHIFT_CORRECT58,3274
#define CUTON_DEFAULT CUTON_DEFAULT59,3356
#define ACCUMULATE_PAIR_FLOAT ACCUMULATE_PAIR_FLOAT62,3504
#define MD_PERIODIC_FIXED MD_PERIODIC_FIXED68,3992
#define MD_LJ_05SIGMA_8SIGMA MD_LJ_05SIGMA_8SIGMA70,4191
#define MD_UNROLL_KERNEL MD_UNROLL_KERNEL82,5250
#define MD_FVEC_SIZE MD_FVEC_SIZE85,5406
#define MD_MAX_I_PER_KERNEL MD_MAX_I_PER_KERNEL88,5575
#define MD_MAX_J_PER_RUN MD_MAX_J_PER_RUN90,5614
#define MD_USE_QAUNION MD_USE_QAUNION92,5694
#define MD_R1_EMU_FNAME MD_R1_EMU_FNAME96,5929
#define MD_RSQRT_EMU_FNAME MD_RSQRT_EMU_FNAME97,5977
#define MD_R1_EMU_MD5SUM MD_R1_EMU_MD5SUM99,6029
#define MD_RSQRT_EMU_MD5SUM MD_RSQRT_EMU_MD5SUM100,6094
#define VG_MINIMUM_PARTICLE_BLOCK_I VG_MINIMUM_PARTICLE_BLOCK_I104,6227
#define VG_JDIV VG_JDIV108,6433
#define VG_MINIMUM_PARTICLE_BLOCK_J VG_MINIMUM_PARTICLE_BLOCK_J110,6504
#define VG_MINIMUM_PARTICLE_BLOCK_F VG_MINIMUM_PARTICLE_BLOCK_F111,6568
#define VG_EMU_VECSIZE VG_EMU_VECSIZE113,6633
#define VG_RESTRICTED VG_RESTRICTED114,6658
#define VG_MINIMUM_ATYPE_BLOCK VG_MINIMUM_ATYPE_BLOCK120,6827
#define NI_ROUNDUP(NI_ROUNDUP127,7353
#define NJ_ROUNDUP(NJ_ROUNDUP128,7469
#define NF_ROUNDUP(NF_ROUNDUP129,7585
#define MATRIX_ROUNDUP(MATRIX_ROUNDUP131,7708
#define MD_QATYPE_TO_ATYPE(MD_QATYPE_TO_ATYPE136,7868
#define MD_QATYPE_TO_Q(MD_QATYPE_TO_Q137,7921
#define LJ_BS_SIZE LJ_BS_SIZE141,8018
#define LJ_BS_SIZE LJ_BS_SIZE143,8047
#define MASK(MASK147,8091
#define LARGE_VAL_SHIFT LARGE_VAL_SHIFT150,8131
#define LOWER_VAL_SHIFT LOWER_VAL_SHIFT153,8322
#define LARGE_VAL_ORG LARGE_VAL_ORG155,8418
#define LOWER_VAL_FACTOR_ORG LOWER_VAL_FACTOR_ORG161,8635
#define LOWER_VAL_FACTOR_1_ORG LOWER_VAL_FACTOR_1_ORG162,8730
#define LARGE_VAL LARGE_VAL174,9220
#define LOWER_VAL_FACTOR LOWER_VAL_FACTOR175,9306
#define LOWER_VAL_FACTOR_1 LOWER_VAL_FACTOR_1176,9342
#define Q_DOUBLE_TO_INT(Q_DOUBLE_TO_INT182,9435
#define Q_INT_TO_FLOAT(Q_INT_TO_FLOAT184,9626
#define ATYPE_PACK_TO_QATYPE(ATYPE_PACK_TO_QATYPE185,9722
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE186,9800
#define ATYPE_UNPACK_FROM_QATYPE(ATYPE_UNPACK_FROM_QATYPE188,9884
#define TYPEDEF_LONGLONG TYPEDEF_LONGLONG193,9966
typedef struct { unsigned int h,l; } longlong;h195,10011
typedef struct { unsigned int h,l; } longlong;l195,10011
typedef struct { unsigned int h,l; } longlong;longlong195,10011
typedef struct { unsigned int l,h; } longlong;l197,10065
typedef struct { unsigned int l,h; } longlong;h197,10065
typedef struct { unsigned int l,h; } longlong;longlong197,10065
#define M3_UNIT M3_UNIT202,10144
  long base;base207,10208
  long size;size208,10221
} M3_CELL;M3_CELL209,10234
  float q;q214,10291
  int atype;atype215,10302
} VG_QATYPE;VG_QATYPE216,10315
  float r[3];r221,10354
  int qatype;qatype223,10389
  VG_QATYPE qatype;qatype225,10433
  int atype;atype227,10459
  float q;q228,10472
  float halfsigma;halfsigma231,10525
  float sqrtepsilon;sqrtepsilon232,10544
} VG_JVEC;VG_JVEC234,10572
  float r[3];r237,10601
  int qatype;qatype239,10636
  VG_QATYPE qatype;qatype241,10680
  int atype;atype243,10706
  float q;q244,10719
  float halfsigma;halfsigma247,10772
  float sqrtepsilon;sqrtepsilon248,10791
  int ci[4];ci251,10850
} VG_IVEC;VG_IVEC253,10870
  float gscale;gscale258,10918
  float rscale;rscale259,10934
  float shift;shift261,10972
  float pol;pol264,11009
  float sigm;sigm265,11022
  float ipotro;ipotro266,11036
  float pc;pc267,11052
  float pd;pd268,11064
  float zz;zz269,11076
} VG_MATRIX;VG_MATRIX271,11095
  float volume[3];volume274,11126
  float alpha;alpha275,11145
  float alphafac;alphafac276,11160
  float alpha3fac;alpha3fac277,11178
  float eps2;eps2278,11197
  float r2max;r2max279,11211
  float gscalesf[VG_MINIMUM_ATYPE_BLOCK];gscalesf281,11253
  float gscalesp[VG_MINIMUM_ATYPE_BLOCK];gscalesp282,11295
  float rscales[VG_MINIMUM_ATYPE_BLOCK];rscales283,11337
  float rcut21;rcut21286,11417
  float scaleqi_1,scaleqj_1;scaleqi_1289,11467
  float scaleqi_1,scaleqj_1;scaleqj_1289,11467
} VG_SCALER;VG_SCALER291,11503
  float fi[MD_FVEC_SIZE];fi294,11534
  float fi2[MD_FVEC_SIZE];fi2296,11589
} VG_FVEC;VG_FVEC298,11623
  int base;base301,11652
  int size;size302,11664
} VG_CELL;VG_CELL303,11676
#define MD_NUM_JCELLS MD_NUM_JCELLS305,11688
  VG_CELL ci[MD_CELLINDEX_MAXIBLOCKS][MD_NUM_JCELLS];ci309,11759
  int   niblock[MD_CELLINDEX_MAXIBLOCKS];niblock314,11932
  int   nicell;nicell315,11974
  float potc;potc317,11997
  float potv;potv318,12011
} VG_PSCALER;VG_PSCALER319,12025
  float f;f322,12056
  int i;i323,12067
} VG_UNION_FI;VG_UNION_FI324,12076
#define MD_LJ_R2MIN MD_LJ_R2MIN329,12173
#define MD_LJ_R2MAX MD_LJ_R2MAX330,12201
#define MD_LJ_R2MIN MD_LJ_R2MIN332,12256
#define MD_LJ_R2MAX MD_LJ_R2MAX333,12282
#define MD_LJ_R2MIN MD_LJ_R2MIN335,12337
#define MD_LJ_R2MAX MD_LJ_R2MAX336,12365
#define MD_LJ_R2MIN MD_LJ_R2MIN338,12419
#define MD_LJ_R2MAX MD_LJ_R2MAX339,12447
#define MD_LJ_R2MIN MD_LJ_R2MIN341,12502
#define MD_LJ_R2MAX MD_LJ_R2MAX342,12530
#define MD_LJ_R2MIN MD_LJ_R2MIN344,12586
#define MD_LJ_R2MAX MD_LJ_R2MAX345,12614
#define MD_LJ_R2MIN MD_LJ_R2MIN347,12671
#define MD_LJ_R2MAX MD_LJ_R2MAX348,12699
#define MD_LJ_R2MIN MD_LJ_R2MIN352,12811
#define MD_LJ_R2MAX MD_LJ_R2MAX353,12852
#define MD_REAL_R2MIN MD_REAL_R2MIN366,13081
#define MD_REAL_R2MAX MD_REAL_R2MAX367,13111
#define MR3_malloc_pointer(MR3_malloc_pointer371,13159
#define MR3_free_pointer(MR3_free_pointer372,13211
#define MR3_malloc_pointer(MR3_malloc_pointer374,13281
#define MR3_free_pointer(MR3_free_pointer375,13323
typedef float v4sf __attribute__ ((vector_size(16)));v4sf381,13475
typedef int   v4si __attribute__ ((vector_size(16)));v4si382,13529
typedef float* v4sf;v4sf384,13589
  int ni;ni389,13636
  double *xi;xi390,13646
  double *qi;qi391,13660
  int *atypei;atypei392,13674
  double *force;force393,13689
  int nj;nj394,13706
  double *xj;xj395,13716
  double *qj; qj396,13730
  int *atypej;atypej397,13745
  int nat;nat398,13760
  double *gscalesf;gscalesf399,13771
  double *gscalesp;gscalesp400,13791
  double *rscales;rscales401,13811
  double rscale;rscale402,13830
  int tblno;tblno403,13847
  double xmax;xmax404,13860
  double *potc;potc405,13875
  double *potv;potv406,13891
  int periodicflag;periodicflag407,13907
  int potflag;potflag408,13927
  int changeflag;changeflag409,13942
  int *numex;numex410,13960
  int *natex;natex411,13974
} thread_arg_coulombvdwijexlist;thread_arg_coulombvdwijexlist412,13988
#define grav grav415,14023
#define gravpot gravpot419,14140
#define lj lj423,14246
#define ljpot ljpot432,14559
#define real real441,14843
#define realpot realpot446,15017
#define wave wave451,15155
#define wavepot wavepot453,15191
#define dummy dummy455,15230
#define VDW_FORCE(VDW_FORCE483,16461
#define VDW_ENERGY(VDW_ENERGY485,16598
#define VDW_FORCE_SHIFT(VDW_FORCE_SHIFT488,16727
#define VDW_FORCE_SHIFT(VDW_FORCE_SHIFT491,16948
#define VDW_ENERGY_SHIFT(VDW_ENERGY_SHIFT496,17250
#define VDW_FORCE_SWITCH(VDW_FORCE_SWITCH502,17609
#define VDW_ENERGY_SWITCH(VDW_ENERGY_SWITCH508,18093

old/wrapper/vtgrape.h,1105
#define _VTGRAPE_H__VTGRAPE_H_2,20
#define VG_MAX_FUNCTIONS VG_MAX_FUNCTIONS6,107
  int deviceid;deviceid9,154
  int nj;nj10,170
  int ni;ni11,180
  int nf;nf12,190
  void *jvectors;jvectors13,200
  int jsize;jsize14,218
  void *ivectors;ivectors15,231
  int isize;isize16,249
  int nati;nati17,262
  int natj;natj18,274
  void *matrices;matrices19,286
  int ssize;ssize20,304
  void *scalers;scalers21,317
  void *fvectors;fvectors22,334
  int fsize;fsize23,352
  int psize;psize24,365
  void *pscalers;pscalers25,378
  double volume[3];// only for MD_PERIODIC_FIXED==1volume27,447
  void (*calculate[VG_MAX_FUNCTIONS])(void *);calculate28,499
  float *r1;r129,546
  float *rsqrt;rsqrt30,559
  double *fthread;fthread33,638
  pthread_t thread;thread34,657
  int ni_overlap;ni_overlap35,677
  double potc;potc36,695
  double potv;potv37,710
  double rcut2;rcut238,725
  double cuton;cuton39,741
  int gpuoverlapflag;gpuoverlapflag41,803
  int function_index;function_index42,825
  int debug_flag;debug_flag47,926
} VG_UNIT;VG_UNIT48,944

old/wrapper/Makefile,32
MR3 = mr3_host.o mr3.oMR33,29

old/wrapper/mr3_host.cxx,695
void MR3calccoulomb_ij_host(int ni, double xi[], double qi[], double force[],MR3calccoulomb_ij_host7,73
void MR3calcvdw_ij_host(int ni, double xi[], int atypei[], double force[],MR3calcvdw_ij_host92,2270
void MR3calcewald_dft(int k[], int knum, double x[], int n,MR3calcewald_dft155,3822
void MR3calcewald_idft_eng(int k[], double bs[], double bc[],MR3calcewald_idft_eng175,4384
void MR3calcewald_idft_force(int k[], double bs[], double bc[],MR3calcewald_idft_force202,5037
void MR3calcewald_host(int *k, int knum_org, double *x, int n, double *chg,MR3calcewald_host239,5915
int get_knum(double ksize) {get_knum294,7557
void init_kvec(double ksize, int *kvec) {init_kvec315,8012

old/wrapper/test_parallel_coulombVdW.cxx,207
void MPI_ShiftI(int *var, int n, int mpisize, int mpirank) {MPI_ShiftI19,537
void MPI_Shift(double *var, int n, int mpisize, int mpirank) {MPI_Shift35,1026
int main(int argc, char **argv) {main51,1529

old/Makefile,0

old/unit_test/unpartition.cxx,26
int main() {main27,1152

old/unit_test/ijserialrun.cxx,26
int main() {main27,1150

old/unit_test/nth_element.cxx,26
int main() {main27,1150

old/unit_test/mpi.cxx,47
int main(int argc, char **argv) {main26,1149

old/unit_test/ewald_fmm.cxx,23
int main() {main3,24

old/unit_test/overlap_comm.cxx,26
int main() {main27,1152

old/unit_test/ewald_direct.cxx,26
int main() {main24,1115

old/unit_test/poisson.cxx,26
int main() {main27,1150

old/unit_test/Nparallel.cxx,26
int main() {main27,1152

old/unit_test/fdgl.cxx,3225
#define VTK_EXCLUDE_STRSTREAM_HEADERSVTK_EXCLUDE_STRSTREAM_HEADERS23,1099
struct JVertex {JVertex36,1466
  int       Ista;                                               //!< Start index of connection listIsta37,1483
  int       Iend;                                               //!< End index of connection listIend38,1583
  vect      X;                                                  //!< Position vectorX39,1681
struct Vertex : public JVertex {Vertex43,1796
  vtkIdType Id;                                                 //!< VTK vertex IDId45,1837
  vect      F;                                                  //!< Force vectorF47,1927
const std::string  INPUT_PATH = "";                             //!< Input file nameINPUT_PATH50,2013
const std::string OUTPUT_PATH = "";                             //!< Output file nameOUTPUT_PATH51,2098
std::vector<int> edges;                                         // Vector of edgesedges53,2185
std::vector<Vertex> vertices;                                   // Vector of verticesvertices54,2268
std::vector<Vertex> verticesG;                                  // Global vector of verticesverticesG55,2354
std::vector<JVertex> jvertices;                                 // Vector of source verticesjvertices56,2447
typedef std::vector<Vertex>::iterator V_iter;                   // Iterator for vertex vectorV_iter57,2540
typedef std::vector<JVertex>::iterator JV_iter;                 // Iterator for source vertex vectorJV_iter58,2634
vtkMutableUndirectedGraph *graph = vtkMutableUndirectedGraph::New();// VTK graph objectgraph60,2743
vtkGraphLayoutView *view = vtkGraphLayoutView::New();           // VTK view objectview61,2831
vtkGraphWriter *writer = vtkGraphWriter::New();                 // VTK writer objectwriter62,2914
int numVertices, numEdges, localVertices, maxEdges=0;           // Define global variablesnumVertices64,3006
int numVertices, numEdges, localVertices, maxEdges=0;           // Define global variablesnumEdges64,3006
int numVertices, numEdges, localVertices, maxEdges=0;           // Define global variableslocalVertices64,3006
int numVertices, numEdges, localVertices, maxEdges=0;           // Define global variablesmaxEdges64,3006
int *offset = new int [MPISIZE];                                // Offset for Allgathervoffset65,3097
double get_time() {get_time68,3206
void splitRange(int &begin, int &end, int iSplit, int numSplit) {splitRange75,3566
void initVertices() {initVertices85,4195
void readEdges(std::ifstream &fid) {readEdges107,5649
void readGraph(std::string fileid) {readGraph133,7860
void shiftVertices() {shiftVertices147,8830
void shiftEdges() {shiftEdges171,10461
void gatherVertices() {gatherVertices194,11973
void setEdges() {setEdges209,12982
void setVertices() {setVertices225,14155
void repulsion(ParallelFMM<Laplace> &FMM) {repulsion238,14985
void commVertices() {commVertices275,18161
void spring() {spring288,19066
void moveVertices() {moveVertices302,20045
void drawGraph() {drawGraph313,20632
void finalizeGraph() {finalizeGraph329,21735
void writeGraph(std::string fileid, int step) {writeGraph337,22158
int main() {main346,22642

old/unit_test/direct_gpu.cxx,26
int main() {main24,1115

old/unit_test/shift.cxx,26
int main() {main27,1150

old/unit_test/serialrun.cxx,43
int main(int, char ** argv) {main27,1155

old/unit_test/parallelrun.cxx,26
int main() {main27,1152

old/unit_test/construct.cxx,26
int main() {main27,1150

old/unit_test/kernel.cxx,26
int main() {main24,1115

old/unit_test/ijparallelrun.cxx,26
int main() {main27,1152

old/unit_test/bisection.cxx,26
int main() {main27,1150

old/unit_test/skip_tree.cxx,26
int main() {main27,1152

old/unit_test/unsort.cxx,26
int main() {main27,1150

old/unit_test/Makefile,88
SERIALRUN = ./a.outSERIALRUN2,28
PARALLELRUN = mpirun -np 4 ./a.outPARALLELRUN4,105

old/unit_test/let.cxx,26
int main() {main27,1152

old/unit_test/vtk.cxx,26
int main() {main25,1127

old/unit_test/Nserial.cxx,43
int main(int, char ** argv) {main27,1150

old/unit_test/check_gpus.cxx,26
int main() {main25,1134

old/include/topdown.h,1401
#define topdown_htopdown_h23,1109
class TopDown : public TreeStructure<equation> {TopDown28,1209
  struct Node {Node39,1868
    int LEVEL;                                                  //!< Level of nodeLEVEL40,1884
    int ICHILD;                                                 //!< Flag of empty child nodesICHILD41,1967
    int NLEAF;                                                  //!< Number of leafs in nodeNLEAF42,2062
    bigint I;                                                   //!< Cell indexI43,2155
    bigint CHILD[8];                                            //!< Iterator offset of child nodesCHILD44,2235
    B_iter LEAF[10000];                                         //!< Iterator for leafsLEAF45,2335
    vect X;                                                     //!< Node centerX46,2423
    real R;                                                     //!< Node radiusR47,2504
  std::vector<Node> nodes;                                      //!< Nodes in the treenodes49,2590
  int getOctant(const vect X, int i) {getOctant52,2713
  void addChild(const int octant, int i) {addChild61,3240
  void addLeaf(B_iter b, int i) {addLeaf81,4802
  void splitNode(int i) {splitNode87,5076
  void traverse(typename std::vector<Node>::iterator N) {traverse102,6177
  void grow(Bodies &bodies) {grow118,7275
  void setIndex() {setIndex145,9498

old/include/evaluator.h,3145
#define evaluator_hevaluator_h23,1111
#define splitFirst(splitFirst25,1152
class Evaluator : public Dataset<equation> {Evaluator29,1299
  real        timeM2L;                                          //!< M2L execution timetimeM2L31,1353
  real        timeM2P;                                          //!< M2P execution timetimeM2P32,1441
  real        timeP2P;                                          //!< P2P execution timetimeP2P33,1529
  int         NCRIT;                                            //!< Number of particles per leafNCRIT36,1629
  C_iter      CiB;                                              //!< icells begin per callCiB37,1727
  C_iter      CiE;                                              //!< icells end per callCiE38,1818
  Lists       listM2L;                                          //!< M2L interaction listlistM2L39,1907
  Lists       listM2P;                                          //!< M2P interaction listlistM2P40,1997
  Lists       listP2P;                                          //!< P2P interaction listlistP2P41,2087
  int         Iperiodic;                                        //!< Periodic image flag (using each bit for images)Iperiodic43,2178
  const int   Icenter;                                          //!< Periodic image flag at centerIcenter44,2295
  Maps        flagM2L;                                          //!< Existance of periodic image for M2LflagM2L45,2394
  Maps        flagM2P;                                          //!< Existance of periodic image for M2PflagM2P46,2499
  Maps        flagP2P;                                          //!< Existance of periodic image for P2PflagP2P47,2604
  real        NP2P;                                             //!< Number of P2P kernel callsNP2P49,2710
  real        NM2P;                                             //!< Number of M2P kernel callsNM2P50,2806
  real        NM2L;                                             //!< Number of M2L kernel callsNM2L51,2902
  inline void approximate(C_iter Ci, C_iter Cj) {approximate85,5692
  void traverseStack(C_iter Ci, C_iter C) {traverseStack106,6818
  void traverseQueue(Pair pair) {traverseQueue125,8308
  int getPeriodicRange() {getPeriodicRange162,11132
  int getLevel(bigint index) {getLevel172,11712
  void upwardPeriodic(Cells &jcells) {upwardPeriodic185,12538
  void traversePeriodic(Cells &cells, Cells &jcells) {          traversePeriodic237,17714
  Evaluator() : Icenter(1 << 13), NP2P(0), NM2P(0), NM2L(0) {}Evaluator259,19172
  ~Evaluator() {}~Evaluator261,19250
  void cube(Bodies &bodies, int seed=0, int numSplit=1) {cube264,19310
  void sphere(Bodies &bodies, int seed=0, int numSplit=1) {sphere280,20555
  void lattice(Bodies &bodies) {lattice300,22183
  void addM2L(C_iter Cj) {addM2L324,24160
  void addM2P(C_iter Cj) {addM2P332,24640
  void interact(C_iter Ci, C_iter Cj, PairQueue &pairQueue) {interact340,25175
  void traverse(Cells &cells, Cells &jcells) {traverse354,26210
  void neighbor(Cells &cells, Cells &jcells) {neighbor403,30430
#undef splitFirstsplitFirst462,35357

old/include/kernel.h,4874
#define kernel_hkernel_h23,1108
#define ODDEVEN(ODDEVEN25,1143
class KernelBase : public Sort {KernelBase28,1224
  C_iter               Ci0;                                     //!< Begin iterator for target cellsCi030,1268
  C_iter               Cj0;                                     //!< Begin iterator for source cellsCj031,1369
  int                  ATOMS;                                   //!< Number of atom types in Van der WaalsATOMS33,1471
  std::vector<real>    RSCALE;                                  //!< Scaling parameter for Van der WaalsRSCALE34,1578
  std::vector<real>    GSCALE;                                  //!< Scaling parameter for Van der WaalsGSCALE35,1683
  real                 KSIZE;                                   //!< Number of waves in Ewald summationKSIZE36,1788
  real                 ALPHA;                                   //!< Scaling parameter for Ewald summationALPHA37,1892
  real                 SIGMA;                                   //!< Scaling parameter for Ewald summationSIGMA38,1999
  std::vector<int>     keysHost;                                //!< Offsets for rangeHostkeysHost40,2107
  std::vector<int>     rangeHost;                               //!< Offsets for sourceHostrangeHost41,2198
  std::vector<gpureal> sourceHost;                              //!< Sources on hostsourceHost42,2290
  std::vector<gpureal> targetHost;                              //!< Targets on hosttargetHost43,2375
  std::vector<gpureal> constHost;                               //!< Constants on hostconstHost44,2460
  Map                  sourceBegin;                             //!< Define map for offset of source cellssourceBegin45,2547
  Map                  sourceSize;                              //!< Define map for size of source cellssourceSize46,2654
  Map                  targetBegin;                             //!< Define map for offset of target cellstargetBegin47,2759
  size_t               keysDevcSize;                            //!< Size of offsets for rangeDevckeysDevcSize48,2866
  size_t               rangeDevcSize;                           //!< Size of offsets for sourceDevcrangeDevcSize49,2965
  size_t               sourceDevcSize;                          //!< Size of sources on devicesourceDevcSize50,3065
  size_t               targetDevcSize;                          //!< Size of targets on devicetargetDevcSize51,3160
  int                 *keysDevc;                                //!< Offsets for rangeDevckeysDevc52,3255
  int                 *rangeDevc;                               //!< Offsets for sourceDevcrangeDevc53,3346
  gpureal             *sourceDevc;                              //!< Sources on devicesourceDevc54,3438
  gpureal             *targetDevc;                              //!< Targets on devicetargetDevc55,3525
  real *factorial;                                              //!< Factorialfactorial57,3613
  real *prefactor;                                              //!< \f$ \sqrt{ \frac{(n - |m|)!}{(n + |m|)!} } \f$prefactor58,3692
  real *Anm;                                                    //!< \f$ (-1)^n / \sqrt{ \frac{(n + m)!}{(n - m)!} } \f$Anm59,3808
  complex *Cnm;                                                 //!< M2L translation matrix \f$ C_{jn}^{km} \f$Cnm60,3929
  vect X0;                                                      //!< Center of root cellX062,4049
  real R0;                                                      //!< Radius of root cellR063,4138
  real getBmax(vect const&X, C_iter C) const {getBmax66,4237
  void setCenter(C_iter C) const {setCenter75,4494
  void evalMultipole(real rho, real alpha, real beta, complex *Ynm, complex *YnmTheta) const {evalMultipole92,4936
  void evalLocal(real rho, real alpha, real beta, complex *Ynm, complex *YnmTheta) const {evalLocal128,7920
  KernelBase() : Ci0(), Cj0(), ATOMS(), RSCALE(), GSCALE(), KSIZE(), ALPHA(), SIGMA(),KernelBase165,10897
  ~KernelBase() {}~KernelBase174,11415
  KernelBase(const KernelBase&) : Sort(), Ci0(), Cj0(), ATOMS(), RSCALE(), GSCALE(), KSIZE(), ALPHA(), SIGMA(),KernelBase176,11455
  KernelBase &operator=(const KernelBase) {return *this;}operator =185,12007
  void setX0(vect x0) {X0 = x0;}setX0188,12094
  void setR0(real r0) {R0 = r0;}setR0190,12155
  vect getX0() const {return X0;}getX0193,12217
  real getR0() const {return R0;}getR0195,12279
  void setDomain(Bodies &bodies, vect x0=0, real r0=M_PI) {setDomain198,12351
  void preCalculation() {preCalculation231,15099
  void postCalculation() {postCalculation274,18311
  void setVanDerWaals(int atoms, double *rscale, double *gscale) {setVanDerWaals282,18775
  void setEwald(real ksize, real alpha, real sigma) {setEwald295,19720
class Kernel : public KernelBase {Kernel304,20076

old/include/bottomup.h,389
#define bottomup_hbottomup_h23,1110
class BottomUp : public TopDown<equation> {BottomUp28,1209
  int getMaxLevel(Bodies &bodies) {getMaxLevel42,2182
  void setIndex(Bodies &bodies, int level=-1, int begin=0, int end=0, bool update=false) {setIndex58,3075
  void prune(Bodies &bodies) {prune87,5420
  void grow(Bodies &bodies, int level=0, int begin=0, int end=0) {grow124,8564

old/include/tree.h,808
#define tree_htree_h23,1106
class TreeStructure : public Evaluator<equation> {TreeStructure28,1207
  Bodies buffer;                                                //!< Buffer for MPI communication & sortingbuffer30,1266
  bigint getParent(bigint index) {getParent59,3721
  void unique(Cells &cells, Cells &sticks, int begin, int &end) {unique68,4290
  void linkParent(Cells &cells, int &begin, int &end) {linkParent92,6296
  void getCenter(Cell &cell) {getCenter132,9696
  void bodies2twigs(Bodies &bodies, Cells &twigs) {bodies2twigs151,11145
  void twigs2cells(Cells &twigs, Cells &cells, Cells &sticks) {twigs2cells186,14095
  void downward(Cells &cells, Cells &jcells, bool periodic=true) {downward222,17128
  void Ewald(Bodies &bodies, Cells &cells, Cells &jcells) {Ewald253,19329

old/include/parallelfmm.h,3854
#define parallelfmm_hparallelfmm_h23,1113
class ParallelFMM : public Partition<equation> {ParallelFMM28,1246
  std::vector<int>    sendBodyCnt;                              //!< Vector of body send countssendBodyCnt30,1304
  std::vector<int>    sendBodyDsp;                              //!< Vector of body send displacementssendBodyDsp31,1400
  std::vector<int>    recvBodyCnt;                              //!< Vector of body recv countsrecvBodyCnt32,1503
  std::vector<int>    recvBodyDsp;                              //!< Vector of body recv displacementsrecvBodyDsp33,1599
  std::vector<int>    sendBodyRanks;                            //!< Vector of ranks to send bodies tosendBodyRanks34,1702
  std::vector<int>    sendBodyCellCnt;                          //!< Vector of send counts for cells of bodiessendBodyCellCnt35,1805
  std::vector<C_iter> sendBodyCells;                            //!< Vector of cell iterators for cells of bodies to sendsendBodyCells36,1916
  std::vector<int>    sendCellCnt;                              //!< Vector of cell send countssendCellCnt37,2038
  std::vector<int>    sendCellDsp;                              //!< Vector of cell send displacementssendCellDsp38,2134
  std::vector<int>    recvCellCnt;                              //!< Vector of cell recv countsrecvCellCnt39,2237
  std::vector<int>    recvCellDsp;                              //!< Vector of cell recv displacementsrecvCellDsp40,2333
  std::vector<vect>   xminAll;                                  //!< Buffer for gathering XMINxminAll41,2436
  std::vector<vect>   xmaxAll;                                  //!< Buffer for gathering XMAXxmaxAll42,2531
  JBodies sendBodies;                                           //!< Send buffer for bodiessendBodies44,2627
  JBodies recvBodies;                                           //!< Recv buffer for bodiesrecvBodies45,2719
  JCells  sendCells;                                            //!< Send buffer for cellssendCells46,2811
  JCells  recvCells;                                            //!< Recv buffer for cellsrecvCells47,2902
  void gatherBounds() {gatherBounds75,5259
  void getSendRank(Cells &cells) {getSendRank94,6723
  void getSendCount(bool comm=true) {getSendCount142,11185
  void commBodiesAlltoall() {commBodiesAlltoall174,13939
  void getOtherDomain(vect &xmin, vect &xmax, int l) {getOtherDomain243,20149
  real getDistance(C_iter C, vect xmin, vect xmax) {getDistance278,23109
  void getLET(C_iter C0, C_iter C, vect xmin, vect xmax) {getLET291,23985
  void commCellsAlltoall(int l) {commCellsAlltoall334,28081
  void commCellsScatter(int l) {commCellsScatter350,29363
  void rbodies2twigs(Bodies &bodies, Cells &twigs) {rbodies2twigs383,32187
  void cells2twigs(Cells &cells, Cells &twigs, bool last) {cells2twigs402,33611
  void send2twigs(Bodies &bodies, Cells &twigs, int offTwigs) {send2twigs415,34568
  void recv2twigs(Bodies &bodies, Cells &twigs) {recv2twigs429,35588
  void zipTwigs(Cells &twigs, Cells &cells, Cells &sticks, bool last) {zipTwigs442,36509
  void reindexBodies(Bodies &bodies, Cells &twigs, Cells &cells ,Cells &sticks) {reindexBodies477,39493
  void sticks2send(Cells &sticks, int &offTwigs) {sticks2send514,42605
  void checkNumCells(int l) {                                   // Only works with octsectioncheckNumCells526,43449
  void checkSumMass(Cells &cells) {checkSumMass545,44229
  void setCommBodies(Cells &cells) {setCommBodies563,44697
  void updateBodies(bool comm=true) {updateBodies573,45295
  void commBodies(Cells &cells) {commBodies602,47218
  void bodies2cells(Bodies &bodies, Cells &cells) {bodies2cells608,47477
  void commCells(Bodies &bodies, Cells &cells) {commCells615,47882
  void eraseLocalTree(Cells &cells) {eraseLocalTree736,57450

old/include/quark.h,5030
#define QUARK_HQUARK_H17,276
#define DBGPRINTF(DBGPRINTF39,783
#define DBGPRINTF(DBGPRINTF41,846
#define QUARK_SUCCESS QUARK_SUCCESS44,888
#define QUARK_ERR QUARK_ERR45,912
#define QUARK_ERR_UNEXPECTED QUARK_ERR_UNEXPECTED46,933
#define QUARK_ERR_NOT_SUPPORTED QUARK_ERR_NOT_SUPPORTED47,965
#define QUARK_REGION_BITMASK QUARK_REGION_BITMASK50,1054
#define QUARK_REGION_ALL QUARK_REGION_ALL51,1092
typedef enum { QUARK_REGION_0=1<<0, QUARK_REGION_1=1<<1, QUARK_REGION_2=1<<2, QUARK_REGION_3=1<<3,QUARK_REGION_052,1123
typedef enum { QUARK_REGION_0=1<<0, QUARK_REGION_1=1<<1, QUARK_REGION_2=1<<2, QUARK_REGION_3=1<<3,QUARK_REGION_152,1123
typedef enum { QUARK_REGION_0=1<<0, QUARK_REGION_1=1<<1, QUARK_REGION_2=1<<2, QUARK_REGION_3=1<<3,QUARK_REGION_252,1123
typedef enum { QUARK_REGION_0=1<<0, QUARK_REGION_1=1<<1, QUARK_REGION_2=1<<2, QUARK_REGION_3=1<<3,QUARK_REGION_352,1123
               QUARK_REGION_4=1<<4, QUARK_REGION_5=1<<5, QUARK_REGION_6=1<<6, QUARK_REGION_7=1<<7 } quark_data_region_t;QUARK_REGION_453,1222
               QUARK_REGION_4=1<<4, QUARK_REGION_5=1<<5, QUARK_REGION_6=1<<6, QUARK_REGION_7=1<<7 } quark_data_region_t;QUARK_REGION_553,1222
               QUARK_REGION_4=1<<4, QUARK_REGION_5=1<<5, QUARK_REGION_6=1<<6, QUARK_REGION_7=1<<7 } quark_data_region_t;QUARK_REGION_653,1222
               QUARK_REGION_4=1<<4, QUARK_REGION_5=1<<5, QUARK_REGION_6=1<<6, QUARK_REGION_7=1<<7 } quark_data_region_t;QUARK_REGION_753,1222
               QUARK_REGION_4=1<<4, QUARK_REGION_5=1<<5, QUARK_REGION_6=1<<6, QUARK_REGION_7=1<<7 } quark_data_region_t;quark_data_region_t53,1222
typedef enum { QUARK_REGION_L=QUARK_REGION_0|QUARK_REGION_1|QUARK_REGION_2,QUARK_REGION_L54,1343
               QUARK_REGION_D=QUARK_REGION_3|QUARK_REGION_4,QUARK_REGION_D55,1419
               QUARK_REGION_U=QUARK_REGION_5|QUARK_REGION_6|QUARK_REGION_7 } quark_ldu_region_t;QUARK_REGION_U56,1480
               QUARK_REGION_U=QUARK_REGION_5|QUARK_REGION_6|QUARK_REGION_7 } quark_ldu_region_t;quark_ldu_region_t56,1480
#define QUARK_DIRECTION_BITMASK QUARK_DIRECTION_BITMASK63,1906
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;QINPUT64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;OUTPUT64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;INOUT64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;VALUE64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;NODEP64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;SCRATCH64,1947
typedef enum { QINPUT=0x100, OUTPUT=0x200, INOUT=0x300, VALUE=0x400, NODEP=0x500, SCRATCH=0x600} quark_direction_t;quark_direction_t64,1947
#define INPUT INPUT65,2063
#define QUARK_VALUE_FLAGS_BITMASK QUARK_VALUE_FLAGS_BITMASK67,2084
#define LOCALITY LOCALITY70,2196
#define NOLOCALITY NOLOCALITY71,2225
#define ACCUMULATOR ACCUMULATOR74,2361
#define NOACCUMULATOR NOACCUMULATOR75,2393
#define GATHERV GATHERV78,2534
#define NOGATHERV NOGATHERV79,2562
#define TASK_LABEL TASK_LABEL83,2783
#define TASKLABEL TASKLABEL84,2814
#define TASK_COLOR TASK_COLOR86,2939
#define TASKCOLOR TASKCOLOR87,2970
#define TASK_PRIORITY TASK_PRIORITY89,3081
#define TASK_LOCK_TO_THREAD TASK_LOCK_TO_THREAD91,3206
#define TASK_SEQUENCE TASK_SEQUENCE93,3327
#define TASK_THREAD_COUNT TASK_THREAD_COUNT95,3413
#define THREAD_SET_TO_MANUAL_SCHEDULING THREAD_SET_TO_MANUAL_SCHEDULING97,3546
#define TASK_LOCK_TO_THREAD_MASK TASK_LOCK_TO_THREAD_MASK99,3707
#define QUARK_TASK_MIN_PRIORITY QUARK_TASK_MIN_PRIORITY102,3789
#define QUARK_TASK_MAX_PRIORITY QUARK_TASK_MAX_PRIORITY103,3823
typedef struct quark_s Quark;Quark106,3924
typedef struct quark_task_s Quark_Task;Quark_Task109,3996
struct quark_task_flags_s {quark_task_flags_s112,4080
    int task_priority;task_priority113,4108
    int task_lock_to_thread;task_lock_to_thread114,4131
    char *task_color;task_color115,4160
    char *task_label;task_label116,4182
    void *task_sequence;task_sequence117,4204
    int task_thread_count;task_thread_count118,4229
    int thread_set_to_manual_scheduling;thread_set_to_manual_scheduling119,4256
    unsigned char *task_lock_to_thread_mask;task_lock_to_thread_mask120,4297
typedef struct quark_task_flags_s Quark_Task_Flags;Quark_Task_Flags123,4346
#define Quark_Task_Flags_Initializer Quark_Task_Flags_Initializer125,4446
typedef struct Quark_sequence_s Quark_Sequence;Quark_Sequence195,7575
static inline int QUARK_Bit_Get(unsigned char *set, int number)QUARK_Bit_Get225,8929
static inline void QUARK_Bit_Set(unsigned char *set, int number, int value)QUARK_Bit_Set232,9209

old/include/vtk.h,1025
#define vtk_hvtk_h23,1105
#define VTK_EXCLUDE_STRSTREAM_HEADERSVTK_EXCLUDE_STRSTREAM_HEADERS24,1119
const int maxGroups = 100000;maxGroups45,1756
class vtkSliderCallback : public vtkCommand {vtkSliderCallback48,1813
  vtkPoints *points[maxGroups];points50,1867
  vtkPolyData *polydata;polydata51,1899
  vtkVertexGlyphFilter *filter;filter52,1924
  vtkSliderCallback() {}vtkSliderCallback53,1956
  static vtkSliderCallback *New() {New54,1981
  virtual void Execute(vtkObject *caller, unsigned long, void*) {Execute57,2057
class vtkPlot {vtkPlot67,2462
  int I[maxGroups];I68,2478
  vtkPoints *points[maxGroups];points69,2498
  vtkPoints *hexPoints;hexPoints70,2530
  void setDomain(const real r0, const vect x0) {setDomain72,2562
  void setGroup(const int Igroup, const int Npoints) {setGroup85,3151
  void setPoints(const int Igroup, const vect X) {setPoints91,3317
  void setGroupOfPoints(Bodies &bodies, int &Ncell) {setGroupOfPoints96,3446
  void plot(const int Ngroup) {plot121,4101

old/include/mympi.h,1178
#define mympi_hmympi_h23,1107
class MyMPI {MyMPI30,1225
  int       EXTERNAL;                                           //!< Flag to indicate external MPI_Init/FinalizeEXTERNAL32,1248
  int       MPISIZES;                                           //!< Number of MPI processes for split communicatorMPISIZES35,1373
  int       MPIRANKS;                                           //!< Rank of current MPI process for split communicatorMPIRANKS36,1489
  const int WAIT;                                               //!< Waiting time between output of different ranksWAIT37,1609
  MyMPI() : EXTERNAL(0), MPISIZES(0), MPIRANKS(0), WAIT(100) {  // Constructor, initialize WAIT timeMyMPI41,1772
  ~MyMPI() {~MyMPI52,2558
  bool isPowerOfTwo(const int n) {isPowerOfTwo57,2706
  void splitRange(int &begin, int &end, int iSplit, int numSplit) {splitRange62,2881
  MPI_Datatype getType(T object) {getType73,3552
  void print(T data) {print111,6605
  void print(T data, const int irank) {print124,7383
  void print(T *data, const int begin, const int end) {print132,7759
  void print(T *data, const int begin, const int end, const int irank) {print148,8816

old/include/quark_unpack_args.h,1468
#define _UNPACK_ARGS__UNPACK_ARGS_18,443
#define quark_unpack_args_1(quark_unpack_args_122,486
#define quark_unpack_args_2(quark_unpack_args_231,715
#define quark_unpack_args_3(quark_unpack_args_342,1029
#define quark_unpack_args_4(quark_unpack_args_455,1436
#define quark_unpack_args_5(quark_unpack_args_570,1936
#define quark_unpack_args_6(quark_unpack_args_687,2529
#define quark_unpack_args_7(quark_unpack_args_7106,3215
#define quark_unpack_args_8(quark_unpack_args_8127,3994
#define quark_unpack_args_9(quark_unpack_args_9150,4866
#define quark_unpack_args_10(quark_unpack_args_10175,5831
#define quark_unpack_args_11(quark_unpack_args_11202,6893
#define quark_unpack_args_12(quark_unpack_args_12231,8051
#define quark_unpack_args_13(quark_unpack_args_13262,9305
#define quark_unpack_args_14(quark_unpack_args_14295,10655
#define quark_unpack_args_15(quark_unpack_args_15330,12101
#define quark_unpack_args_16(quark_unpack_args_16367,13643
#define quark_unpack_args_17(quark_unpack_args_17406,15281
#define quark_unpack_args_18(quark_unpack_args_18447,17015
#define quark_unpack_args_19(quark_unpack_args_19490,18845
#define quark_unpack_args_20(quark_unpack_args_20535,20771
#define quark_unpack_args_21(quark_unpack_args_21582,22793
#define quark_unpack_args_22(quark_unpack_args_22631,24911
#define quark_unpack_args_23(quark_unpack_args_23682,27125
#define quark_unpack_args_24(quark_unpack_args_24735,29435

old/include/types.h,11112
#define types_htypes_h23,1107
typedef unsigned           bigint;                              //!< Big integer typebigint57,1749
typedef double             real;                                //!< Real number type on CPUreal58,1835
typedef double             gpureal;                             //!< Real number type on GPUgpureal59,1928
typedef std::complex<real> complex;                             //!< Complex number typecomplex60,2021
typedef vec<3,real>        vect;                                //!< 3-D vector typevect61,2110
int MPIRANK    = 0;                                             //!< MPI comm rankMPIRANK65,2212
int MPISIZE    = 1;                                             //!< MPI comm sizeMPISIZE66,2295
int DEVICE     = 0;                                             //!< GPU device IDDEVICE67,2378
int IMAGES     = 0;                                             //!< Number of periodic image sublevelsIMAGES68,2461
real THETA     = .5;                                            //!< Multipole acceptance criteriaTHETA69,2565
vect Xperiodic = 0;                                             //!< Coordinate offset of periodic imageXperiodic70,2664
int PAPIEVENT  = PAPI_NULL;                                     //!< PAPI event handlePAPIEVENT72,2778
const int  P        = EXPANSION;                                //!< Order of expansionsP86,3546
const int  MAXBODY  = 50000;                                    //!< Maximum number of bodies per GPU kernelMAXBODY87,3635
const int  MAXCELL  = 10000000;                                 //!< Maximum number of bodies/coefs in cell per GPU kernelMAXCELL88,3744
const real CLET     = 2;                                        //!< LET opening critetiaCLET89,3867
const real EPS      = 1e-15;                                    //!< Single/double precision epsilonEPS90,3957
const real EPS2     = 0;                                        //!< Softening parameter (squared)EPS291,4058
const real R2MIN    = 0.0001;                                   //!< Minimum value for L-J R^2R2MIN92,4157
const real R2MAX    = 100.0;                                    //!< Maximum value for L-J R^2R2MAX93,4252
const int  GPUS     = 1;                                        //!< Number of GPUs per nodeGPUS94,4347
const int  THREADS  = 64;                                       //!< Number of threads per thread-blockTHREADS95,4440
const int MTERM = P*(P+1)*(P+2)/6;                              //!< Number of Cartesian mutlipole termsMTERM97,4545
const int LTERM = (P+1)*(P+2)*(P+3)/6;                          //!< Number of Cartesian local termsLTERM98,4650
const int NTERM = P*(P+1)/2;                                    //!< Number of Spherical multipole/local termsNTERM99,4751
typedef vec<MTERM,real>                        Mset;            //!< Multipole coefficient type for CartesianMset102,4877
typedef vec<LTERM,real>                        Lset;            //!< Local coefficient type for CartesianLset103,4987
typedef vec<NTERM,complex>                     Mset;            //!< Multipole coefficient type for sphericalMset105,5109
typedef vec<NTERM,complex>                     Lset;            //!< Local coefficient type for sphericalLset106,5219
typedef std::vector<bigint>                    Bigints;         //!< Vector of big integer typesBigints108,5332
struct Trace {Trace111,5468
  pthread_t thread;thread112,5483
  double    begin;begin113,5503
  double    end;end114,5522
  int       color;color115,5539
typedef std::map<pthread_t,double>             ThreadTrace;     //!< Map of pthread id to traced valueThreadTrace117,5561
typedef std::map<pthread_t,int>                ThreadMap;       //!< Map of pthread id to thread idThreadMap118,5664
typedef std::queue<Trace>                      Traces;          //!< Queue of tracesTraces119,5764
typedef std::map<std::string,double>           Timer;           //!< Map of timer event name to timed valueTimer120,5849
typedef std::map<std::string,double>::iterator TI_iter;         //!< Iterator for timer event name mapTI_iter121,5957
enum Equation {                                                 //!< Equation type enumerationEquation123,6061
  Laplace,                                                      //!< Laplace potential + forceLaplace124,6156
  VanDerWaals                                                   //!< Van der Walls potential + forceVanDerWaals125,6251
struct JBody {JBody129,6403
  int         IBODY;                                            //!< Initial body numbering for sorting backIBODY130,6418
  int         IPROC;                                            //!< Initial process numbering for partitioning backIPROC131,6527
  bigint      ICELL;                                            //!< Cell indexICELL132,6644
  vect        X;                                                //!< PositionX133,6724
  real        SRC;                                              //!< Scalar source valuesSRC134,6802
typedef std::vector<JBody>             JBodies;                 //!< Vector of source bodiesJBodies136,6895
typedef std::vector<JBody>::iterator   JB_iter;                 //!< Iterator for source body vectorJB_iter137,6988
struct Body : public JBody {Body140,7114
  vec<4,real> TRG;                                              //!< Scalar+vector target valuesTRG141,7143
  bool operator<(const Body &rhs) const {                       //!< Overload operator for comparing body indexoperator <142,7240
typedef std::vector<Body>              Bodies;                  //!< Vector of bodiesBodies146,7463
typedef std::vector<Body>::iterator    B_iter;                  //!< Iterator for body vectorB_iter147,7549
struct Leaf {Leaf150,7699
  int I;                                                        //!< Unique index for every leafI151,7713
  vect X;                                                       //!< Coordinate of leafX152,7810
  Leaf *NEXT;                                                   //!< Pointer to next leafNEXT153,7898
typedef std::vector<Leaf>              Leafs;                   //!< Vector of leafsLeafs155,7991
typedef std::vector<Leaf>::iterator    L_iter;                  //!< Iterator for leaf vectorL_iter156,8076
struct Node {Node159,8224
  bool NOCHILD;                                                 //!< Flag for twig nodesNOCHILD160,8238
  int  LEVEL;                                                   //!< Level in the tree structureLEVEL161,8327
  int  NLEAF;                                                   //!< Number of descendant leafsNLEAF162,8424
  int  CHILD[8];                                                //!< Index of child nodeCHILD163,8520
  vect X;                                                       //!< Coordinate at centerX164,8609
  Leaf *LEAF;                                                   //!< Pointer to first leafLEAF165,8699
typedef std::vector<Node>              Nodes;                   //!< Vector of nodesNodes167,8793
typedef std::vector<Node>::iterator    N_iter;                  //!< Iterator for node vectorN_iter168,8878
struct JCell {JCell171,9019
  bigint ICELL;                                                 //!< Cell indexICELL172,9034
  Mset   M;                                                     //!< Multipole coefficientsM173,9114
typedef std::vector<JCell>             JCells;                  //!< Vector of source cellsJCells175,9209
typedef std::vector<JCell>::iterator   JC_iter;                 //!< Iterator for source cell vectorJC_iter176,9301
struct Cell {Cell179,9426
  bigint   ICELL;                                               //!< Cell indexICELL180,9440
  int      NCHILD;                                              //!< Number of child cellsNCHILD181,9520
  int      NCLEAF;                                              //!< Number of child leafsNCLEAF182,9611
  int      NDLEAF;                                              //!< Number of descendant leafsNDLEAF183,9702
  int      PARENT;                                              //!< Iterator offset of parent cellPARENT184,9798
  int      CHILD;                                               //!< Iterator offset of child cellsCHILD185,9898
  B_iter   LEAF;                                                //!< Iterator of first leafLEAF186,9998
  vect     X;                                                   //!< Cell centerX187,10090
  real     R;                                                   //!< Cell radiusR188,10171
  real     RMAX;                                                //!< Max cell radiusRMAX189,10252
  real     RCRIT;                                               //!< Critical cell radiusRCRIT190,10337
  Mset     M;                                                   //!< Multipole coefficientsM191,10427
  Lset     L;                                                   //!< Local coefficientsL192,10519
typedef std::vector<Cell>              Cells;                   //!< Vector of cellsCells194,10610
typedef std::vector<Cell>::iterator    C_iter;                  //!< Iterator for cell vectorC_iter195,10695
typedef std::queue<C_iter>             CellQueue;               //!< Queue of cell iteratorsCellQueue196,10789
typedef std::stack<C_iter>             CellStack;               //!< Stack of cell iteratorsCellStack197,10882
typedef std::pair<C_iter,C_iter>       Pair;                    //!< Pair of interacting cellsPair198,10975
typedef std::deque<Pair>               PairQueue;               //!< Queue of interacting cell pairsPairQueue199,11070
typedef std::stack<Pair>               PairStack;               //!< Stack of interacting cell pairsPairStack200,11171
typedef std::list<C_iter>              List;                    //!< Interaction listList201,11272
typedef std::list<C_iter>::iterator    LC_iter;                 //!< Iterator for interaction listLC_iter202,11358
typedef std::vector<List>              Lists;                   //!< Vector of interaction listsLists203,11457
typedef std::map<C_iter,int>           Map;                     //!< Map of interaction listsMap204,11554
typedef std::map<C_iter,int>::iterator MC_iter;                 //!< Iterator for interation list mapMC_iter205,11648
typedef std::vector<Map>               Maps;                    //!< Vector of map of interaction listsMaps206,11750
struct Ewald {Ewald209,11889
  vect K;                                                       //!< 3-D wave number vectorK210,11904
  real REAL;                                                    //!< real part of waveREAL211,11996
  real IMAG;                                                    //!< imaginary part of waveIMAG212,12083
typedef std::vector<Ewald>             Ewalds;                  //!< Vector of Ewald summation typesEwalds214,12178
typedef std::vector<Ewald>::iterator   E_iter;                  //!< Iterator for Ewald summation typesE_iter215,12279

old/include/partition.h,2413
#define partition_hpartition_h23,1111
class Partition : public MyMPI, public SerialFMM<equation> {Partition29,1246
  int numCells1D;                                               //!< Number of cells in one dimension (leaf level)numCells1D31,1316
  int LEVEL;                                                    //!< Level of the MPI process binary treeLEVEL34,1443
  std::vector<vect> XMIN;                                       //!< Minimum position vector of bodiesXMIN35,1549
  std::vector<vect> XMAX;                                       //!< Maximum position vector of bodiesXMAX36,1652
  int nprocs[64][2];                                            //!< Number of processes in the two split groupsnprocs37,1755
  int offset[64][2];                                            //!< Offset of body in the two split groupsoffset38,1868
  int  color[64][3];                                            //!< Color of hypercube communicatorscolor39,1976
  int    key[64][3];                                            //!< Key of hypercube communicatorskey40,2078
  MPI_Comm MPI_COMM[64][3];                                     //!< Hypercube communicatorsMPI_COMM41,2178
  void splitDomain(bigint iSplit, int l, int d) {splitDomain56,3203
  int getBucket(T &data, int numData, int lOffset, Bigints &send, Bigints &recv, MPI_Comm MPI_COMM0) {getBucket69,4057
  void bisectionGetComm(int l) {bisectionGetComm108,7157
  void bisectionAlltoall(Bodies &bodies, int nthLocal, int numLocal, int &newSize, int l) {bisectionAlltoall139,9621
  void bisectionScatter(Bodies &bodies, int nthLocal, int &newSize, int l) {bisectionScatter167,11980
  void bisectionGather(Bodies &bodies, int nthLocal, int numLocal, int &newSize, int l) {bisectionGather209,15856
  Partition() : SerialFMM<equation>() {Partition251,19547
  ~Partition() {}~Partition271,21292
  void setGlobDomain(Bodies &bodies, vect x0=0, real r0=M_PI) {setGlobDomain274,21354
  void binBodies(Bodies &bodies, int d) {binBodies311,24439
  int splitBodies(Bodies &bodies, bigint iSplit) {splitBodies319,24846
  void shiftBodies(Bodies &bodies) {shiftBodies326,25247
  T2 nth_element(T &data, T2 n, MPI_Comm MPI_COMM0=0) {nth_element351,26989
  void bisection(Bodies &bodies) {bisection413,32467
  void octsection(Bodies &bodies) {octsection463,36749
  void unpartition(Bodies &bodies) {unpartition518,41560

old/include/dataset.h,1515
#define dataset_hdataset_h23,1109
class Dataset : public Kernel<equation> {Dataset28,1216
  long filePosition;                                            //!< Position of file streamfilePosition30,1267
  Dataset() : filePosition(0) {}Dataset36,1480
  ~Dataset() {}~Dataset38,1528
  void initSource(Bodies &bodies) {initSource41,1574
  void initTarget(Bodies &bodies, bool IeqJ=true) {initTarget51,2195
  void readTarget(Bodies &bodies) {readTarget62,2975
  void writeTarget(Bodies &bodies) {writeTarget78,4129
  void sampleBodies(Bodies &bodies, int numTargets) {sampleBodies91,5095
  void evalError(Bodies &bodies, Bodies &bodies2,evalError103,5396
  void printError(real diff1, real norm1, real diff2, real norm2) {printError132,7632
class Dataset<VanDerWaals> : public Kernel<VanDerWaals> {Dataset141,7987
  long filePosition;                                            //!< Position of file streamfilePosition143,8054
  Dataset() : filePosition(0) {}Dataset147,8172
  ~Dataset() {}~Dataset149,8220
  void initSource(Bodies &bodies) {initSource152,8266
  void initTarget(Bodies &bodies, bool IeqJ=true) {initTarget178,10413
  void readTarget(Bodies &bodies) {readTarget188,11071
  void writeTarget(Bodies &bodies) {writeTarget204,12225
  void sampleBodies(Bodies &bodies, int numTargets) {sampleBodies217,13191
  void evalError(Bodies &bodies, Bodies &bodies2,evalError229,13492
  void printError(real diff1, real norm1, real diff2, real norm2) {printError248,14816

old/include/logger.h,1722
#define logger_hlogger_h23,1108
class Logger {Logger28,1194
  std::ofstream   timerFile;                                    //!< File ID to store logtimerFile30,1218
  Timer           beginTimer;                                   //!< Timer base valuebeginTimer31,1308
  Timer           timer;                                        //!< Stores timings for all eventstimer32,1394
  Traces          traces;                                       //!< Stores traces for all eventstraces33,1493
  pthread_mutex_t mutex;                                        //!< Pthread communicatormutex34,1591
  double get_time() const {get_time37,1701
  int stringLength;                                             //!< Max length of event namestringLength44,2042
  bool printNow;                                                //!< Switch to print timingsprintNow45,2136
  Logger() : timerFile("time.dat"),                             // Open timer log fileLogger48,2246
  ~Logger() {~Logger55,2745
  inline void startTimer(std::string event) {startTimer60,2884
  double stopTimer(std::string event, bool print=false) {stopTimer65,3073
  inline void eraseTimer(std::string event) {eraseTimer74,3637
  inline void resetTimer() {resetTimer79,3808
  inline void printTime(std::string event) {printTime84,3959
  inline void printAllTime() {printAllTime90,4208
  inline void writeTime() {writeTime98,4625
  inline void startPAPI() {startPAPI106,5028
  inline void stopPAPI() {stopPAPI117,5513
  inline void startTracer(ThreadTrace &beginTrace) {startTracer128,6010
  inline void stopTracer(ThreadTrace &beginTrace, int color) {stopTracer135,6399
  inline void writeTrace() {writeTrace147,7203

old/include/sort.h,635
#define sort_hsort_h23,1106
class Sort : public Logger {Sort27,1194
  std::vector<int> bucket;                                      //!< Bucket for sortingbucket29,1232
  void getBucketSize(T &values, int begin, int end, bigint &Imin, int &numBucket) {getBucketSize33,1376
  void sortICELL(T &values, T &buffer, bigint Imin,sortICELL50,2599
  Sort() : bucket() {}Sort77,4433
  ~Sort() {}~Sort79,4471
  void sortBodies(Bodies &bodies, Bodies &buffer, bool ascend=true, int begin=0, int end=0) {sortBodies82,4524
  void sortCells(Cells &cells, Cells &buffer, bool ascend=true, int begin=0, int end=0) {sortCells94,5403

old/include/vec.h,3368
#define vec_hvec_h23,1105
#define for_i for_i24,1119
class vec {vec27,1228
  T a[N];a29,1249
  vec(){}                                                          // Default constructorvec31,1267
  vec(const T &b) {                                                // Copy constructor (scalar)vec32,1357
  vec(const vec &b) {                                              // Copy constructor (vector)vec35,1477
  ~vec(){}                                                         // Destructor~vec38,1600
  const vec &operator=(const T b) {                                // Scalar assignmentoperator =39,1681
  const vec &operator+=(const T b) {                               // Scalar compound assignment (add)operator +=43,1811
  const vec &operator-=(const T b) {                               // Scalar compound assignment (subtract)operator -=47,1957
  const vec &operator*=(const T b) {                               // Scalar compound assignment (multiply)operator *=51,2108
  const vec &operator/=(const T b) {                               // Scalar compound assignment (divide)operator /=55,2259
  const vec &operator=(const vec &b) {                             // Vector assignmentoperator =59,2408
  const vec &operator+=(const vec &b) {                            // Vector compound assignment (add)operator +=63,2541
  const vec &operator-=(const vec &b) {                            // Vector compound assignment (subtract)operator -=67,2690
  const vec &operator*=(const vec &b) {                            // Vector compound assignment (multiply)operator *=71,2844
  const vec &operator/=(const vec &b) {                            // Vector compound assignment (divide)operator /=75,2998
  vec operator+(const T b) const {                                 // Scalar arithmetic (add)operator +79,3150
  vec operator-(const T b) const {                                 // Scalar arithmetic (subtract)operator -84,3300
  vec operator*(const T b) const {                                 // Scalar arithmetic (multiply)operator *89,3455
  vec operator/(const T b) const {                                 // Scalar arithmetic (divide)operator /94,3610
  vec operator+(const vec &b) const {                              // Vector arithmetic (add)operator +99,3763
  vec operator-(const vec &b) const {                              // Vector arithmetic (subtract)operator -104,3916
  vec operator*(const vec &b) const {                              // Vector arithmetic (multiply)operator *109,4074
  vec operator/(const vec &b) const {                              // Vector arithmetic (divide)operator /114,4232
  T &operator[](int i) {                                           // Indexing (lvalue)operator []119,4388
  const T &operator[](int i) const {                               // Indexing (rvalue)operator []122,4497
  operator       T* ()       {return a;}                           // Type-casting (lvalue)operator T*125,4606
  operator const T* () const {return a;}                           // Type-casting (rvalue)operator const T*126,4698
  friend std::ostream &operator<<(std::ostream &s, const vec &a) { // Component-wise output streamoperator <<127,4790
  friend T norm(const vec &b) {                                    // L2 norm squarednorm131,4931
#undef for_ifor_i138,5074

old/include/serialfmm.h,325
#define serialfmm_hserialfmm_h23,1111
class SerialFMM : public BottomUp<equation> {SerialFMM28,1207
  SerialFMM() : BottomUp<equation>() {SerialFMM39,1915
  ~SerialFMM() {~SerialFMM43,1995
  void topdown(Bodies &bodies, Cells &cells) {topdown48,2109
  void bottomup(Bodies &bodies, Cells &cells) {bottomup69,3167

examples/ewald.cxx,47
int main(int argc, char ** argv) {main20,371

examples/tree.cxx,46
int main(int argc, char ** argv) {main7,107

examples/kernel.cxx,23
int main() {main6,78

examples/serial.cxx,47
int main(int argc, char ** argv) {main10,176

examples/parallel.cxx,47
int main(int argc, char ** argv) {main13,243

examples/Makefile,0

configure,1055
as_fn_success () { as_fn_return 0; }as_fn_success178,5414
as_fn_failure () { as_fn_return 1; }as_fn_failure179,5451
as_fn_ret_success () { return 0; }as_fn_ret_success180,5488
as_fn_ret_failure () { return 1; }as_fn_ret_failure181,5523
as_fn_unset ()as_fn_unset287,9210
as_fn_set_status ()as_fn_set_status296,9365
as_fn_exit ()as_fn_exit304,9531
as_fn_mkdir_p ()as_fn_mkdir_p314,9703
as_fn_executable_p ()as_fn_executable_p362,10750
  as_fn_append ()as_fn_append378,11261
  as_fn_arith ()as_fn_arith395,11675
as_fn_error ()as_fn_error407,12044
ac_fn_cxx_try_compile ()ac_fn_cxx_try_compile1402,42591
ac_fn_cxx_try_link ()ac_fn_cxx_try_link1440,43707
MPI_Init();MPI_Init3371,104768
as_fn_error ()as_fn_error3734,115542
as_fn_set_status ()as_fn_set_status3749,115944
as_fn_exit ()as_fn_exit3757,116110
as_fn_unset ()as_fn_unset3767,116241
  as_fn_append ()as_fn_append3784,116739
  as_fn_arith ()as_fn_arith3801,117153
as_fn_mkdir_p ()as_fn_mkdir_p3897,119340
as_fn_executable_p ()as_fn_executable_p3952,120510

Makefile,0

sakura/core.h,505
void getCoef(double *C, const double *dX, double invR2, const double invR) {getCoef1,0
void M2LSum(double *L, const double *C, const double*M) {M2LSum36,860
void powerM(double *C, const double *dX) {powerM56,1681
void powerL(double *C, const double *dX) {powerL69,1947
void M2MSum(double *MI, const double *C, const double *MJ) {M2MSum82,2213
void L2LSum(double *LI, const double *C, const double *LJ) {L2LSum93,2495
void L2PSum(float *TRG, const double *C, const double *L) {L2PSum109,3235

sakura/datasets.c,215
void cube(float *X, int N){cube4,39
void octant_uniform(float *X, int N){octant_uniform15,244
void plummer(float *X, int N){plummer28,562
void create_dataset(float *X, int N, int dist){create_dataset50,1178

sakura/linked_list.c,982
typedef void (*base_function)(uint32_t*, int*, int, int); base_function5,61
void increase_counter(uint32_t (*restrict count), int (*restrict link_list), int target, int source){increase_counter7,121
void store_pointer(uint32_t (*restrict count), int (*restrict link_list), int target, int source){store_pointer11,246
void scan_colleagues(uint32_t (*restrict clgs_memory), uint32_t (*restrict clgs_first), int N){scan_colleagues18,451
int are_near_neighbors( int (*restrict child),  are_near_neighbors28,699
void interaction_list_compressed_expanded(int (**restrict clgs_link_list), interaction_list_compressed_expanded39,1059
void interaction_list_compressed_expanded_driver(int (**restrict clgs_link_list), interaction_list_compressed_expanded_driver137,5080
void interaction_list_formation(int **node_codes, int **children_first,interaction_list_formation168,6179
void form_interaction_lists(int **node_codes, int **children_first,form_interaction_lists238,9216

sakura/kernels.c,290
void upward_pass(float *X2, double ***Multipole, int **node_codes2,upward_pass6,79
void evaluation(float *X, float *X2, float *TRG, double ***Multipole, double ***Local,evaluation62,1961
void downward_pass(float *X, float *TRG, double ***Local, int **node_codes,downward_pass162,5537

sakura/encode.c,629
#define NP NP5,61
void quantize_serial(uint32_t (*restrict codes), float (*restrict X),quantize_serial7,77
void compute_quantization_codes_TL(uint32_t (*restrict codes), float (*restrict X), int N,compute_quantization_codes_TL14,297
inline uint64_t splitBy3(uint32_t a){splitBy329,839
uint64_t mortonEncode_magicbits(uint32_t x, uint32_t y, uint32_t z){mortonEncode_magicbits39,1124
void morton_encoding_T(uint64_t (*restrict mcodes), uint32_t (*restrict codes), int N){morton_encoding_T45,1299
void encodeParticles(int N, float * X, float * Xmin, float *Xmax, uint64_t *mcodes, int maxlev) {encodeParticles51,1520

sakura/test_sakura.c,43
int main(int argc, char** argv){main6,88

sakura/build_tree.c,1010
inline uint64_t Compact1By2(uint64_t x){Compact1By25,61
void decode_morton_code(int *x, int *y, int *z, uint64_t mcode){decode_morton_code15,350
void count_bins_per_level_bitmap(int (*restrict nodes_per_level),count_bins_per_level_bitmap21,520
int count_bins_bitmap_wrapper(int (*restrict nodes_per_level), int (*restrict nodes_block_first),count_bins_bitmap_wrapper34,834
void parent_children_connection_singlepass(int (**restrict node_pointers),parent_children_connection_singlepass73,1972
void parent_children_connection_wrapper(int (**restrict node_pointers), parent_children_connection_wrapper125,3571
void first_child_position(int *children_first, int *num_children, int N){first_child_position168,4941
void first_child_position_wrapper(int **children_first,first_child_position_wrapper175,5150
int tree_formation(uint32_t *bit_map, uint64_t *scodes,tree_formation186,5432
uint64_t find_leaf_populations(int *leaf_populations, uint32_t *bit_map2, int N){find_leaf_populations219,6822

sakura/Makefile,284
CXX	= icc -Wall -xHOST -O3 -funroll-loops -finline-functions -ansi-alias -openmp -std=gnu99 -I/usr/include/x86_64-linux-gnu/c++/4.8CXX3,18
SOURCES	= test_sakura.c datasets.c encode.c sort.c build_tree.c linked_list.c kernels.cSOURCES4,150
OBJECTS = $(SOURCES:.c=.o)OBJECTS5,238

sakura/sort.c,1171
#define MAXBINS MAXBINS6,81
#define MAXBINS64 MAXBINS647,99
#define NP NP8,120
#define NP3 NP39,135
#define th th10,150
void relocate_data_radix6_noindex(uint32_t (*restrict pointIds), relocate_data_radix6_noindex12,165
void parallel_cpy(uint64_t (*restrict codes), uint64_t (*restrict zcodes), parallel_cpy28,566
void find_bin_sizes(uint64_t (*restrict morton_codes), find_bin_sizes34,774
void bin_sort_serial_radix6_bitmap(uint64_t (*restrict zcodes), bin_sort_serial_radix6_bitmap43,997
void bin_sort_radix6_bitmap(uint64_t (*restrict zcodes), uint64_t (*restrict codes), bin_sort_radix6_bitmap124,3141
void build_tree(uint64_t (*restrict mcodes), build_tree197,5270
void decomposeSpace(int N, uint64_t **mcodes,decomposeSpace209,5677
void relocateTL(float (*restrict Y), float (*restrict X), uint32_t (*restrict index), uint32_t N){relocateTL225,6250
void rearrange_dataTL(float (*restrict Y), float (*restrict X), uint32_t (*restrict Ids), int N){rearrange_dataTL231,6427
void rearrangeDirect(float (*restrict Y),rearrangeDirect247,6872
void relocateParticles(int N, float **X, uint32_t *permutation_vector){relocateParticles255,7083

sakura/utils.h,648
#define DIM DIM6,82
#define LDIM LDIM7,96
#define NP3 NP38,112
#define PP PP9,127
#define uint uint10,140
#define MIN(MIN12,163
#define MAX(MAX13,204
static const int MTERM = PP*(PP+1)*(PP+2)/6;MTERM15,246
static const int LTERM = (PP+1)*(PP+2)*(PP+3)/6;LTERM16,291
static double get_time(){get_time18,341
static double timer;timer24,464
static void start_timer(){start_timer26,486
static void stop_timer(char *event_name){stop_timer30,538
static void* sakura_malloc(size_t items, size_t size, char *message){sakura_malloc34,643
static void* sakura_calloc(size_t items, size_t size, char* message){sakura_calloc42,830

include/build_tree_cilk.h,1582
#define build_tree_hbuild_tree_h2,21
#define BLOCK_SIZE BLOCK_SIZE8,123
#define NCRIT NCRIT9,146
#define NBINS NBINS10,163
static const int morton256_x[256] = {morton256_x12,181
static const int morton256_y[256] = {morton256_y47,3422
static const int morton256_z[256] = {morton256_z82,6663
Box bounds2box(Bounds & bounds) {bounds2box117,9904
void getKey(int numBodies, float * X, float * Xmin, float * Xmax, uint32_t * keys, int maxlevel) {getKey137,10322
void relocate(uint32_t * keys, uint32_t * buffer, uint32_t * index, uint32_t * permutation,relocate171,11313
void recursion(uint32_t * keys, uint32_t * buffer, uint32_t * permutation,recursion185,11725
void radixSort(int numBodies, uint32_t * keys, uint32_t * buffer,radixSort221,12641
void permuteBlock(float * buffer, float * bodies, uint32_t * index, int numBlock) {permuteBlock272,14017
void permute(int numBodies, float * bodies, float * buffer, uint32_t * index) {permute281,14240
class BuildTree {BuildTree291,14610
  const int ncrit;ncrit293,14637
  int maxlevel;maxlevel294,14656
  void bodies2leafs(Bodies & bodies, Cells & cells, Bounds bounds, int level) {bodies2leafs297,14682
  void leafs2cells(Cells & cells, Bounds bounds, int level) {leafs2cells327,15506
  void reverseOrder(Cells & cells, uint32_t * permutation) {reverseOrder367,16555
  BuildTree(int _ncrit, int) : maxlevel(0), ncrit(_ncrit) {}BuildTree381,16980
  Cells buildTree(Bodies & bodies, Bodies & buffer, Bounds bounds) {buildTree383,17042
  void printTreeData(Cells & cells) {printTreeData489,20100

include/traversal.h,4401
#define traversal_htraversal_h2,20
#define countKernel(countKernel8,118
#define countKernel(countKernel10,151
class Traversal {Traversal13,182
  const int nspawn;                                             //!< Threshold of NBODY for spawning new threadsnspawn15,209
  const int images;                                             //!< Number of periodic image sublevelsimages16,322
  const real_t eps2;                                            //!< Softening parameter (squared)eps217,426
  real_t numP2P;                                                //!< Number of P2P kernel callsnumP2P19,542
  real_t numM2L;                                                //!< Number of M2L kernel callsnumM2L20,638
  C_iter Ci0;                                                   //!< Iterator of first target cellCi022,741
  C_iter Cj0;                                                   //!< Iterator of first source cellCj023,840
  void countList(C_iter Ci, C_iter Cj, bool mutual, bool isP2P) {countList28,1012
  void countList(C_iter, C_iter, bool, bool) {}countList37,1220
  void countWeight(C_iter Ci, C_iter Cj, bool mutual, real_t weight) {countWeight42,1337
  void countWeight(C_iter, C_iter, bool, real_t) {}countWeight47,1616
  void traverse(C_iter Ci, C_iter Cj, vec3 Xperiodic, bool mutual, real_t remote) {traverse51,1729
  struct TraverseRange {TraverseRange86,4495
    Traversal * traversal;                                      //!< Traversal objecttraversal87,4520
    C_iter CiBegin;                                             //!< Begin iterator of target cellsCiBegin88,4606
    C_iter CiEnd;                                               //!< End iterator of target cellsCiEnd89,4706
    C_iter CjBegin;                                             //!< Begin Iterator of source cellsCjBegin90,4804
    C_iter CjEnd;                                               //!< End iterator of source cellsCjEnd91,4904
    real_t eps2;                                                //!< Softening parameter (squared)eps292,5002
    vec3 Xperiodic;                                             //!< Periodic coordinate offsetXperiodic93,5101
    bool mutual;                                                //!< Flag for mutual interactionmutual94,5197
    real_t remote;                                              //!< Weight for remote work loadremote95,5294
    TraverseRange(Traversal * _traversal, C_iter _CiBegin, C_iter _CiEnd,// ConstructorTraverseRange96,5391
    void operator() () {                                        // Overload operator()operator ()102,5788
  void traversePeriodic(real_t cycle) {traversePeriodic148,9214
  void splitCell(C_iter Ci, C_iter Cj, vec3 Xperiodic, bool mutual, real_t remote) {splitCell209,14622
  Traversal(int _nspawn, int _images, real_t _eps2) :           // ConstructorTraversal237,16983
  void initListCount(Cells & cells) {initListCount246,17286
  void initListCount(Cells) {}initListCount252,17608
  void initWeight(Cells & cells) {initWeight257,17719
  void initWeight(Cells) {}initWeight268,18461
  void dualTreeTraversal(Cells & icells, Cells & jcells, real_t cycle, bool mutual, real_t remote=1) {dualTreeTraversal272,18550
  struct DirectRecursion {DirectRecursion298,20896
    C_iter Ci;                                                  //!< Iterator of target cellCi299,20923
    C_iter Cj;                                                  //!< Iterator of source cellCj300,21016
    real_t eps2;                                                //!< Softening parameter (squared)eps2301,21109
    int prange;                                                 //!< Range of periodic imagesprange302,21208
    real_t cycle;                                               //!< Periodic cyclecycle303,21302
    DirectRecursion(C_iter _Ci, C_iter _Cj, real_t _eps2, int _prange, real_t _cycle) :// ConstructorDirectRecursion304,21386
    void operator() () {                                        // Overload operatoroperator ()306,21583
  void direct(Bodies & ibodies, Bodies & jbodies, real_t cycle) {direct336,24197
  void normalize(Bodies & bodies) {normalize352,25519
  void printTraversalData() {printTraversalData359,25860
  void writeList(Cells cells, int mpirank=0) {writeList375,26750
  void writeList(Cells, int) {}writeList386,27484

include/van_der_waals.h,1811
#define van_der_waals_hvan_der_waals_h2,24
class VanDerWaals {VanDerWaals6,88
  const real_t cuton;                                           //!< Cuton distancecuton8,117
  const real_t cutoff;                                          //!< Cutoff distancecutoff9,201
  const real_t cycle;                                           //!< Periodic cyclecycle10,286
  const int numTypes;                                           //!< Number of atom typesnumTypes11,370
  std::vector<real_t> rscale;                                   //!< Distance scaling parameter for VdW potentialrscale12,460
  std::vector<real_t> gscale;                                   //!< Value scaling parameter for VdW potentialgscale13,574
  std::vector<real_t> fgscale;                                  //!< Value scaling parameter for VdW forcefgscale14,685
  void P2P(C_iter Ci, C_iter Cj, vec3 Xperiodic) const {P2P18,833
  struct Neighbor {Neighbor58,2244
    VanDerWaals * VdW;                                          //!< VanDerWaals objectVdW59,2264
    C_iter Ci;                                                  //!< Iterator of current target cellCi60,2352
    C_iter Cj;                                                  //!< Iterator of current source cellCj61,2453
    C_iter C0;                                                  //!< Iterator of first source cellC062,2554
    Neighbor(VanDerWaals * _VdW, C_iter _Ci, C_iter _Cj, C_iter _C0) :// ConstructorNeighbor63,2653
    void operator() () {                                        // Overload operator()operator ()65,2826
  VanDerWaals(double _cuton, double _cutoff, double _cycle, int _numTypes,VanDerWaals82,4087
  void evaluate(Cells & cells, Cells & jcells) {evaluate96,4636
  void print(int stringLength) {print110,5682

include/thread.h,101
#define thread_hthread_h2,17
#define num_threads(num_threads10,110
#define TO_TBB TO_TBB12,232

include/kernel.h,62
#define kernel_hkernel_h2,17
namespace kernel {kernel6,71

include/macros.h,412
#define macros_hmacros_h2,17
#define assert(assert13,221
const int SIMD_BYTES = 64;                                      //!< SIMD byte length of MICSIMD_BYTES18,302
const int SIMD_BYTES = 32;                                      //!< SIMD byte length of AVX and BG/QSIMD_BYTES20,419
const int SIMD_BYTES = 16;                                      //!< SIMD byte length of SSE and BG/PSIMD_BYTES22,560

include/tree_mpi.h,3293
#define tree_mpi_htree_mpi_h2,19
class TreeMPI {TreeMPI7,138
  const int mpirank;                                            //!< Rank of MPI communicatormpirank9,165
  const int mpisize;                                            //!< Size of MPI communicatormpisize10,259
  const int images;                                             //!< Number of periodic image sublevelsimages11,353
  float (* allBoundsXmin)[3];                                   //!< Array for local Xmin for all ranksallBoundsXmin12,457
  float (* allBoundsXmax)[3];                                   //!< Array for local Xmax for all ranksallBoundsXmax13,561
  Bodies sendBodies;                                            //!< Send buffer for bodiessendBodies14,665
  Bodies recvBodies;                                            //!< Receive buffer for bodiesrecvBodies15,757
  Cells sendCells;                                              //!< Send buffer for cellssendCells16,852
  Cells recvCells;                                              //!< Receive buffer for cellsrecvCells17,943
  int * sendBodyCount;                                          //!< Send countsendBodyCount18,1037
  int * sendBodyDispl;                                          //!< Send displacementsendBodyDispl19,1117
  int * recvBodyCount;                                          //!< Receive countrecvBodyCount20,1204
  int * recvBodyDispl;                                          //!< Receive displacementrecvBodyDispl21,1287
  int * sendCellCount;                                          //!< Send countsendCellCount22,1377
  int * sendCellDispl;                                          //!< Send displacementsendCellDispl23,1457
  int * recvCellCount;                                          //!< Receive countrecvCellCount24,1544
  int * recvCellDispl;                                          //!< Receive displacementrecvCellDispl25,1627
  void alltoall(Bodies & bodies) {alltoall29,1764
  void alltoallv(Bodies & bodies) {alltoallv48,3204
  void alltoall(Cells) {alltoall69,5015
  void alltoallv(Cells & cells) {alltoallv79,5612
  real_t getDistance(C_iter C, Bounds bounds, vec3 Xperiodic) {getDistance101,7427
  void addSendCell(C_iter C, int & irank, int & icell, int & iparent, bool copyData) {addSendCell113,8284
  void addSendBody(C_iter C, int & irank, int & ibody, int icell, bool copyData) {addSendBody127,9345
  void traverseLET(C_iter C, C_iter C0, Bounds bounds, real_t cycle,traverseLET142,10486
  TreeMPI(int _mpirank, int _mpisize, int _images) :TreeMPI186,14218
  ~TreeMPI() {~TreeMPI200,15338
  void allgatherBounds(Bounds bounds) {allgatherBounds214,16374
  void setLET(Cells & cells, real_t cycle) {setLET225,17090
  void getLET(Cells & cells, int irank) {getLET276,21553
  void linkLET() {linkLET293,22797
  Bodies root2body() {root2body307,23775
  void attachRoot(Cells & cells) {attachRoot325,25127
  Bodies commBodies(Bodies sendBodies) {commBodies372,29074
  Bodies commBodies() {commBodies381,29547
  void commCells() {commCells390,30002
  Bodies getRecvBodies() {getRecvBodies398,30378
  void shiftBodies(Bodies & bodies) {shiftBodies403,30540
  Bodies allgatherBodies(Bodies & bodies) {allgatherBodies427,32240

include/unroll.h,2167
#define unroll_hunroll_h2,17
namespace Ops {Ops4,35
  template<typename T> struct Assign {Assign5,51
    const T operator() (T & lhs, const T & rhs) const {operator ()7,130
  template<typename T> struct Add {Add11,221
    const T operator() (T & lhs, const T & rhs) const {operator ()13,297
  template<typename T> struct Sub {Sub17,389
    const T operator() (T & lhs, const T & rhs) const {operator ()19,465
  template<typename T> struct Mul {Mul23,557
    const T operator() (T & lhs, const T & rhs) const {operator ()25,633
  template<typename T> struct Div {Div29,725
    const T operator() (T & lhs, const T & rhs) const {operator ()31,801
  template<typename T> struct Gt {Gt35,893
    bool operator() (T & lhs, const T & rhs) const {operator ()37,968
  template<typename T> struct Lt {Lt41,1057
    bool operator() (T & lhs, const T & rhs) const {operator ()43,1132
  template<typename T> struct And {And47,1221
    int operator() (int & lhs, const int & rhs) const {operator ()49,1297
  template<typename T> struct Or {Or53,1389
    int operator() (int & lhs, const int & rhs) const {operator ()55,1464
  template<typename T> struct Negate {Negate59,1556
    T operator() (T & lhs, const T & rhs) const {operator ()61,1635
  template<typename T> struct Min {Min65,1721
    T operator() (T & lhs, const T & rhs) const {operator ()67,1797
  template<typename T> struct Max {Max71,1894
    T operator() (T & lhs, const T & rhs) const {operator ()73,1970
  template<typename T> struct Abs {Abs77,2067
    T operator() (T & lhs, const T & rhs) const {operator ()79,2143
  template<typename T> struct Rsqrt {Rsqrt83,2235
    T operator() (T & lhs, const T & rhs) const {operator ()85,2313
struct Unroll {Unroll92,2450
  static void loop(T * lhs, const T * rhs) {loop94,2504
  static void loop(T * lhs, const T rhs) {loop100,2682
  static const T reduce(const T * val) {reduce106,2853
struct Unroll<Op,T,1> {Unroll113,3033
  static void loop(T * lhs, const T * rhs) {loop115,3095
  static void loop(T * lhs, const T rhs) {loop120,3231
  static const T reduce(const T * val) {reduce125,3362

include/base_mpi.h,1099
#define base_mpi_hbase_mpi_h2,19
class BaseMPI {BaseMPI9,140
  int external;                                                 //!< Flag to indicate external MPI_Init/Finalizeexternal11,165
  const int wait;                                               //!< Waiting time between output of different rankswait14,290
  int mpirank;                                                  //!< Rank of MPI communicatormpirank17,415
  int mpisize;                                                  //!< Size of MPI communicatormpisize18,509
  BaseMPI() : external(0), wait(100) {                          // Initialize variablesBaseMPI22,630
  ~BaseMPI() {~BaseMPI32,1306
  int allreduceInt(int send) {allreduceInt37,1459
  vec3 allreduceVec3(vec3 send) {allreduceVec344,1799
  Bounds allreduceBounds(Bounds local) {allreduceBounds54,2414
  void print(T data) {print73,3732
  void print(T data, const int irank) {print86,4512
  void print(T * data, const int begin, const int end) {print94,4890
  void print(T * data, const int begin, const int end, const int irank) {print110,5950

include/args.h,780
#define args_hargs_h2,15
static struct option long_options[] = {long_options9,127
class Args {Args27,620
  int numBodies;numBodies29,641
  int ncrit;ncrit30,658
  int nspawn;nspawn31,671
  int threads;threads32,685
  int images;images33,700
  double theta;theta34,714
  int useRmax;useRmax35,730
  int useRopt;useRopt36,745
  int mutual;mutual37,760
  int graft;graft38,774
  int verbose;verbose39,787
  const char * distribution;distribution40,802
  int repeat;repeat41,831
  void usage(char * name) {usage44,855
  const char * parse(const char * arg) {parse78,2412
  Args(int argc=0, char ** argv=NULL) : numBodies(1000000), ncrit(64), nspawn(5000), threads(64), images(0),Args98,2779
  void print(int stringLength, int P) {print155,4104

include/up_down_pass.h,3448
#define up_down_pass_hup_down_pass_h2,23
class UpDownPass {UpDownPass7,107
  const real_t theta;                                           //!< Multipole acceptance criteriatheta9,135
  const bool useRmax;                                           //!< Use maximum distance for MACuseRmax10,234
  const bool useRopt;                                           //!< Use error optimized theta for MACuseRopt11,332
  real_t R0;                                                    //!< Radius of root cellR012,435
  struct SetRopt {SetRopt16,586
    C_iter C;                                                   //!< Iterator of current cellC17,605
    C_iter C0;                                                  //!< Iterator of first cellC018,699
    real_t c;                                                   //!< Root coefficientc19,791
    real_t theta;                                               //!< Multipole acceptance criteriatheta20,877
    SetRopt(C_iter _C, C_iter _C0, real_t _c, real_t _theta) :  // ConstructorSetRopt21,976
    void operator() () {                                        // Overload operator()operator ()23,1143
  struct ResetCellRadius {ResetCellRadius46,2885
    C_iter C;                                                   //!< Iterator of current cellC47,2912
    C_iter C0;                                                  //!< Iterator of first cellC048,3006
    real_t R0;                                                  //!< Radius of root cellR049,3098
    int level;                                                  //!< Current tree levellevel50,3187
    ResetCellRadius(C_iter _C, C_iter _C0, real_t _R0, int _level) : // ConstructorResetCellRadius51,3275
    void operator() () {                                        // Overload operator()operator ()53,3447
  struct PostOrderTraversal {PostOrderTraversal65,4352
    C_iter C;                                                   //!< Iterator of current cellC66,4382
    C_iter C0;                                                  //!< Iterator of first cellC067,4476
    real_t theta;                                               //!< Multipole acceptance criteriatheta68,4568
    bool useRmax;                                               //!< Use maximum distance for MACuseRmax69,4667
    void setRmax() {setRmax71,4822
    PostOrderTraversal(C_iter _C, C_iter _C0, real_t _theta, bool _useRmax) : // ConstructorPostOrderTraversal88,6187
    void operator() () {                                        // Overload operator()operator ()90,6368
  struct PreOrderTraversal {PreOrderTraversal107,7763
    C_iter C;                                                   //!< Iterator of current cellC108,7792
    C_iter C0;                                                  //!< Iterator of first cellC0109,7886
    PreOrderTraversal(C_iter _C, C_iter _C0) :                  // ConstructorPreOrderTraversal110,7978
    void operator() () {                                        // Overload operator()operator ()112,8145
  UpDownPass(real_t _theta, bool _useRmax, bool _useRopt) :UpDownPass135,9683
  void upwardPass(Cells & cells) {upwardPass141,9963
  void downwardPass(Cells & cells) {downwardPass163,11778
  vec3 getDipole(Bodies & bodies, vec3 X0) {getDipole179,12934
  void dipoleCorrection(Bodies & bodies, vec3 dipole, int numBodies, real_t cycle) {dipoleCorrection188,13461

include/types.h,5656
#define types_htypes_h2,16
typedef double               real_t;                            //!< Floating point type is double precisionreal_t13,200
const real_t EPS = 1e-16;                                       //!< Double precision epsilonEPS14,309
typedef float                real_t;                            //!< Floating point type is single precisionreal_t16,409
const real_t EPS = 1e-8;                                        //!< Single precision epsilonEPS17,518
typedef std::complex<real_t> complex_t;                         //!< Complex typecomplex_t19,619
typedef vec<3,real_t>        vec3;                              //!< Vector of 3 real_t typesvec320,701
typedef vec<3,complex_t>     cvec3;                             //!< Vector of 3 complex_t typescvec321,795
const int NSIMD = SIMD_BYTES / sizeof(real_t);                  //!< SIMD vector length (SIMD_BYTES defined in macros.h)NSIMD24,936
typedef vec<NSIMD,real_t> simdvec;                              //!< SIMD vector typesimdvec25,1057
typedef kahan<real_t>  kreal_t;                                 //!< Floating point type with Kahan summationkreal_t29,1242
typedef vec<4,kreal_t> kvec4;                                   //!< Vector of 4 floats with Kahan summaitonkvec430,1352
typedef kahan<simdvec> ksimdvec;                                //!< SIMD vector type with Kahan summationksimdvec31,1461
typedef real_t         kreal_t;                                 //!< Floating point typekreal_t33,1574
typedef vec<4,real_t>  kvec4;                                   //!< Vector of 4 floating point typeskvec434,1663
typedef simdvec        ksimdvec;                                //!< SIMD vector typeksimdvec35,1765
const int P = EXPANSION;                                        //!< Order of expansionsP39,1901
const int NTERM = P*(P+1)*(P+2)/6;                              //!< Number of Cartesian mutlipole/local termsNTERM41,2004
typedef vec<NTERM,real_t> vecP;                                 //!< Multipole/local coefficient type for CartesianvecP42,2115
const int NTERM = P*(P+1)/2;                                    //!< Number of Spherical multipole/local termsNTERM44,2247
typedef vec<NTERM,complex_t> vecP;                              //!< Multipole/local coefficient type for sphericalvecP45,2358
struct Box {Box49,2520
  vec3   X;                                                     //!< Box centerX50,2533
  real_t R;                                                     //!< Box radiusR51,2613
struct Bounds {Bounds55,2734
  vec3 Xmin;                                                    //!< Minimum value of coordinatesXmin56,2750
  vec3 Xmax;                                                    //!< Maximum value of coordinatesXmax57,2848
struct Source {Source61,2991
  vec3   X;                                                     //!< PositionX62,3007
  real_t SRC;                                                   //!< Scalar source valuesSRC63,3085
struct Body : public Source {Body67,3234
  int      IBODY;                                               //!< Initial body numbering for sorting backIBODY68,3264
  int      IRANK;                                               //!< Initial rank numbering for partitioning backIRANK69,3373
  uint64_t ICELL;                                               //!< Cell index   ICELL70,3487
  real_t   WEIGHT;                                              //!< Weight for partitioningWEIGHT71,3570
  kvec4    TRG;                                                 //!< Scalar+vector3 target valuesTRG72,3663
typedef AlignedAllocator<Body,SIMD_BYTES> BodyAllocator;        //!< Body alignment allocatorBodyAllocator74,3764
typedef std::vector<Body,BodyAllocator>   Bodies;               //!< Vector of bodiesBodies75,3858
typedef Bodies::iterator                  B_iter;               //!< Iterator of body vectorB_iter77,4032
struct Cell {Cell80,4149
  int       IPARENT;                                            //!< Index of parent cellIPARENT81,4163
  int       ICHILD;                                             //!< Index of first child cellICHILD82,4253
  int       NCHILD;                                             //!< Number of child cellsNCHILD83,4348
  int       IBODY;                                              //!< Index of first bodyIBODY84,4439
  int       NBODY;                                              //!< Number of descendant bodiesNBODY85,4528
  int       numP2P;                                             //!< Size of P2P interaction list per cellnumP2P87,4640
  int       numM2L;                                             //!< Size of M2L interaction list per cellnumM2L88,4747
  B_iter    BODY;                                               //!< Iterator of first bodyBODY90,4861
  uint64_t  ICELL;                                              //!< Cell indexICELL91,4953
  real_t    WEIGHT;                                             //!< Weight for partitioningWEIGHT92,5033
  vec3      X;                                                  //!< Cell centerX93,5126
  real_t    R;                                                  //!< Cell radiusR94,5207
  vecP      M;                                                  //!< Multipole coefficientsM95,5288
  vecP      L;                                                  //!< Local coefficientsL96,5380
typedef std::vector<Cell> Cells;                                //!< Vector of cellsCells98,5471
typedef Cells::iterator   C_iter;                               //!< Iterator of cell vectorC_iter99,5556

include/partition.h,2345
#define partition_hpartition_h2,20
class Partition {Partition7,123
  const int mpirank;                                            //!< Rank of MPI communicatormpirank9,150
  const int mpisize;                                            //!< Size of MPI communicatormpisize10,244
  const int numBins;                                            //!< Number of sampling binsnumBins11,338
  int numLevels;                                                //!< Levels of MPI rank binary treenumLevels12,431
  int * rankDispl;                                              //!< Displacement of MPI rank grouprankDispl13,531
  int * rankCount;                                              //!< Size of MPI rank grouprankCount14,631
  int * rankColor;                                              //!< Color of MPI rank grouprankColor15,723
  int * rankKey;                                                //!< Key of MPI rank grouprankKey16,816
  int * rankMap;                                                //!< Map partition to MPI rank grouprankMap17,907
  int * sendDispl;                                              //!< Displacement of bodies to send per ranksendDispl18,1008
  int * sendCount;                                              //!< Count of bodies to send per ranksendCount19,1117
  int * scanHist;                                               //!< Scan of histogramscanHist20,1219
  int * countHist;                                              //!< Body count histogramcountHist21,1306
  float * weightHist;                                           //!< Body weight histogramweightHist22,1396
  float * globalHist;                                           //!< Global body weight histogramglobalHist23,1487
  Bounds * rankBounds;                                          //!< Bounds of each rankrankBounds24,1585
  Bodies buffer;                                                //!< MPI communication buffer for bodiesbuffer25,1674
  Partition(int _mpirank, int _mpisize) : mpirank(_mpirank), mpisize(_mpisize), numBins(16) {Partition31,1816
  ~Partition() {~Partition53,3768
  Bounds bisection(Bodies & bodies, Bounds globalBounds) {bisection69,5098
  Bounds octsection(Bodies & bodies, Bounds global) {octsection198,16966
  void unpartition(Bodies & bodies) {unpartition237,20154

include/build_tree_tbb.h,7686
#define build_tree_hbuild_tree_h2,21
class BuildTree {BuildTree7,102
  typedef vec<8,int> ivec8;                                     //!< Vector of 8 integer typesivec89,129
  struct BinaryTreeNode {BinaryTreeNode11,306
    ivec8            NBODY;                                     //!< Number of descendant bodiesNBODY12,332
    BinaryTreeNode * LEFT;                                      //!< Pointer to left childLEFT13,429
    BinaryTreeNode * RIGHT;                                     //!< Pointer to right childRIGHT14,520
    BinaryTreeNode * BEGIN;                                     //!< Pointer to begining of memory spaceBEGIN15,612
    BinaryTreeNode * END;                                       //!< Pointer to end of memory spaceEND16,717
  struct OctreeNode {OctreeNode20,935
    int          IBODY;                                         //!< Index offset for first body in nodeIBODY21,957
    int          NBODY;                                         //!< Number of descendant bodiesNBODY22,1062
    int          NNODE;                                         //!< Number of descendant nodesNNODE23,1159
    OctreeNode * CHILD[8];                                      //!< Pointer to child nodeCHILD24,1255
    vec3         X;                                             //!< Coordinate at centerX25,1346
  const int    ncrit;                                           //!< Number of bodies per leaf cellncrit28,1442
  const int    nspawn;                                          //!< Threshold of NBODY for spawning new threadsnspawn29,1542
  int          maxlevel;                                        //!< Maximum level of treemaxlevel30,1655
  B_iter       B0;                                              //!< Iterator of first bodyB031,1746
  OctreeNode * N0;                                              //!< Pointer to octree root nodeN032,1838
  struct CountBodies {CountBodies36,2022
    Bodies & bodies;                                            //!< Vector of bodiesbodies37,2045
    int begin;                                                  //!< Body begin indexbegin38,2131
    int end;                                                    //!< Body end indexend39,2217
    vec3 X;                                                     //!< Coordinate of node centerX40,2301
    BinaryTreeNode * binNode;                                   //!< Pointer to binary tree nodebinNode41,2396
    int nspawn;                                                 //!< Threshold of NBODY for spawning new threadsnspawn42,2493
    CountBodies(Bodies & _bodies, int _begin, int _end, vec3 _X,// ConstructorCountBodies43,2606
    inline int getNumBinNode(int n) const {getNumBinNode48,2930
    void operator() () {                                        // Overload operator()operator ()52,3198
  struct MoveBodies {MoveBodies85,6259
    Bodies & bodies;                                            //!< Vector of bodiesbodies86,6281
    Bodies & buffer;                                            //!< Buffer for bodiesbuffer87,6367
    int begin;                                                  //!< Body begin indexbegin88,6454
    int end;                                                    //!< Body end indexend89,6540
    BinaryTreeNode * binNode;                                   //!< Pointer to binary tree nodebinNode90,6624
    ivec8 octantOffset;                                         //!< Offset of octantoctantOffset91,6721
    vec3 X;                                                     //!< Coordinates of node centerX92,6807
    MoveBodies(Bodies & _bodies, Bodies & _buffer, int _begin, int _end,// ConstructorMoveBodies93,6903
    void operator() () {                                        // Overload operator()operator ()97,7209
  struct BuildNodes {BuildNodes119,9108
    OctreeNode *& octNode;                                      //!< Reference to a double pointer of an octree nodeoctNode120,9130
    Bodies & bodies;                                            //!< Vector of bodiesbodies121,9247
    Bodies & buffer;                                            //!< Buffer for bodiesbuffer122,9333
    int begin;                                                  //!< Body begin indexbegin123,9420
    int end;                                                    //!< Body end indexend124,9506
    BinaryTreeNode * binNode;                                   //!< Pointer to binary tree nodebinNode125,9590
    vec3 X;                                                     //!< Coordinate of node centerX126,9687
    real_t R0;                                                  //!< Radius of root cellR0127,9782
    int ncrit;                                                  //!< Number of bodies per leaf cellncrit128,9871
    int nspawn;                                                 //!< Threshold of NBODY for spawning new threadsnspawn129,9971
    logger::Timer & timer;timer130,10084
    int level;                                                  //!< Current tree levellevel131,10111
    bool direction;                                             //!< Direction of buffer copyingdirection132,10199
    BuildNodes(OctreeNode *& _octNode, Bodies & _bodies,BuildNodes134,10316
    OctreeNode * makeOctNode(int begin, int end, vec3 X, bool nochild) const {makeOctNode141,10843
    inline ivec8 exclusiveScan(ivec8 input, int offset) const {exclusiveScan153,11804
    inline int getMaxBinNode(int n) const {getMaxBinNode162,12445
    void operator() () {                                        // Overload operator()operator ()165,12615
  struct Nodes2cells {Nodes2cells222,17182
    OctreeNode * octNode;                                       //!< Pointer to octree nodeoctNode223,17205
    B_iter B0;                                                  //!< Iterator of first bodyB0224,17297
    C_iter C;                                                   //!< Iterator of current cellC225,17389
    C_iter C0;                                                  //!< Iterator of first cellC0226,17483
    C_iter CN;                                                  //!< Iterator of cell counterCN227,17575
    vec3 X0;                                                    //!< Coordinate of root cell centerX0228,17669
    real_t R0;                                                  //!< Radius of root cellR0229,17769
    int nspawn;                                                 //!< Threshold of NNODE for spawning new threadsnspawn230,17858
    int & maxlevel;                                             //!< Maximum tree levelmaxlevel231,17971
    int level;                                                  //!< Current tree levellevel232,18059
    int iparent;                                                //!< Index of parent celliparent233,18147
    Nodes2cells(OctreeNode * _octNode, B_iter _B0, C_iter _C,   // ConstructorNodes2cells234,18237
    uint64_t getKey(vec3 X, vec3 Xmin, real_t diameter, int level) {getKey240,18637
    void operator() () {                                        // Overload operator()operator ()250,19402
  Box bounds2box(Bounds bounds) {bounds2box298,23502
  void growTree(Bodies & bodies, Bodies & buffer, Box box) {growTree313,24573
  Cells linkTree(Box box) {linkTree347,26675
  BuildTree(int _ncrit, int _nspawn) : ncrit(_ncrit), nspawn(_nspawn), maxlevel(0) {}BuildTree362,27721
  Cells buildTree(Bodies & bodies, Bodies & buffer, Bounds bounds) {buildTree365,27844
  void printTreeData(Cells & cells) {printTreeData377,28704

include/dataset.h,1538
#define dataset_hdataset_h2,18
class Dataset {                                                 // Contains all the different datasetsDataset11,169
  long filePosition;                                            // Position of file streamfilePosition13,281
  void splitRange(int & begin, int & end, int iSplit, int numSplit) {splitRange17,425
  Bodies lattice(int numBodies, int mpirank, int mpisize) {lattice28,1187
  Bodies cube(int numBodies, int seed, int numSplit) {cube51,3029
  Bodies sphere(int numBodies, int seed, int numSplit) {sphere68,4303
  Bodies octant(int numBodies, int seed, int numSplit) {octant89,5931
  Bodies plummer(int numBodies, int seed, int numSplit) {plummer108,7359
  Dataset() : filePosition(0) {}                                // Initialize variablesDataset139,9715
  void initSource(Bodies & bodies, int seed, int numSplit) {initSource142,9835
  void initTarget(Bodies & bodies) {initTarget167,11571
  Bodies initBodies(int numBodies, const char * distribution,initBodies176,12110
  void readSources(Bodies & bodies, int mpirank) {readSources204,14414
  void writeSources(Bodies & bodies, int mpirank) {writeSources221,15623
  void readTargets(Bodies & bodies, int mpirank) {readTargets236,16662
  void writeTargets(Bodies & bodies, int mpirank) {writeTargets253,17877
  void sampleBodies(Bodies & bodies, int numTargets) {sampleBodies268,18933
  Bodies getPositive(Bodies & bodies) {getPositive279,19686
  Bodies getNegative(Bodies & bodies) {getNegative294,20653

include/logger.h,3674
#define logger_hlogger_h2,17
struct Tracer {Tracer23,373
  pthread_t thread;                                             //!< pthread idthread24,389
  double    begin;                                              //!< Begin timer of tracerbegin25,469
  double    end;                                                //!< End timer of tracerend26,560
  Tracer() {}                                                   //!< ConstructorTracer27,649
namespace logger {logger31,762
  typedef std::map<std::string,double> Timer;                   //!< Map of timer event name to timed valueTimer32,781
  typedef Timer::iterator              T_iter;                  //!< Iterator of timer event name mapT_iter33,889
  typedef std::queue<Tracer>           Tracers;                 //!< Queue of tracersTracers34,991
  typedef std::map<pthread_t,int>      ThreadMap;               //!< Map of pthread id to thread idThreadMap35,1077
  Timer           beginTimer;                                   //!< Timer base valuebeginTimer37,1178
  Timer           timer;                                        //!< Timings of all eventstimer38,1264
  Tracers         tracers;                                      //!< Tracers for all eventstracers39,1355
  pthread_mutex_t mutex;                                        //!< Pthread communicatormutex40,1447
  int                    PAPIEventSet = PAPI_NULL;              //!< PAPI event setPAPIEventSet42,1546
  std::vector<char*>     PAPIEventNames;                        //!< Vector of PAPI event namesPAPIEventNames43,1630
  std::vector<int>       PAPIEventCodes;                        //!< Vector of PAPI event codesPAPIEventCodes44,1726
  std::vector<uint64_t>  PAPIEventValues;                       //!< Vector of PAPI event valuesPAPIEventValues45,1822
  int stringLength = 20;                                        //!< Max length of event namestringLength48,1927
  int decimal = 7;                                              //!< Decimal precisiondecimal49,2021
  bool verbose = false;                                         //!< Print to screenverbose50,2108
  double get_time() {get_time53,2215
  inline uint64_t get_cycle() {get_cycle60,2562
  inline uint64_t get_cycle(uint32_t * id) {get_cycle67,2919
  inline void printTitle(std::string title) {printTitle75,3394
  inline void startTimer(std::string event) {startTimer87,4199
  inline void printTime(std::string event) {printTime92,4397
  double stopTimer(std::string event, int print=1) {stopTimer101,4881
  inline void writeTime(int mpirank=0) {writeTime109,5364
  inline void resetTimer(std::string event) {resetTimer123,6282
  inline void resetTimer() {resetTimer128,6455
  inline void startPAPI() {startPAPI133,6591
  inline void stopPAPI() {stopPAPI161,8608
  inline void printPAPI() {printPAPI171,9044
  inline void initTracer() {initTracer186,9779
  inline void startTracer(Tracer &tracer) {startTracer191,9947
  inline void stopTracer(Tracer & tracer) {stopTracer199,10385
  inline void writeTracer(int mpirank=0) {writeTracer207,10837
  inline void initTracer() {}initTracer246,14040
  inline void startTracer(Tracer) {}startTracer247,14070
  inline void stopTracer(Tracer) {}stopTracer248,14107
  inline void writeTracer() {}writeTracer249,14143
  inline void writeTracer(int) {}writeTracer250,14174
  inline void startDAG() {startDAG255,14263
  inline void stopDAG() {stopDAG260,14405
  inline void writeDAG() {writeDAG265,14545
  inline void startDAG() {}startDAG269,14667
  inline void stopDAG() {}stopDAG270,14695
  inline void writeDAG() {}writeDAG271,14722

include/bound_box.h,2011
#define bound_box_hbound_box_h2,20
class BoundBox {BoundBox7,100
  const int nspawn;                                             //!< Threshold of NBODY for spawning new threadsnspawn9,126
  struct BodiesRecursion {BodiesRecursion12,297
    B_iter BiBegin;                                             //!< Begin iterator of bodiesBiBegin13,324
    B_iter BiEnd;                                               //!< End iterator of bodiesBiEnd14,418
    Bounds & bounds;                                            //!< Bounds : Contains Xmin, Xmaxbounds15,510
    int nspawn;                                                 //!< Threshold of NBODY for spawning new threadsnspawn16,608
    BodiesRecursion(B_iter _BiBegin, B_iter _BiEnd, Bounds & _bounds, int _nspawn) : // ConstructorBodiesRecursion17,721
    void operator() () {                                        // Overload operator()operator ()19,920
  struct CellsRecursion {CellsRecursion42,2753
    C_iter CiBegin;                                             //!< Begin iterator of cellsCiBegin43,2779
    C_iter CiEnd;                                               //!< End iterator of cellsCiEnd44,2872
    Bounds & bounds;                                            //!< Bounds : Contains Xmin, Xmaxbounds45,2963
    int nspawn;                                                 //!< Threshold of NBODY for spawning new threadsnspawn46,3061
    CellsRecursion(C_iter _CiBegin, C_iter _CiEnd, Bounds & _bounds, int _nspawn) : // ConstructorCellsRecursion47,3174
    void operator() () {                                        // Overload operator()operator ()49,3372
  BoundBox(int _nspawn) : nspawn(_nspawn) {}                    // Initialize variablesBoundBox73,5256
  Bounds getBounds(Bodies & bodies) {getBounds76,5379
  Bounds getBounds(Bodies bodies, Bounds bounds) {getBounds91,6476
  Bounds getBounds(Cells cells) {getBounds100,7027
  Bounds getBounds(Cells cells, Bounds bounds) {getBounds115,8115

include/kahan.h,2353
#define kahan_hkahan_h2,16
#define __host____host__5,71
#define __device____device__6,88
#define __forceinline____forceinline__7,107
struct kahan {kahan11,204
  T s;s12,219
  T c;c13,226
  kahan(){}                                                     // Default constructorkahan15,271
  kahan(const T &v) {                                           // Copy constructor (scalar)kahan17,396
  kahan(const kahan &v) {                                       // Copy constructor (structure)kahan22,553
  ~kahan(){}                                                    // Destructor~kahan27,717
  const kahan &operator=(const T v) {                           // Scalar assignmentoperator =29,833
  const kahan &operator+=(const T v) {                          // Scalar compound assignment (add)operator +=35,1000
  const kahan &operator-=(const T v) {                          // Scalar compound assignment (subtract)operator -=43,1226
  const kahan &operator*=(const T v) {                          // Scalar compound assignment (multiply)operator *=51,1460
  const kahan &operator/=(const T v) {                          // Scalar compound assignment (divide)operator /=57,1650
  const kahan &operator=(const kahan & v) {                     // Vector assignmentoperator =63,1838
  const kahan &operator+=(const kahan & v) {                    // Vector compound assignment (add)operator +=69,2009
  const kahan &operator-=(const kahan & v) {                    // Vector compound assignment (subtract)operator -=81,2301
  const kahan &operator*=(const kahan & v) {                    // Vector compound assignment (multiply)operator *=93,2602
  const kahan &operator/=(const kahan & v) {                    // Vector compound assignment (divide)operator /=99,2812
  kahan operator-() const {                                     // Vector arithmetic (negation)operator -105,3020
  operator       T ()       {return s+c;}                       // Type-casting (lvalue)operator T112,3225
  operator const T () const {return s+c;}                       // Type-casting (rvalue) operator const T114,3352
  friend std::ostream &operator<<(std::ostream & s, const kahan & v) { // Output streamoperator <<115,3442
  friend std::istream &operator>>(std::istream & s, kahan & v) { // Input streamoperator >>119,3570

include/align.h,292
#define align_halign_h2,16
struct AlignedAllocator : public std::allocator<T> {AlignedAllocator7,107
  struct rebind {rebind9,184
    typedef AlignedAllocator<U, NALIGN> other;other10,202
  T * allocate(size_t n) {allocate13,255
  void deallocate(T * p, size_t) {deallocate21,480

include/verify.h,619
#define verify_hverify_h2,17
class Verify {Verify6,74
  double getSumScalar(Bodies & bodies) {getSumScalar9,160
  double getNrmScalar(Bodies & bodies) {getNrmScalar18,708
  double getDifScalar(Bodies & bodies, Bodies & bodies2) {getDifScalar27,1259
  double getRelScalar(Bodies & bodies, Bodies & bodies2) {getRelScalar37,1957
  double getNrmVector(Bodies & bodies) {getNrmVector48,2699
  double getDifVector(Bodies & bodies, Bodies & bodies2) {getDifVector59,3428
  double getRelVector(Bodies & bodies, Bodies & bodies2) {getRelVector71,4316
  void print(std::string title, double v) {print86,5434

include/simdvec.h,1186
#define simdvec_hsimdvec_h2,18
struct SIMD {SIMD5,72
  static inline T setBody(B_iter, int) {setBody6,86
  static inline T setIndex(int) {setIndex10,154
struct SIMD<T,D,16> {SIMD16,246
  static inline T setBody(B_iter B, int i) {setBody17,268
  static inline T setIndex(int i) {setIndex24,569
struct SIMD<T,D,8> {SIMD30,732
  static inline T setBody(B_iter B, int i) {setBody31,753
  static inline T setIndex(int i) {setIndex36,931
struct SIMD<T,D,4> {SIMD42,1056
  static inline T setBody(B_iter B, int i) {setBody43,1077
  static inline T setIndex(int i) {setIndex47,1196
struct SIMD<T,D,2> {SIMD53,1305
  static inline T setBody(B_iter B, int i) {setBody54,1326
  static inline T setIndex(int i) {setIndex58,1421
struct SIMD<T,3,16> {SIMD64,1515
  static inline T setBody(B_iter B, int i) {setBody65,1537
struct SIMD<T,3,8> {SIMD74,1853
  static inline T setBody(B_iter B, int i) {setBody75,1874
struct SIMD<T,3,4> {SIMD82,2068
  static inline T setBody(B_iter B, int i) {setBody83,2089
struct SIMD<T,3,2> {SIMD89,2228
  static inline T setBody(B_iter B, int i) {setBody90,2249
kreal_t transpose(ksimdvec v, int i) {transpose96,2346

include/build_tree_omp.h,1099
#define build_tree_hbuild_tree_h2,21
int omp_get_num_threads() {return 1;}omp_get_num_threads8,138
int omp_get_thread_num() {return 0;}omp_get_thread_num9,176
class BuildTree {BuildTree14,244
  const int ncrit;ncrit16,271
  int maxlevel;maxlevel17,290
  Box bounds2box(Bounds bounds) {bounds2box21,371
  inline void getKey(Bodies &bodies, uint64_t * key, Bounds bounds, int level) {getKey36,1438
  void radixSort(uint64_t * key, int * value, uint64_t * buffer, int * permutation, int size) {radixSort59,3121
  void permute(Bodies & bodies, Bodies & buffer, int * index) {permute123,4954
  void bodies2leafs(Bodies & bodies, Cells & cells, Bounds bounds, int level) {bodies2leafs130,5145
  void leafs2cells(Cells & cells, Bounds bounds, int level) {leafs2cells160,5969
  void reverseOrder(Cells & cells, int * permutation) {reverseOrder200,7019
  BuildTree(int _ncrit, int) : ncrit(_ncrit), maxlevel(0) {}BuildTree214,7439
  Cells buildTree(Bodies & bodies, Bodies & buffer, Bounds bounds) {buildTree216,7501
  void printTreeData(Cells & cells) {printTreeData265,8992

include/sort.h,490
#define sort_hsort_h2,15
int omp_get_num_threads() {return 1;}omp_get_num_threads5,65
int omp_get_thread_num() {return 0;}omp_get_thread_num6,103
class Sort {Sort12,217
  Bodies output;                                                //!< Output bufferoutput14,239
  void radixsort(int * key, int * value, int size) {radixsort18,375
  Bodies ibody(Bodies & input) {ibody88,5343
  Bodies irank(Bodies & input) {irank109,6933
  Bodies unsort(Bodies & bodies) {unsort130,8529

include/ewald.h,2409
#define ewald_hewald_h2,16
class Ewald {Ewald6,72
  struct Wave {Wave8,127
    vec3   K;                                                   //!< 3-D wave number vectorK9,143
    real_t REAL;                                                //!< real part of waveREAL10,235
    real_t IMAG;                                                //!< imaginary part of waveIMAG11,322
  typedef std::vector<Wave> Waves;                              //!< Vector of Wave typesWaves13,419
  typedef Waves::iterator   W_iter;                             //!< Iterator of Wave typesW_iter14,509
  const int ksize;                                              //!< Number of waves in Ewald summationksize17,611
  const real_t alpha;                                           //!< Scaling parameter for Ewald summationalpha18,715
  const real_t sigma;                                           //!< Scaling parameter for Ewald summationsigma19,822
  const real_t cutoff;                                          //!< Cutoff distancecutoff20,929
  const real_t cycle;                                           //!< Periodic cyclecycle21,1014
  void dft(Waves & waves, Bodies & bodies) const {dft25,1126
  void idft(Waves & waves, Bodies & bodies) const {idft41,2158
  Waves initWaves() const {initWaves60,3449
  void P2P(C_iter Ci, C_iter Cj, vec3 Xperiodic) const {P2P87,5543
  struct Neighbor {Neighbor110,7322
    Ewald * ewald;                                              //!< Ewald objectewald111,7342
    C_iter Ci;                                                  //!< Iterator of current target cellCi112,7424
    C_iter Cj;                                                  //!< Iterator of current source cellCj113,7525
    C_iter C0;                                                  //!< Iterator of first source cellC0114,7626
    Neighbor(Ewald * _ewald, C_iter _Ci, C_iter _Cj, C_iter _C0) :// ConstructorNeighbor115,7725
    void operator() () {                                        // Overload operator()operator ()117,7894
  Ewald(int _ksize, real_t _alpha, real_t _sigma, real_t _cutoff, real_t _cycle) :Ewald134,9115
  void realPart(Cells & cells, Cells & jcells) {realPart138,9328
  void selfTerm(Bodies & bodies) {selfTerm153,10392
  void wavePart(Bodies & bodies, Bodies & jbodies) {wavePart160,10742
  void print(int stringLength) {print177,12016

include/build_tree.h,0

include/vec.h,41745
#define vec_hvec_h2,14
#define NEWTON NEWTON4,47
class vec {vec9,211
  T data[N];data11,232
  vec(){}                                                       // Default constructorvec13,253
  vec(const T &v) {                                             // Copy constructor (scalar)vec14,340
  vec(const vec &v) {                                           // Copy constructor (vector)vec17,478
  ~vec(){}                                                      // Destructor~vec20,619
  const vec &operator=(const T v) {                             // Scalar assignmentoperator =21,697
  const vec &operator+=(const T v) {                            // Scalar compound assignment (add)operator +=25,845
  const vec &operator-=(const T v) {                            // Scalar compound assignment (subtract)operator -=29,1009
  const vec &operator*=(const T v) {                            // Scalar compound assignment (multiply)operator *=33,1178
  const vec &operator/=(const T v) {                            // Scalar compound assignment (divide)operator /=37,1347
  const vec &operator>=(const T v) {                            // Scalar compound assignment (greater than)operator >=41,1514
  const vec &operator<=(const T v) {                            // Scalar compound assignment (less than)operator <=45,1687
  const vec &operator&=(const T v) {                            // Scalar compound assignment (bitwise and)operator &=49,1857
  const vec &operator|=(const T v) {                            // Scalar compound assignment (bitwise or)operator |=53,2029
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =57,2200
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=61,2351
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=65,2518
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=69,2690
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=73,2862
  const vec &operator>=(const vec & v) {                        // Vector compound assignment (greater than)operator >=77,3032
  const vec &operator<=(const vec & v) {                        // Vector compound assignment (less than)operator <=81,3208
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=85,3381
  const vec &operator|=(const vec & v) {                        // Vector compound assignment (bitwise or)operator |=89,3556
  vec operator+(const T v) const {                              // Scalar arithmetic (add)operator +93,3730
  vec operator-(const T v) const {                              // Scalar arithmetic (subtract)operator -96,3853
  vec operator*(const T v) const {                              // Scalar arithmetic (multiply)operator *99,3981
  vec operator/(const T v) const {                              // Scalar arithmetic (divide)operator /102,4109
  vec operator>(const T v) const {                              // Scalar arithmetic (greater than)operator >105,4235
  vec operator<(const T v) const {                              // Scalar arithmetic (less than)operator <108,4367
  vec operator&(const T v) const {                              // Scalar arithmetic (bitwise and)operator &111,4496
  vec operator|(const T v) const {                              // Scalar arithmetic (bitwise or)operator |114,4627
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +117,4757
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -120,4880
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *123,5008
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /126,5136
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >129,5262
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <132,5394
  vec operator&(const vec & v) const {                          // Vector arithmetic (bitwise and)operator &135,5523
  vec operator|(const vec & v) const {                          // Vector arithmetic (bitwise or)operator |138,5654
  vec operator-() const {                                       // Vector arithmetic (negation)operator -141,5784
  T &operator[](int i) {                                        // Indexing (lvalue)operator []146,5963
  const T &operator[](int i) const {                            // Indexing (rvalue)operator []149,6072
  operator       T* ()       {return data;}                     // Type-casting (lvalue)operator T*152,6181
  operator const T* () const {return data;}                     // Type-casting (rvalue)operator const T*153,6270
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<154,6359
  friend T sum(const vec & v) {                                 // Sum vectorsum158,6523
  friend T norm(const vec & v) {                                // L2 norm squarednorm163,6680
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin168,6849
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax173,7037
  friend T min(const vec & v) {                                 // Reduce minimummin178,7225
  friend T max(const vec & v) {                                 // Reduce maximummax183,7409
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt188,7593
  friend int wrap(vec & v, const T & w) {                       // Wrap around periodic boundarywrap193,7778
  friend void unwrap(vec & v, const T & w, const int & iw) {    // Undo wrap around periodic boundaryunwrap207,8068
class vec {vec216,8320
  T data[N];data218,8341
  vec(){}                                                       // Default constructorvec221,8400
  vec(const T &v) {                                             // Copy constructor (scalar)vec223,8525
  vec(const vec &v) {                                           // Copy constructor (vector)vec227,8706
  vec(const float4 &v) {                                        // Copy constructor (float4)vec231,8887
  vec(const float x, const float y, const float z, const float w) {// Copy constructor (4 floats)vec238,9098
  vec(const float x, const float y, const float z) {            // Copy constructor (3 floats)vec245,9306
  ~vec(){}                                                      // Destructor~vec251,9494
  const vec &operator=(const T v) {                             // Scalar assignmentoperator =253,9610
  const vec &operator+=(const T v) {                            // Scalar compound assignment (add)operator +=258,9801
  const vec &operator-=(const T v) {                            // Scalar compound assignment (subtract)operator -=263,10004
  const vec &operator*=(const T v) {                            // Scalar compound assignment (multiply)operator *=268,10212
  const vec &operator/=(const T v) {                            // Scalar compound assignment (divide)operator /=273,10420
  const vec &operator>=(const T v) {                            // Scalar compound assignment (greater than)operator >=278,10626
  const vec &operator<=(const T v) {                            // Scalar compound assignment (less than)operator <=283,10837
  const vec &operator&=(const T v) {                            // Scalar compound assignment (bitwise and)operator &=288,11045
  const vec &operator|=(const T v) {                            // Scalar compound assignment (bitwise or)operator |=293,11256
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =298,11465
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=303,11656
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=308,11859
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=313,12067
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=318,12275
  const vec &operator>=(const vec & v) {                        // Vector compound assignment (greater than)operator >=323,12481
  const vec &operator<=(const vec & v) {                        // Vector compound assignment (less than)operator <=328,12692
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=333,12900
  const vec &operator|=(const vec & v) {                        // Vector compound assignment (bitwise or)operator |=338,13111
  vec operator+(const T v) const {                              // Scalar arithmetic (add)operator +343,13320
  vec operator-(const T v) const {                              // Scalar arithmetic (subtract)operator -347,13481
  vec operator*(const T v) const {                              // Scalar arithmetic (multiply)operator *351,13647
  vec operator/(const T v) const {                              // Scalar arithmetic (divide)operator /355,13813
  vec operator>(const T v) const {                              // Scalar arithmetic (greater than)operator >359,13977
  vec operator<(const T v) const {                              // Scalar arithmetic (less than)operator <363,14147
  vec operator&(const T v) const {                              // Scalar arithmetic (bitwise and)operator &367,14314
  vec operator|(const T v) const {                              // Scalar arithmetic (bitwise or)operator |371,14483
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +375,14651
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -379,14812
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *383,14978
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /387,15144
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >391,15308
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <395,15478
  vec operator&(const vec & v) const {                          // Vector arithmetic (bitwise and)operator &399,15645
  vec operator|(const vec & v) const {                          // Vector arithmetic (bitwise or)operator |403,15814
  vec operator-() const {                                       // Vector arithmetic (negation)operator -407,15982
  T &operator[](int i) {                                        // Indexing (lvalue)operator []413,16200
  const T &operator[](int i) const {                            // Indexing (rvalue)operator []417,16347
  operator       T* ()       {return data;}                     // Type-casting (lvalue)operator T*421,16494
  friend T min(const vec & v) {                                 // Reduce minimummin423,16621
  friend T max(const vec & v) {                                 // Reduce maximummax429,16836
  operator const T* () const {return data;}                     // Type-casting (rvalue)operator const T*434,17050
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<436,17177
  friend T sum(const vec & v) {                                 // Sum vectorsum441,17379
  friend T norm(const vec & v) {                                // L2 norm squarednorm445,17546
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin449,17694
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax455,17920
  friend T min(const vec & v) {                                 // Reduce minimummin461,18146
  friend T max(const vec & v) {                                 // Reduce maximummax467,18368
  friend vec abs(const vec & v) {                               // Absolute valueabs473,18581
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt479,18770
  friend int wrap(vec & v, const T & w) {                       // Wrap around periodic boundarywrap485,18978
  friend void unwrap(vec & v, const T & w, const int & iw) {    // Undo wrap around periodic boundaryunwrap500,19306
class vec<16,float> {vec511,19558
  __m512 data;data513,19589
  vec(){}                                                       // Default constructorvec515,19612
  vec(const float v) {                                          // Copy constructor scalarvec516,19699
  vec(const __m512 v) {                                         // Copy constructor SIMD registervec519,19824
  vec(const vec & v) {                                          // Copy constructor vectorvec522,19940
  vec(const float a, const float b, const float c, const float d,vec525,20054
  ~vec(){}                                                      // Destructor~vec531,20420
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =532,20498
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =536,20635
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=540,20761
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=544,20922
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=548,21088
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=552,21254
  const vec &operator&=(const __mmask16 & v) {                  // Vector compound assignment (and)operator &=556,21418
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +560,21599
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -563,21738
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *566,21882
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /569,22026
  __mmask16 operator>(const vec & v) const {                    // Vector arithmetic (greater than)operator >572,22168
  __mmask16 operator<(const vec & v) const {                    // Vector arithmetic (less than)operator <575,22330
  vec operator-() const {                                       // Vector arithmetic (negation)operator -578,22489
  float &operator[](int i) {                                    // Indexing (lvalue)operator []581,22646
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []584,22766
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<587,22886
  friend float sum(const vec & v) {                             // Sum vectorsum591,23051
  friend float norm(const vec & v) {                            // L2 norm squarednorm594,23174
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin598,23348
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax601,23486
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt604,23624
class vec<8,double> {vec616,24004
  __m512d data;data618,24035
  vec(){}                                                       // Default constructorvec620,24059
  vec(const double v) {                                         // Copy constructor scalarvec621,24146
  vec(const __m512d v) {                                        // Copy constructor SIMD registervec624,24271
  vec(const vec & v) {                                          // Copy constructor vectorvec627,24387
  vec(const double a, const double b, const double c, const double d,vec630,24501
  ~vec(){}                                                      // Destructor~vec634,24727
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =635,24805
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =639,24942
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=643,25068
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=647,25229
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=651,25395
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=655,25561
  const vec &operator&=(const __mmask8 & v) {                   // Vector compound assignment (and)operator &=659,25725
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +663,25906
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -666,26045
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *669,26189
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /672,26333
  __mmask8 operator>(const vec & v) const {                     // Vector arithmetic (greater than)operator >675,26475
  __mmask8 operator<(const vec & v) const {                     // Vector arithmetic (less than)operator <678,26637
  vec operator-() const {                                       // Vector arithmetic (negation)operator -681,26796
  double &operator[](int i) {                                   // Indexing (lvalue)operator []684,26953
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []687,27074
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<690,27195
  friend double sum(const vec & v) {                            // Sum vectorsum694,27359
  friend double norm(const vec & v) {                           // L2 norm squarednorm697,27482
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin701,27658
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax704,27796
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt707,27934
class vec<8,float> {vec725,28458
  __m256 data;data727,28488
  vec(){}                                                       // Default constructorvec729,28511
  vec(const float v) {                                          // Copy constructor scalarvec730,28598
  vec(const __m256 v) {                                         // Copy constructor SIMD registervec733,28723
  vec(const vec & v) {                                           // Copy constructor vectorvec736,28839
  vec(const float a, const float b, const float c, const float d,vec739,28954
  ~vec(){}                                                      // Destructor~vec743,29172
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =744,29250
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =748,29387
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=752,29513
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=756,29674
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=760,29840
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=764,30006
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=768,30170
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +772,30339
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -775,30478
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *778,30622
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /781,30766
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >784,30908
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <787,31067
  vec operator-() const {                                       // Vector arithmetic (negation)operator -790,31223
  float &operator[](int i) {                                    // Indexing (lvalue)operator []793,31380
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []796,31500
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<799,31620
  friend float sum(const vec & v) {                             // Sum vectorsum803,31784
  friend float norm(const vec & v) {                            // L2 norm squarednorm810,32071
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin818,32405
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax821,32543
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt824,32681
class vec<4,double> {vec836,33057
  __m256d data;data838,33088
  vec(){}                                                       // Default constructorvec840,33112
  vec(const double v) {                                         // Copy constructor scalarvec841,33199
  vec(const __m256d v) {                                        // Copy constructor SIMD registervec844,33324
  vec(const vec & v) {                                          // Copy constructor vectorvec847,33440
  vec(const double a, const double b, const double c, const double d) {// Copy constructor (component-wise)vec850,33554
  ~vec(){}                                                      // Destructor~vec853,33702
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =854,33780
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =858,33917
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=862,34043
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=866,34204
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=870,34370
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=874,34536
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=878,34700
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +882,34869
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -885,35008
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *888,35152
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /891,35296
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >894,35438
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <897,35597
  vec operator-() const {                                       // Vector arithmetic (negation)operator -900,35753
  double &operator[](int i) {                                   // Indexing (lvalue)operator []903,35910
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []906,36031
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<909,36152
  friend double sum(const vec & v) {                            // Sum vectorsum913,36316
  friend double norm(const vec & v) {                           // L2 norm squarednorm919,36567
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin927,36904
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax930,37042
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt933,37180
class vec<4,double> {vec950,37711
  vector4double data;data952,37742
  vec(){}                                                       // Default constructorvec954,37772
  vec(const double v) {                                         // Copy constructor scalarvec955,37859
  vec(const vector4double v) {                                  // Copy constructor SIMD registervec959,38001
  vec(const vec & v) {                                          // Copy constructor vectorvec962,38117
  vec(const double a, const double b, const double c, const double d) {// Copy constructor (component-wise)vec965,38231
  ~vec(){}                                                      // Destructor~vec969,38396
  const vec &operator=(double v) {                              // Scalar assignmentoperator =970,38474
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =975,38628
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=979,38754
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=983,38909
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=987,39069
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=991,39229
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=995,39395
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +999,39558
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -1002,39691
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *1005,39829
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /1008,39967
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >1011,40111
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <1014,40255
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1017,40396
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1020,40546
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1023,40667
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<1026,40788
  friend double sum(const vec & v) {                            // Sum vectorsum1030,40969
  friend double norm(const vec & v) {                           // L2 norm squarednorm1035,41131
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin1040,41305
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax1045,41493
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt1050,41681
class vec<4,float> {vec1066,42093
  __m128 data;data1068,42123
  vec(){}                                                       // Default constructorvec1070,42146
  vec(const float v) {                                          // Copy constructor scalarvec1071,42233
  vec(const __m128 v) {                                         // Copy constructor SIMD registervec1074,42355
  vec(const vec & v) {                                          // Copy constructor vectorvec1077,42471
  vec(const float a, const float b, const float c, const float d) {// Copy constructor (component-wise)vec1080,42585
  ~vec(){}                                                      // Destructor~vec1083,42726
  const vec &operator=(const float v) {                         // Scalar assignmentoperator =1084,42804
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =1088,42938
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=1092,43064
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=1096,43222
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=1100,43385
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=1104,43548
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=1108,43709
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +1112,43875
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -1115,44011
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *1118,44152
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /1121,44293
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >1124,44432
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <1127,44579
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1130,44723
  float &operator[](int i) {                                    // Indexing (lvalue)operator []1133,44874
  const float &operator[](int i) const {                        // Indexing (rvalue)operator []1136,44994
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<1139,45114
  friend float sum(const vec & v) {                             // Sum vectorsum1143,45278
  friend float norm(const vec & v) {                            // L2 norm squarednorm1148,45472
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin1154,45705
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax1157,45840
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt1160,45975
class vec<2,double> {vec1172,46345
  __m128d data;data1174,46376
  vec(){}                                                       // Default constructorvec1176,46400
  vec(const double v) {                                         // Copy constructor scalarvec1177,46487
  vec(const __m128d v) {                                        // Copy constructor SIMD registervec1180,46609
  vec(const vec & v) {                                          // Copy constructor vectorvec1183,46725
  vec(const double a, const double b) {                         // Copy constructor (component-wise)vec1186,46839
  ~vec(){}                                                      // Destructor~vec1189,46973
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =1190,47051
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =1194,47185
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=1198,47311
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=1202,47469
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=1206,47632
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=1210,47795
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=1214,47956
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +1218,48122
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -1221,48258
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *1224,48399
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /1227,48540
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >1230,48679
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <1233,48826
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1236,48970
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1239,49121
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1242,49242
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<1245,49363
  friend double sum(const vec & v) {                            // Sum vectorsum1249,49527
  friend double norm(const vec & v) {                           // L2 norm squarednorm1253,49688
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin1258,49888
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax1261,50023
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt1264,50158
class vec<2,double> {vec1283,50682
  __m128d data;data1285,50713
  vec(){}                                                       // Default constructorvec1287,50737
  vec(const double v) {                                         // Copy constructor scalarvec1288,50824
  vec(const __m128d v) {                                        // Copy constructor SIMD registervec1291,50947
  vec(const vec & v) {                                          // Copy constructor vectorvec1294,51063
  vec(const double a, const double b) {                         // Copy constructor (component-wise)vec1297,51177
  ~vec(){}                                                      // Destructor~vec1300,51310
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =1301,51388
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =1305,51523
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=1309,51649
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=1313,51807
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=1317,51970
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=1321,52133
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=1325,52311
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +1329,52477
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -1332,52613
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *1335,52754
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /1338,52895
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >1341,53051
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <1344,53198
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1347,53342
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1350,53493
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1353,53614
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<1356,53735
  friend double sum(const vec & v) {                            // Sum vectorsum1360,53899
  friend double norm(const vec & v) {                           // L2 norm squarednorm1363,54005
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin1366,54130
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax1369,54265
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt1372,54400
class vec<2,double> {vec1388,54822
  double _Complex data;data1390,54853
  vec(){}                                                       // Default constructorvec1392,54885
  vec(const double v) {                                         // Copy constructor scalarvec1393,54972
  vec(const double _Complex v) {                                // Copy constructor SIMD registervec1396,55092
  vec(const vec & v) {                                          // Copy constructor vectorvec1399,55208
  vec(const double a, const double b) {                         // Copy constructor (component-wise)vec1402,55322
  ~vec(){}                                                      // Destructor~vec1405,55452
  const vec &operator=(const double v) {                        // Scalar assignmentoperator =1406,55530
  const vec &operator=(const vec & v) {                         // Vector assignmentoperator =1410,55662
  const vec &operator+=(const vec & v) {                        // Vector compound assignment (add)operator +=1414,55788
  const vec &operator-=(const vec & v) {                        // Vector compound assignment (subtract)operator -=1418,55943
  const vec &operator*=(const vec & v) {                        // Vector compound assignment (multiply)operator *=1422,56103
  const vec &operator/=(const vec & v) {                        // Vector compound assignment (divide)operator /=1426,56263
  const vec &operator&=(const vec & v) {                        // Vector compound assignment (bitwise and)operator &=1430,56429
  vec operator+(const vec & v) const {                          // Vector arithmetic (add)operator +1436,56696
  vec operator-(const vec & v) const {                          // Vector arithmetic (subtract)operator -1439,56829
  vec operator*(const vec & v) const {                          // Vector arithmetic (multiply)operator *1442,56967
  vec operator/(const vec & v) const {                          // Vector arithmetic (divide)operator /1445,57105
  vec operator>(const vec & v) const {                          // Vector arithmetic (greater than)operator >1448,57249
  vec operator<(const vec & v) const {                          // Vector arithmetic (less than)operator <1454,57543
  vec operator-() const {                                       // Vector arithmetic (negation)operator -1460,57834
  double &operator[](int i) {                                   // Indexing (lvalue)operator []1463,57965
  const double &operator[](int i) const {                       // Indexing (rvalue)operator []1468,58118
  friend std::ostream &operator<<(std::ostream & s, const vec & v) {// Component-wise output streamoperator <<1473,58271
  friend double sum(const vec & v) {                            // Sum vectorsum1477,58435
  friend double norm(const vec & v) {                           // L2 norm squarednorm1480,58541
  friend vec min(const vec & v, const vec & w) {                // Element-wise minimummin1483,58666
  friend vec max(const vec & v, const vec & w) {                // Element-wise maximummax1486,58812
  friend vec rsqrt(const vec & v) {                             // Reciprocal square rootrsqrt1489,58958
