### choose C++ compiler
#CXX	= mpicxx -ggdb3 -Wall -Wextra -O3 -mavx -ffast-math -funroll-loops -fopenmp # GCC
#CXX	= mpicxx -ggdb3 -Wall -Wextra -O3 -mavx -Wa,-q -ffast-math -funroll-loops -fopenmp # GCC (OS X)
#CXX	= CC -ggdb3 -Wall -Wextra -O3 -mavx -ffast-math -funroll-loops -fopenmp -dynamic # GCC (Cray)
#CXX	= mpicxx -xHOST -Wall -O3 -funroll-loops -finline-functions -ansi-alias -openmp # Intel MPI
#CXX	= icpc -Wall -xHOST -O3 -funroll-loops -finline-functions -ansi-alias -openmp -I/usr/include/x86_64-linux-gnu/c++/4.8 # Intel
#CXX	= CC -Wall -O3 -funroll-loops -finline-functions -ansi-alias -openmp -dynamic # Intel (Cray)
#CXX	= icpc -Wall -mmic -O3 -L/opt/intel/tbb/lib/mic -lpthread # Intel MIC
#CXX	= mpic++ -Wall -mmic -O3 -L/opt/apps/intel/13/composer_xe_2013.2.146/tbb/lib/mic # Stampede
#CXX	= mpiFCCpx -Kfast,openmp # K computer / FX10 (cross compiler)
#CXX	= mpiFCC -Kfast,openmp # K computer / FX10 (interactive)
#CXX	= tau_cxx.sh # TAU compiler instrumentation

### choose fortran compiler
#FC = mpif90 -ggdb3 -O3 -ffast-math -funroll-loops -cpp # -lmpi_cxx # gfortran
#FC = ftn -ggdb3 -O3 -ffast-math -funroll-loops -cpp # -lmpi_cxx # gfortran (Cray)
#FC = mpif90 -O3 -xHOST -funroll-loops -finline-functions -ansi-alias -cpp -openmp # Intel
#FC = ftn -O3 -funroll-loops -finline-functions -ansi-alias -cpp -openmp # Intel (Cray)

### Base flags
AM_CXXFLAGS =
AM_CPPFLAGS = -I../include -I../uniform

### Floating point precision
if EXAFMM_SINGLE
else
AM_CPPFLAGS += -DFP64
endif

### SIMD flags
if USE_SIMD
AM_CPPFLAGS += -DUSE_SIMD
if HAVE_AVX
AM_CXXFLAGS += $(AVX_CXXFLAGS) # Use AVX intrinsics
else
if HAVE_SSE3
AM_CXXFLAGS += $(SSE3_CXXFLAGS) # Use SSE3 intrinsics
else 
if HAVE_NEON
AM_CXXFLAGS += $(NEON_CXXFLAGS) # Use Neon intrinsics
endif
endif
endif
endif

# Kahan summation
if USE_KAHAN
AM_CPPFLAGS += -DKAHAN
endif

# Use weights for partitioning
if USE_WEIGHT
AM_CPPFLAGS += -DUSE_WEIGHT
endif

### Debugging flags
AM_CXXFLAGS	+= -DASSERT # Turns on asserttions (otherwise define an empty macro function)
#AM_CXXFLAGS	+= -DCOUNT_KERNEL # Count number of kernel calls to P2P and M2L (slows down execution)
#AM_CXXFLAGS	+= -DCOUNT_LIST # Count size of P2P and M2L interaction lists per cell (slows down execution)

### Thread libraries
if OPENMP
AM_CXXFLAGS += $(OPENMP_CFLAGS)
endif
if WITH_TBB
LIBS += -ltbb
endif
if WITH_CILK
LIBS += -lcilkrts
endif
if WITH_MTHREAD
LIBS += -lmyth-native
endif
if WITH_QTHREAD
LIBS += -lqthread
endif
#AM_CXXFLAGS	+= -DWITH_OPENMP # OpenMP is included in most modern compilers

### DAG Recorder flags : DAG Recorder is part of MassiveThreads available from http://code.google.com/p/massivethreads/
#AM_CXXFLAGS	+= -DDAG_RECORDER=2 -ldr

### PAPI flags : set environment value to (export EXAFMM_PAPI_EVENTS="PAPI_L2_DCM,PAPI_L2_DCA,PAPI_TLB_DM") or something else
#AM_CXXFLAGS	+= -DPAPI -lpapi

### Trace flags : This tracing tool is part of ExaFMM
#AM_CXXFLAGS	+= -DTRACE

### Tree building flags
#AM_CXXFLAGS	+= -DSAKURA -lsakura # Sakura is a library for fast tree building using Cilk

AM_MAKEFLAGS = -s

help:
	@make -C .. help
buildbot:
	@make -C .. buildbot
cleanbin:
	@make -C .. cleanbin
cleandat:
	@make -C .. cleandat
cleanlib:
	@make -C .. cleanlib
cleanall:
	@make -C .. cleanall
revert:
	@make -C .. revert
save:
	@make -C .. save
